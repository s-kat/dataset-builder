{"_args_converter": {"line": 816, "args": [{"func_args": {"args": "()"}, "return_value": "()"}], "text": "def _args_converter(args: Iterable[str]) -> Tuple[str, ...]:\n    return tuple(args)"}, "_get_plugin_specs_as_list": {"line": 715, "args": [{"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "None"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}], "text": "def _get_plugin_specs_as_list(\n    specs: Union[None, types.ModuleType, str, Sequence[str]]\n) -> List[str]:\n    \"\"\"Parse a plugins specification into a list of plugin names.\"\"\"\n    # None means empty.\n    if specs is None:\n        return []\n    # Workaround for #3899 - a submodule which happens to be called \"pytest_plugins\".\n    if isinstance(specs, types.ModuleType):\n        return []\n    # Comma-separated list.\n    if isinstance(specs, str):\n        return specs.split(\",\") if specs else []\n    # Direct specification.\n    if isinstance(specs, collections.abc.Sequence):\n        return list(specs)\n    raise UsageError(\n        \"Plugins may be specified as a sequence or a ','-separated string of plugin names. Got: %r\"\n        % specs\n    )"}, "_assertion_supported": {"line": 1511, "args": [{"func_args": {}, "return_value": "True"}], "text": "def _assertion_supported() -> bool:\n    try:\n        assert False\n    except AssertionError:\n        return True\n    else:\n        return False"}, "scope2index": {"line": 803, "args": [{"func_args": {"scope": "'session'", "descr": "\"Fixture 'pytestconfig'\"", "where": "None"}, "return_value": "0"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'capfd'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'capfdbinary'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'capsys'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'capsysbinary'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'tmp_path'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'session'", "descr": "\"Fixture 'tmp_path_factory'\"", "where": "None"}, "return_value": "0"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'tmpdir'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'session'", "descr": "\"Fixture 'tmpdir_factory'\"", "where": "None"}, "return_value": "0"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'monkeypatch'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'recwarn'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'record_property'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'session'", "descr": "\"Fixture 'record_testsuite_property'\"", "where": "None"}, "return_value": "0"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'record_xml_attribute'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'session'", "descr": "\"Fixture 'doctest_namespace'\"", "where": "None"}, "return_value": "0"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'cache'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'caplog'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'term'\"", "where": "'todotxt_machine/test/terminal_operations_test.py'"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'today'\"", "where": "'todotxt_machine/test/todo_test.py'"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'todos'\"", "where": "'todotxt_machine/test/todo_test.py'"}, "return_value": "4"}], "text": "def scope2index(scope: str, descr: str, where: Optional[str] = None) -> int:\n    \"\"\"Look up the index of ``scope`` and raise a descriptive value error\n    if not defined.\"\"\"\n    strscopes: Sequence[str] = scopes\n    try:\n        return strscopes.index(scope)\n    except ValueError:\n        fail(\n            \"{} {}got an unexpected scope value '{}'\".format(\n                descr, f\"from {where} \" if where else \"\", scope\n            ),\n            pytrace=False,\n        )"}, "sort_by_scope": {"line": 1539, "args": [{"func_args": {"arg_name": "'term'"}, "return_value": "4"}, {"func_args": {"arg_name": "'term'"}, "return_value": "4"}, {"func_args": {"arg_name": "'term'"}, "return_value": "4"}, {"func_args": {"arg_name": "'capsys'"}, "return_value": "4"}, {"func_args": {"arg_name": "'request'"}, "return_value": "4"}, {"func_args": {"arg_name": "'term'"}, "return_value": "4"}, {"func_args": {"arg_name": "'term'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'today'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'today'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'today'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}, {"func_args": {"arg_name": "'todos'"}, "return_value": "4"}], "text": "def sort_by_scope(arg_name: str) -> int:\n            try:\n                fixturedefs = arg2fixturedefs[arg_name]\n            except KeyError:\n                return scopes.index(\"function\")\n            else:\n                return fixturedefs[-1].scopenum"}, "scopemismatch": {"line": 799, "args": [{"func_args": {"currentscope": "'function'", "newscope": "'function'"}, "return_value": "False"}], "text": "def scopemismatch(currentscope: \"_Scope\", newscope: \"_Scope\") -> bool:\n    return scopes.index(newscope) > scopes.index(currentscope)"}, "pluralize": {"line": 1350, "args": [{"func_args": {"count": "1", "noun": "'error'"}, "return_value": "(1, 'error')"}], "text": "def pluralize(count: int, noun: str) -> Tuple[int, str]:\n    # No need to pluralize words such as `failed` or `passed`.\n    if noun not in [\"error\", \"warnings\", \"test\"]:\n        return count, noun\n\n    # The `warnings` key is plural. To avoid API breakage, we keep it that way but\n    # set it to singular here so we can determine plurality in the same way as we do\n    # for `error`.\n    noun = noun.replace(\"warnings\", \"warning\")\n\n    return count, noun + \"s\" if count != 1 else noun"}, "format_session_duration": {"line": 1377, "args": [{"func_args": {"seconds": "0.6941516399383545"}, "return_value": "'0.69s'"}], "text": "def format_session_duration(seconds: float) -> str:\n    \"\"\"Format the given seconds in a human readable manner to show in the final summary.\"\"\"\n    if seconds < 60:\n        return f\"{seconds:.2f}s\"\n    else:\n        dt = datetime.timedelta(seconds=int(seconds))\n        return f\"{seconds:.2f}s ({dt})\""}, "_get_auto_indent": {"line": 113, "args": [{"func_args": {"auto_indent_option": "None"}, "return_value": "0"}, {"func_args": {"auto_indent_option": "None"}, "return_value": "0"}]}, "_get_stderr_fileno": {"line": 68, "args": [{"func_args": {}, "return_value": "2"}, {"func_args": {}, "return_value": "2"}]}, "get_terminal_width": {"line": 15, "args": [{"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}], "text": "def get_terminal_width() -> int:\n    width, _ = shutil.get_terminal_size(fallback=(80, 24))\n\n    # The Windows get_terminal_size may be bogus, let's sanify a bit.\n    if width < 40:\n        width = 80\n\n    return width"}, "get_dirs_from_args": {"line": 134, "args": [{"func_args": {"args": "[]"}, "return_value": "[]"}], "text": "def get_dirs_from_args(args: Iterable[str]) -> List[Path]:\n    def is_option(x: str) -> bool:\n        return x.startswith(\"-\")\n\n    def get_file_part_from_node_id(x: str) -> str:\n        return x.split(\"::\")[0]\n\n    def get_dir_from_path(path: Path) -> Path:\n        if path.is_dir():\n            return path\n        return path.parent\n\n    def safe_exists(path: Path) -> bool:\n        # This can throw on paths that contain characters unrepresentable at the OS level,\n        # or with invalid syntax on Windows (https://bugs.python.org/issue35306)\n        try:\n            return path.exists()\n        except OSError:\n            return False\n\n    # These look like paths but may not exist\n    possible_paths = (\n        absolutepath(get_file_part_from_node_id(arg))\n        for arg in args\n        if not is_option(arg)\n    )\n\n    return [get_dir_from_path(path) for path in possible_paths if safe_exists(path)]"}, "parts": {"line": 420, "args": [{"func_args": {"s": "'/usr/app/src/test_repos/todotxt-machine/todotxt_machine/test/terminal_operations_test.py'"}, "return_value": "{'/usr/app', '/usr/app/src/test_repos', '/usr/app/src', '/usr/app/src/test_repos/todotxt-machine/todotxt_machine/test', '/', '/usr/app/src/test_repos/todotxt-machine/todotxt_machine', '/usr', '/usr/app/src/test_repos/todotxt-machine/todotxt_machine/test/terminal_operations_test.py', '/usr/app/src/test_repos/todotxt-machine'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/todotxt-machine/todotxt_machine/test/todo_test.py'"}, "return_value": "{'/usr/app/src/test_repos/todotxt-machine/todotxt_machine/test/todo_test.py', '/usr/app', '/usr/app/src/test_repos', '/usr/app/src', '/usr/app/src/test_repos/todotxt-machine/todotxt_machine/test', '/', '/usr/app/src/test_repos/todotxt-machine/todotxt_machine', '/usr', '/usr/app/src/test_repos/todotxt-machine'}"}], "text": "def parts(s: str) -> Set[str]:\n    parts = s.split(sep)\n    return {sep.join(parts[: i + 1]) or sep for i in range(len(parts))}"}, "_is_same": {"line": 558, "args": [{"func_args": {"f1": "'/usr/app/src/test_repos/todotxt-machine/todotxt_machine/test/terminal_operations_test.py'", "f2": "'/usr/app/src/test_repos/todotxt-machine/todotxt_machine/test/terminal_operations_test.py'"}, "return_value": "True"}, {"func_args": {"f1": "'/usr/app/src/test_repos/todotxt-machine/todotxt_machine/test/todo_test.py'", "f2": "'/usr/app/src/test_repos/todotxt-machine/todotxt_machine/test/todo_test.py'"}, "return_value": "True"}], "text": "def _is_same(f1: str, f2: str) -> bool:\n        return os.path.samefile(f1, f2)"}, "iscommentline": {"line": 162, "args": [{"func_args": {"line": "'[flake8]\\n'"}, "return_value": "False"}, {"func_args": {"line": "'ignore = E501\\n'"}, "return_value": "False"}, {"func_args": {"line": "'max-line-length = 100\\n'"}, "return_value": "False"}, {"func_args": {"line": "'exclude = .svn,CVS,.bzr,.hg,.git,__pycache,.venv,.cache,todotxt_machine/test/*\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\n'"}, "return_value": "True"}, {"func_args": {"line": "'[tox]\\n'"}, "return_value": "False"}, {"func_args": {"line": "'envlist = py27,py35,py34,flake8\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\n'"}, "return_value": "True"}, {"func_args": {"line": "'[testenv]\\n'"}, "return_value": "False"}, {"func_args": {"line": "'passenv = *\\n'"}, "return_value": "False"}, {"func_args": {"line": "'deps = pytest\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tviztracer \\n'"}, "return_value": "False"}, {"func_args": {"line": "'commands = viztracer --ignore_frozen --log_func_args --log_func_retval -o result0.json -- py.test\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\n'"}, "return_value": "True"}, {"func_args": {"line": "'[testenv:flake8]\\n'"}, "return_value": "False"}, {"func_args": {"line": "'deps = flake8\\n'"}, "return_value": "False"}, {"func_args": {"line": "'commands = flake8 todotxt_machine\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\n'"}, "return_value": "True"}, {"func_args": {"line": "'[tox:travis]\\n'"}, "return_value": "False"}, {"func_args": {"line": "'2.7 = py27\\n'"}, "return_value": "False"}, {"func_args": {"line": "'3.4 = py34, flake8\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\n'"}, "return_value": "True"}, {"func_args": {"line": "'[tool:pytest]\\n'"}, "return_value": "False"}, {"func_args": {"line": "'addopts = -rsx --exitfirst todotxt_machine/test/\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\n'"}, "return_value": "True"}, {"func_args": {"line": "'[bdist_wheel]\\n'"}, "return_value": "False"}, {"func_args": {"line": "'universal=1\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\n'"}, "return_value": "True"}, {"func_args": {"line": "'[pep8]\\n'"}, "return_value": "False"}, {"func_args": {"line": "'ignore=E501\\n'"}, "return_value": "False"}, {"func_args": {"line": "'max-line-length=100\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\n'"}, "return_value": "True"}, {"func_args": {"line": "'[flake8]\\n'"}, "return_value": "False"}, {"func_args": {"line": "'ignore=E501\\n'"}, "return_value": "False"}, {"func_args": {"line": "'max-line-length=100\\n'"}, "return_value": "False"}, {"func_args": {"line": "'exclude=.svn,CVS,.bzr,.hg,.git,__pycache,.venv,.cache,todotxt_machine/test/*\\n'"}, "return_value": "False"}], "text": "def iscommentline(line):\n    c = line.lstrip()[:1]\n    return c in COMMENTCHARS"}, "normalize_mark_list": {"line": 355, "args": [{"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}], "text": "def normalize_mark_list(mark_list: Iterable[Union[Mark, MarkDecorator]]) -> List[Mark]:\n    \"\"\"Normalize marker decorating helpers to mark objects.\n\n    :type List[Union[Mark, Markdecorator]] mark_list:\n    :rtype: List[Mark]\n    \"\"\"\n    extracted = [\n        getattr(mark, \"mark\", mark) for mark in mark_list\n    ]  # unpack MarkDecorator\n    for mark in extracted:\n        if not isinstance(mark, Mark):\n            raise TypeError(f\"got {mark!r} instead of Mark\")\n    return [x for x in extracted if isinstance(x, Mark)]"}, "iterparentnodeids": {"line": 44, "args": [{"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_init'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_init'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_init'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_init'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_init'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_init'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_init'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_init'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_init'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_init'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_init'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_init'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_init'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_init'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_foreground_color'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_foreground_color'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_foreground_color'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_foreground_color'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_foreground_color'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_foreground_color'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_foreground_color'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_foreground_color'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_foreground_color'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_foreground_color'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_foreground_color'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_foreground_color'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_foreground_color'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_foreground_color'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_move_cursor'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_length_ignoring_escapes'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_length_ignoring_escapes'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_length_ignoring_escapes'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_length_ignoring_escapes'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_length_ignoring_escapes'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_length_ignoring_escapes'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_length_ignoring_escapes'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_length_ignoring_escapes'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_length_ignoring_escapes'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_length_ignoring_escapes'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_length_ignoring_escapes'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_length_ignoring_escapes'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_length_ignoring_escapes'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_length_ignoring_escapes'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_ljust_with_escapes'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_ljust_with_escapes'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_ljust_with_escapes'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_ljust_with_escapes'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_ljust_with_escapes'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_ljust_with_escapes'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_ljust_with_escapes'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_ljust_with_escapes'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_ljust_with_escapes'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_ljust_with_escapes'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_ljust_with_escapes'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_ljust_with_escapes'"}, "return_value": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_ljust_with_escapes'"}, {"func_args": {"nodeid": "'todotxt_machine/test/terminal_operations_test.py::test_terminal_operations_ljust_with_escapes'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_init'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_init'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_init'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_init'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_init'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_init'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_init'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_init'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_init'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_init'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_init'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_init'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_init'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_init'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_parse_entries'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_parse_entries'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_parse_entries'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_parse_entries'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_parse_entries'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_parse_entries'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_parse_entries'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_parse_entries'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_parse_entries'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_parse_entries'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_parse_entries'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_parse_entries'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_parse_entries'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_parse_entries'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_iterable'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_iterable'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_iterable'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_iterable'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_iterable'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_iterable'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_iterable'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_iterable'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_iterable'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_iterable'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_iterable'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_iterable'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_iterable'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_iterable'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_contexts'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_contexts'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_contexts'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_contexts'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_contexts'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_contexts'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_contexts'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_contexts'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_contexts'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_contexts'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_contexts'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_contexts'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_contexts'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_contexts'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_projects'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_projects'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_projects'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_projects'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_projects'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_projects'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_projects'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_projects'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_projects'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_projects'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_projects'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_projects'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_projects'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_projects'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_context_project_regex'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_context_project_regex'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_context_project_regex'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_context_project_regex'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_context_project_regex'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_context_project_regex'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_context_project_regex'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_context_project_regex'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_context_project_regex'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_context_project_regex'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_context_project_regex'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_context_project_regex'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_context_project_regex'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_context_project_regex'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_contexts'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_contexts'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_contexts'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_contexts'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_contexts'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_all_contexts'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_contexts'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_contexts'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_contexts'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_contexts'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_contexts'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_contexts'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_all_contexts'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_contexts'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_projects'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_projects'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_projects'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_projects'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_projects'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_all_projects'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_projects'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_projects'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_projects'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_projects'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_projects'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_projects'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_all_projects'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_all_projects'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_completed_date'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_completed_date'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_completed_date'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_completed_date'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_completed_date'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_completed_date'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_completed_date'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_completed_date'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_completed_date'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_completed_date'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_completed_date'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_completed_date'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_completed_date'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_completed_date'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_creation_date'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_creation_date'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_creation_date'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_creation_date'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_creation_date'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_creation_date'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_creation_date'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_creation_date'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_creation_date'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_creation_date'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_creation_date'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_creation_date'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_creation_date'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_creation_date'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_due_date'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_due_date'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_due_date'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_due_date'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_due_date'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_due_date'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_due_date'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_due_date'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_due_date'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_due_date'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_due_date'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_due_date'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_due_date'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_due_date'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_priority'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_priority'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_priority'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_priority'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_priority'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_priority'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_priority'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_priority'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_priority'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_priority'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_priority'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_priority'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_priority'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_priority'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_sorted'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_sorted'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted_reverese'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted_reverese'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted_reverese'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted_reverese'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted_reverese'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_sorted_reverese'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted_reverese'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted_reverese'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted_reverese'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted_reverese'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted_reverese'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted_reverese'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_sorted_reverese'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_sorted_reverese'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_filter_context'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_filter_context'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_project'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_project'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_project'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_project'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_project'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_filter_project'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_project'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_project'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_project'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_project'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_project'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_project'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_filter_project'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_project'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_highlight'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_highlight'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_highlight'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_highlight'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_highlight'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todo_highlight'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_highlight'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_highlight'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_highlight'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_highlight'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_highlight'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_highlight'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todo_highlight'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_highlight'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context_and_project'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context_and_project'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context_and_project'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context_and_project'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context_and_project'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_filter_context_and_project'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context_and_project'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context_and_project'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context_and_project'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context_and_project'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context_and_project'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context_and_project'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_filter_context_and_project'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_filter_context_and_project'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_update'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_update'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_update'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_update'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_update'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_update'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_update'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_update'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_update'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_update'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_update'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_update'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_update'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_update'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_complete'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_complete'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_complete'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_complete'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_complete'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_complete'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_complete'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_complete'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_complete'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_complete'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_complete'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_complete'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_complete'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_complete'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_incomplete'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_incomplete'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_incomplete'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_incomplete'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_incomplete'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todo_incomplete'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_incomplete'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_incomplete'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_incomplete'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_incomplete'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_incomplete'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_incomplete'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todo_incomplete'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_incomplete'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_is_complete'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_is_complete'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_is_complete'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_is_complete'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_is_complete'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todo_is_complete'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_is_complete'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_is_complete'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_is_complete'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_is_complete'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_is_complete'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_is_complete'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todo_is_complete'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_is_complete'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_update'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_update'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_update'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_update'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_update'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todo_update'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_update'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_update'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_update'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_update'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_update'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_update'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todo_update'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_update'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todo_add_creation_date'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_append'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_delete'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_delete'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_delete'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_delete'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_delete'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_delete'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_delete'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_delete'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_delete'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_delete'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_delete'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_delete'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_delete'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_delete'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_insert'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_search'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_search'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_search'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_search'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_search'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_search'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_search'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_search'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_search'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_search'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_search'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_search'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_search'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_search'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_swap'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_swap'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_swap'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_swap'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_swap'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_swap'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_swap'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_swap'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_swap'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_swap'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_swap'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_swap'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_todos_swap'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_todos_swap'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_change_priority'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_change_priority'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_change_priority'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_change_priority'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_change_priority'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_change_priority'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_change_priority'"}, "return_value": "None"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_change_priority'"}, "return_value": "''"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_change_priority'"}, "return_value": "'todotxt_machine'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_change_priority'"}, "return_value": "'todotxt_machine/test'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_change_priority'"}, "return_value": "'todotxt_machine/test/todo_test.py'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_change_priority'"}, "return_value": "'todotxt_machine/test/todo_test.py::test_change_priority'"}, {"func_args": {"nodeid": "'todotxt_machine/test/todo_test.py::test_change_priority'"}, "return_value": "None"}], "text": "def iterparentnodeids(nodeid: str) -> Iterator[str]:\n    \"\"\"Return the parent node IDs of a given node ID, inclusive.\n\n    For the node ID\n\n        \"testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_source\"\n\n    the result would be\n\n        \"\"\n        \"testing\"\n        \"testing/code\"\n        \"testing/code/test_excinfo.py\"\n        \"testing/code/test_excinfo.py::TestFormattedExcinfo\"\n        \"testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_source\"\n\n    Note that :: parts are only considered at the last / component.\n    \"\"\"\n    pos = 0\n    sep = SEP\n    yield \"\"\n    while True:\n        at = nodeid.find(sep, pos)\n        if at == -1 and sep == SEP:\n            sep = \"::\"\n        elif at == -1:\n            if nodeid:\n                yield nodeid\n            break\n        else:\n            if at:\n                yield nodeid[:at]\n            pos = at + len(sep)"}, "wcswidth": {"line": 43, "args": [{"func_args": {"s": "''"}, "return_value": "0"}, {"func_args": {"s": "'todotxt_machine/test/terminal_operations_test.py E'"}, "return_value": "50"}], "text": "def wcswidth(s: str) -> int:\n    \"\"\"Determine how many columns are needed to display a string in a terminal.\n\n    Returns -1 if the string contains non-printable characters.\n    \"\"\"\n    width = 0\n    for c in unicodedata.normalize(\"NFC\", s):\n        wc = wcwidth(c)\n        if wc < 0:\n            return -1\n        width += wc\n    return width"}, "wcwidth": {"line": 4, "args": [{"func_args": {"c": "'t'"}, "return_value": "1"}, {"func_args": {"c": "'o'"}, "return_value": "1"}, {"func_args": {"c": "'d'"}, "return_value": "1"}, {"func_args": {"c": "'x'"}, "return_value": "1"}, {"func_args": {"c": "'_'"}, "return_value": "1"}, {"func_args": {"c": "'m'"}, "return_value": "1"}, {"func_args": {"c": "'a'"}, "return_value": "1"}, {"func_args": {"c": "'c'"}, "return_value": "1"}, {"func_args": {"c": "'h'"}, "return_value": "1"}, {"func_args": {"c": "'i'"}, "return_value": "1"}, {"func_args": {"c": "'n'"}, "return_value": "1"}, {"func_args": {"c": "'e'"}, "return_value": "1"}, {"func_args": {"c": "'/'"}, "return_value": "1"}, {"func_args": {"c": "'s'"}, "return_value": "1"}, {"func_args": {"c": "'r'"}, "return_value": "1"}, {"func_args": {"c": "'l'"}, "return_value": "1"}, {"func_args": {"c": "'p'"}, "return_value": "1"}, {"func_args": {"c": "'.'"}, "return_value": "1"}, {"func_args": {"c": "'y'"}, "return_value": "1"}, {"func_args": {"c": "' '"}, "return_value": "1"}, {"func_args": {"c": "'E'"}, "return_value": "1"}]}, "_ellipsize": {"line": 29, "args": [{"func_args": {"s": "'None'", "maxsize": "240"}, "return_value": "'None'"}, {"func_args": {"s": "'None'", "maxsize": "240"}, "return_value": "'None'"}, {"func_args": {"s": "'False'", "maxsize": "240"}, "return_value": "'False'"}, {"func_args": {"s": "'False'", "maxsize": "240"}, "return_value": "'False'"}, {"func_args": {"s": "'None'", "maxsize": "240"}, "return_value": "'None'"}, {"func_args": {"s": "'None'", "maxsize": "240"}, "return_value": "'None'"}, {"func_args": {"s": "'True'", "maxsize": "240"}, "return_value": "'True'"}, {"func_args": {"s": "'True'", "maxsize": "240"}, "return_value": "'True'"}, {"func_args": {"s": "\"(['tput', 'cols'],)\"", "maxsize": "240"}, "return_value": "\"(['tput', 'cols'],)\""}, {"func_args": {"s": "\"{'stdout': -1}\"", "maxsize": "240"}, "return_value": "\"{'stdout': -1}\""}, {"func_args": {"s": "'<subprocess.Popen object at 0xffff8840a790>'", "maxsize": "240"}, "return_value": "'<subprocess.Popen object at 0xffff8840a790>'"}, {"func_args": {"s": "'<subprocess.Popen object at 0xffff8840a790>'", "maxsize": "240"}, "return_value": "'<subprocess.Popen object at 0xffff8840a790>'"}, {"func_args": {"s": "\"b''\"", "maxsize": "240"}, "return_value": "\"b''\""}, {"func_args": {"s": "\"b''\"", "maxsize": "240"}, "return_value": "\"b''\""}, {"func_args": {"s": "'None'", "maxsize": "240"}, "return_value": "'None'"}, {"func_args": {"s": "'None'", "maxsize": "240"}, "return_value": "'None'"}, {"func_args": {"s": "'2'", "maxsize": "240"}, "return_value": "'2'"}], "text": "def _ellipsize(s: str, maxsize: int) -> str:\n    if len(s) > maxsize:\n        i = max(0, (maxsize - 3) // 2)\n        j = max(0, maxsize - 3 - i)\n        return s[:i] + \"...\" + s[len(s) - j :]\n    return s"}}