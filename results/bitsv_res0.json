{"_args_converter": {"line": 816, "args": [{"func_args": {"args": "()"}, "return_value": "()"}], "text": "def _args_converter(args: Iterable[str]) -> Tuple[str, ...]:\n    return tuple(args)"}, "_get_plugin_specs_as_list": {"line": 715, "args": [{"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "None"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}, {"func_args": {"specs": "[]"}, "return_value": "[]"}], "text": "def _get_plugin_specs_as_list(\n    specs: Union[None, types.ModuleType, str, Sequence[str]]\n) -> List[str]:\n    \"\"\"Parse a plugins specification into a list of plugin names.\"\"\"\n    # None means empty.\n    if specs is None:\n        return []\n    # Workaround for #3899 - a submodule which happens to be called \"pytest_plugins\".\n    if isinstance(specs, types.ModuleType):\n        return []\n    # Comma-separated list.\n    if isinstance(specs, str):\n        return specs.split(\",\") if specs else []\n    # Direct specification.\n    if isinstance(specs, collections.abc.Sequence):\n        return list(specs)\n    raise UsageError(\n        \"Plugins may be specified as a sequence or a ','-separated string of plugin names. Got: %r\"\n        % specs\n    )"}, "_assertion_supported": {"line": 1511, "args": [{"func_args": {}, "return_value": "True"}], "text": "def _assertion_supported() -> bool:\n    try:\n        assert False\n    except AssertionError:\n        return True\n    else:\n        return False"}, "scope2index": {"line": 803, "args": [{"func_args": {"scope": "'session'", "descr": "\"Fixture 'pytestconfig'\"", "where": "None"}, "return_value": "0"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'capfd'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'capfdbinary'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'capsys'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'capsysbinary'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'tmp_path'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'session'", "descr": "\"Fixture 'tmp_path_factory'\"", "where": "None"}, "return_value": "0"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'tmpdir'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'session'", "descr": "\"Fixture 'tmpdir_factory'\"", "where": "None"}, "return_value": "0"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'monkeypatch'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'recwarn'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'record_property'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'session'", "descr": "\"Fixture 'record_testsuite_property'\"", "where": "None"}, "return_value": "0"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'record_xml_attribute'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'session'", "descr": "\"Fixture 'doctest_namespace'\"", "where": "None"}, "return_value": "0"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'cache'\"", "where": "None"}, "return_value": "4"}, {"func_args": {"scope": "'function'", "descr": "\"Fixture 'caplog'\"", "where": "None"}, "return_value": "4"}], "text": "def scope2index(scope: str, descr: str, where: Optional[str] = None) -> int:\n    \"\"\"Look up the index of ``scope`` and raise a descriptive value error\n    if not defined.\"\"\"\n    strscopes: Sequence[str] = scopes\n    try:\n        return strscopes.index(scope)\n    except ValueError:\n        fail(\n            \"{} {}got an unexpected scope value '{}'\".format(\n                descr, f\"from {where} \" if where else \"\", scope\n            ),\n            pytrace=False,\n        )"}, "pluralize": {"line": 1350, "args": [{"func_args": {"count": "148", "noun": "'passed'"}, "return_value": "(148, 'passed')"}], "text": "def pluralize(count: int, noun: str) -> Tuple[int, str]:\n    # No need to pluralize words such as `failed` or `passed`.\n    if noun not in [\"error\", \"warnings\", \"test\"]:\n        return count, noun\n\n    # The `warnings` key is plural. To avoid API breakage, we keep it that way but\n    # set it to singular here so we can determine plurality in the same way as we do\n    # for `error`.\n    noun = noun.replace(\"warnings\", \"warning\")\n\n    return count, noun + \"s\" if count != 1 else noun"}, "format_session_duration": {"line": 1377, "args": [{"func_args": {"seconds": "33.52053475379944"}, "return_value": "'33.52s'"}], "text": "def format_session_duration(seconds: float) -> str:\n    \"\"\"Format the given seconds in a human readable manner to show in the final summary.\"\"\"\n    if seconds < 60:\n        return f\"{seconds:.2f}s\"\n    else:\n        dt = datetime.timedelta(seconds=int(seconds))\n        return f\"{seconds:.2f}s ({dt})\""}, "_get_auto_indent": {"line": 113, "args": [{"func_args": {"auto_indent_option": "None"}, "return_value": "0"}, {"func_args": {"auto_indent_option": "None"}, "return_value": "0"}]}, "_get_stderr_fileno": {"line": 68, "args": [{"func_args": {}, "return_value": "2"}, {"func_args": {}, "return_value": "2"}]}, "get_terminal_width": {"line": 15, "args": [{"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}, {"func_args": {}, "return_value": "80"}], "text": "def get_terminal_width() -> int:\n    width, _ = shutil.get_terminal_size(fallback=(80, 24))\n\n    # The Windows get_terminal_size may be bogus, let's sanify a bit.\n    if width < 40:\n        width = 80\n\n    return width"}, "get_dirs_from_args": {"line": 134, "args": [{"func_args": {"args": "[]"}, "return_value": "[]"}], "text": "def get_dirs_from_args(args: Iterable[str]) -> List[Path]:\n    def is_option(x: str) -> bool:\n        return x.startswith(\"-\")\n\n    def get_file_part_from_node_id(x: str) -> str:\n        return x.split(\"::\")[0]\n\n    def get_dir_from_path(path: Path) -> Path:\n        if path.is_dir():\n            return path\n        return path.parent\n\n    def safe_exists(path: Path) -> bool:\n        # This can throw on paths that contain characters unrepresentable at the OS level,\n        # or with invalid syntax on Windows (https://bugs.python.org/issue35306)\n        try:\n            return path.exists()\n        except OSError:\n            return False\n\n    # These look like paths but may not exist\n    possible_paths = (\n        absolutepath(get_file_part_from_node_id(arg))\n        for arg in args\n        if not is_option(arg)\n    )\n\n    return [get_dir_from_path(path) for path in possible_paths if safe_exists(path)]"}, "parts": {"line": 420, "args": [{"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/base58.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/base58.py', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/cli.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/cli.py'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/constants.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/bitsv/constants.py', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/crypto.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/crypto.py'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/curve.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/bitsv/curve.py', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/exceptions.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/bitsv/exceptions.py', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/format.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/format.py'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/keygen.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv/keygen.py', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/op_return.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/op_return.py'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/transaction.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/bitsv/transaction.py', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/utils.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/utils.py'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/wallet.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/wallet.py'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/__init__.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/bitsv/network/__init__.py', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/fees.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/fees.py', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/meta.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/bitsv/network/meta.py', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/rates.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/rates.py', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/transaction.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv/network/transaction.py', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/README.rst'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/bitsv/network/services/README.rst', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/__init__.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network/services/__init__.py', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/bsvbookguarda.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services/bsvbookguarda.py', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/fullnode.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network/services/fullnode.py', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/mattercloud.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/bitsv/network/services/mattercloud.py', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/network.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/bitsv/network/services/network.py', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/standardrpcmethods.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/bitsv/network/services/standardrpcmethods.py', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/whatsonchain.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/bitsv/network/services/whatsonchain.py', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/fees.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/fees.py', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/meta.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/bitsv/network/meta.py', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/rates.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/rates.py', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/transaction.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv/network/transaction.py', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/README.rst'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/bitsv/network/services/README.rst', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/__init__.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network/services/__init__.py', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/bsvbookguarda.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services/bsvbookguarda.py', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/fullnode.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network/services/fullnode.py', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/mattercloud.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/bitsv/network/services/mattercloud.py', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/network.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/bitsv/network/services/network.py', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/standardrpcmethods.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/bitsv/network/services/standardrpcmethods.py', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/whatsonchain.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/bitsv/network/services/whatsonchain.py', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/README.rst'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/bitsv/network/services/README.rst', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/bsvbookguarda.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services/bsvbookguarda.py', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/fullnode.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network/services/fullnode.py', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/mattercloud.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/bitsv/network/services/mattercloud.py', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/network.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/bitsv/network/services/network.py', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/standardrpcmethods.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/bitsv/network/services/standardrpcmethods.py', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/bitsv/network/services/whatsonchain.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/bitsv/network/services/whatsonchain.py', '/usr/app', '/usr/app/src/test_repos/bitsv/bitsv', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/bitsv/network/services', '/usr/app/src/test_repos/bitsv/bitsv/network'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/network'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/tests/network', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/samples.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/tests/samples.py', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/test_base58.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/tests/test_base58.py', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/test_curve.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/tests/test_curve.py', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/test_format.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/tests/test_format.py', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/test_transaction.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests/test_transaction.py', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/test_utils.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/tests/test_utils.py', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/test_wallet.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/tests/test_wallet.py', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/utils.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/tests/utils.py', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/network/__init__.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/tests/network', '/usr/app', '/usr/app/src/test_repos/bitsv/tests/network/__init__.py', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/network/test_fees.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/tests/network', '/usr/app', '/usr/app/src/test_repos/bitsv/tests/network/test_fees.py', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/network/test_meta.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/tests/network', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests/network/test_meta.py', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/network/test_rates.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/tests/network', '/usr/app', '/usr/app/src/test_repos/bitsv/tests/network/test_rates.py', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/network/test_services.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/tests/network/test_services.py', '/usr/app/src/test_repos/bitsv/tests/network', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/network/test_transaction.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/tests/network', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/tests/network/test_transaction.py', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/network/test_fees.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/tests/network', '/usr/app', '/usr/app/src/test_repos/bitsv/tests/network/test_fees.py', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/network/test_meta.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/tests/network', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests/network/test_meta.py', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/network/test_rates.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/tests/network', '/usr/app', '/usr/app/src/test_repos/bitsv/tests/network/test_rates.py', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/network/test_services.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/tests/network/test_services.py', '/usr/app/src/test_repos/bitsv/tests/network', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}, {"func_args": {"s": "'/usr/app/src/test_repos/bitsv/tests/network/test_transaction.py'"}, "return_value": "{'/usr/app/src/test_repos', '/', '/usr/app/src/test_repos/bitsv/tests/network', '/usr/app', '/usr', '/usr/app/src', '/usr/app/src/test_repos/bitsv/tests/network/test_transaction.py', '/usr/app/src/test_repos/bitsv', '/usr/app/src/test_repos/bitsv/tests'}"}], "text": "def parts(s: str) -> Set[str]:\n    parts = s.split(sep)\n    return {sep.join(parts[: i + 1]) or sep for i in range(len(parts))}"}, "_is_same": {"line": 558, "args": [{"func_args": {"f1": "'/usr/app/src/test_repos/bitsv/tests/test_base58.py'", "f2": "'/usr/app/src/test_repos/bitsv/tests/test_base58.py'"}, "return_value": "True"}, {"func_args": {"f1": "'/usr/app/src/test_repos/bitsv/tests/test_curve.py'", "f2": "'/usr/app/src/test_repos/bitsv/tests/test_curve.py'"}, "return_value": "True"}, {"func_args": {"f1": "'/usr/app/src/test_repos/bitsv/tests/test_format.py'", "f2": "'/usr/app/src/test_repos/bitsv/tests/test_format.py'"}, "return_value": "True"}, {"func_args": {"f1": "'/usr/app/src/test_repos/bitsv/tests/test_transaction.py'", "f2": "'/usr/app/src/test_repos/bitsv/tests/test_transaction.py'"}, "return_value": "True"}, {"func_args": {"f1": "'/usr/app/src/test_repos/bitsv/tests/test_utils.py'", "f2": "'/usr/app/src/test_repos/bitsv/tests/test_utils.py'"}, "return_value": "True"}, {"func_args": {"f1": "'/usr/app/src/test_repos/bitsv/tests/test_wallet.py'", "f2": "'/usr/app/src/test_repos/bitsv/tests/test_wallet.py'"}, "return_value": "True"}, {"func_args": {"f1": "'/usr/app/src/test_repos/bitsv/tests/network/test_fees.py'", "f2": "'/usr/app/src/test_repos/bitsv/tests/network/test_fees.py'"}, "return_value": "True"}, {"func_args": {"f1": "'/usr/app/src/test_repos/bitsv/tests/network/test_meta.py'", "f2": "'/usr/app/src/test_repos/bitsv/tests/network/test_meta.py'"}, "return_value": "True"}, {"func_args": {"f1": "'/usr/app/src/test_repos/bitsv/tests/network/test_rates.py'", "f2": "'/usr/app/src/test_repos/bitsv/tests/network/test_rates.py'"}, "return_value": "True"}, {"func_args": {"f1": "'/usr/app/src/test_repos/bitsv/tests/network/test_services.py'", "f2": "'/usr/app/src/test_repos/bitsv/tests/network/test_services.py'"}, "return_value": "True"}, {"func_args": {"f1": "'/usr/app/src/test_repos/bitsv/tests/network/test_transaction.py'", "f2": "'/usr/app/src/test_repos/bitsv/tests/network/test_transaction.py'"}, "return_value": "True"}], "text": "def _is_same(f1: str, f2: str) -> bool:\n        return os.path.samefile(f1, f2)"}, "iscommentline": {"line": 162, "args": [{"func_args": {"line": "'[tox]\\n'"}, "return_value": "False"}, {"func_args": {"line": "'envlist = \\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tpy35,\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tpy36,\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tpy37,\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tpy38,\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tpy39,\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tpypy3\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\n'"}, "return_value": "True"}, {"func_args": {"line": "'[testenv]\\n'"}, "return_value": "False"}, {"func_args": {"line": "'passenv = *\\n'"}, "return_value": "False"}, {"func_args": {"line": "'deps = \\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tcodecov\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tcoverage\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tpytest\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tviztracer \\n'"}, "return_value": "False"}, {"func_args": {"line": "'commands = \\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tpython setup.py --quiet clean develop\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tcoverage run --parallel-mode -m viztracer --ignore_frozen --log_func_args --log_func_retval -o result0.json -- pytest\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tcoverage combine --append\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\tcoverage report -m\\n'"}, "return_value": "False"}, {"func_args": {"line": "'\\n'"}, "return_value": "True"}, {"func_args": {"line": "'[metadata]\\n'"}, "return_value": "False"}, {"func_args": {"line": "'description-file = README.rst\\n'"}, "return_value": "False"}], "text": "def iscommentline(line):\n    c = line.lstrip()[:1]\n    return c in COMMENTCHARS"}, "normalize_mark_list": {"line": 355, "args": [{"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}, {"func_args": {"mark_list": "[]"}, "return_value": "[]"}], "text": "def normalize_mark_list(mark_list: Iterable[Union[Mark, MarkDecorator]]) -> List[Mark]:\n    \"\"\"Normalize marker decorating helpers to mark objects.\n\n    :type List[Union[Mark, Markdecorator]] mark_list:\n    :rtype: List[Mark]\n    \"\"\"\n    extracted = [\n        getattr(mark, \"mark\", mark) for mark in mark_list\n    ]  # unpack MarkDecorator\n    for mark in extracted:\n        if not isinstance(mark, Mark):\n            raise TypeError(f\"got {mark!r} instead of Mark\")\n    return [x for x in extracted if isinstance(x, Mark)]"}, "iterparentnodeids": {"line": 44, "args": [{"func_args": {"nodeid": "'tests/test_base58.py::test_b58encode'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_base58.py::test_b58encode'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_base58.py::test_b58encode'"}, "return_value": "'tests/test_base58.py'"}, {"func_args": {"nodeid": "'tests/test_base58.py::test_b58encode'"}, "return_value": "'tests/test_base58.py::test_b58encode'"}, {"func_args": {"nodeid": "'tests/test_base58.py::test_b58encode'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_base58.py::test_b58encode_check'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_base58.py::test_b58encode_check'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_base58.py::test_b58encode_check'"}, "return_value": "'tests/test_base58.py'"}, {"func_args": {"nodeid": "'tests/test_base58.py::test_b58encode_check'"}, "return_value": "'tests/test_base58.py::test_b58encode_check'"}, {"func_args": {"nodeid": "'tests/test_base58.py::test_b58encode_check'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58Decode::test_b58decode_success'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58Decode::test_b58decode_success'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58Decode::test_b58decode_success'"}, "return_value": "'tests/test_base58.py'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58Decode::test_b58decode_success'"}, "return_value": "'tests/test_base58.py::TestB58Decode'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58Decode::test_b58decode_success'"}, "return_value": "'tests/test_base58.py::TestB58Decode::test_b58decode_success'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58Decode::test_b58decode_success'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58Decode::test_b58decode_failure'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58Decode::test_b58decode_failure'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58Decode::test_b58decode_failure'"}, "return_value": "'tests/test_base58.py'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58Decode::test_b58decode_failure'"}, "return_value": "'tests/test_base58.py::TestB58Decode'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58Decode::test_b58decode_failure'"}, "return_value": "'tests/test_base58.py::TestB58Decode::test_b58decode_failure'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58Decode::test_b58decode_failure'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58DecodeCheck::test_b58decode_check_success'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58DecodeCheck::test_b58decode_check_success'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58DecodeCheck::test_b58decode_check_success'"}, "return_value": "'tests/test_base58.py'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58DecodeCheck::test_b58decode_check_success'"}, "return_value": "'tests/test_base58.py::TestB58DecodeCheck'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58DecodeCheck::test_b58decode_check_success'"}, "return_value": "'tests/test_base58.py::TestB58DecodeCheck::test_b58decode_check_success'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58DecodeCheck::test_b58decode_check_success'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58DecodeCheck::test_b58decode_check_failure'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58DecodeCheck::test_b58decode_check_failure'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58DecodeCheck::test_b58decode_check_failure'"}, "return_value": "'tests/test_base58.py'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58DecodeCheck::test_b58decode_check_failure'"}, "return_value": "'tests/test_base58.py::TestB58DecodeCheck'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58DecodeCheck::test_b58decode_check_failure'"}, "return_value": "'tests/test_base58.py::TestB58DecodeCheck::test_b58decode_check_failure'"}, {"func_args": {"nodeid": "'tests/test_base58.py::TestB58DecodeCheck::test_b58decode_check_failure'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_curve.py::test_parity'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_curve.py::test_parity'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_curve.py::test_parity'"}, "return_value": "'tests/test_curve.py'"}, {"func_args": {"nodeid": "'tests/test_curve.py::test_parity'"}, "return_value": "'tests/test_curve.py::test_parity'"}, {"func_args": {"nodeid": "'tests/test_curve.py::test_parity'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_curve.py::test_point'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_curve.py::test_point'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_curve.py::test_point'"}, "return_value": "'tests/test_curve.py'"}, {"func_args": {"nodeid": "'tests/test_curve.py::test_point'"}, "return_value": "'tests/test_curve.py::test_point'"}, {"func_args": {"nodeid": "'tests/test_curve.py::test_point'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_curve.py::TestXToY::test_x_to_y_correct_first_solution'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_curve.py::TestXToY::test_x_to_y_correct_first_solution'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_curve.py::TestXToY::test_x_to_y_correct_first_solution'"}, "return_value": "'tests/test_curve.py'"}, {"func_args": {"nodeid": "'tests/test_curve.py::TestXToY::test_x_to_y_correct_first_solution'"}, "return_value": "'tests/test_curve.py::TestXToY'"}, {"func_args": {"nodeid": "'tests/test_curve.py::TestXToY::test_x_to_y_correct_first_solution'"}, "return_value": "'tests/test_curve.py::TestXToY::test_x_to_y_correct_first_solution'"}, {"func_args": {"nodeid": "'tests/test_curve.py::TestXToY::test_x_to_y_correct_first_solution'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_curve.py::TestXToY::test_x_to_y_incorrect_first_solution'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_curve.py::TestXToY::test_x_to_y_incorrect_first_solution'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_curve.py::TestXToY::test_x_to_y_incorrect_first_solution'"}, "return_value": "'tests/test_curve.py'"}, {"func_args": {"nodeid": "'tests/test_curve.py::TestXToY::test_x_to_y_incorrect_first_solution'"}, "return_value": "'tests/test_curve.py::TestXToY'"}, {"func_args": {"nodeid": "'tests/test_curve.py::TestXToY::test_x_to_y_incorrect_first_solution'"}, "return_value": "'tests/test_curve.py::TestXToY::test_x_to_y_incorrect_first_solution'"}, {"func_args": {"nodeid": "'tests/test_curve.py::TestXToY::test_x_to_y_incorrect_first_solution'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::test_point_to_public_key'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::test_point_to_public_key'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::test_point_to_public_key'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::test_point_to_public_key'"}, "return_value": "'tests/test_format.py::test_point_to_public_key'"}, {"func_args": {"nodeid": "'tests/test_format.py::test_point_to_public_key'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::test_address_to_public_key_hash'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::test_address_to_public_key_hash'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::test_address_to_public_key_hash'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::test_address_to_public_key_hash'"}, "return_value": "'tests/test_format.py::test_address_to_public_key_hash'"}, {"func_args": {"nodeid": "'tests/test_format.py::test_address_to_public_key_hash'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_mainnet'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_mainnet'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_mainnet'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_mainnet'"}, "return_value": "'tests/test_format.py::TestGetVersion'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_mainnet'"}, "return_value": "'tests/test_format.py::TestGetVersion::test_mainnet'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_mainnet'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_testnet'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_testnet'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_testnet'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_testnet'"}, "return_value": "'tests/test_format.py::TestGetVersion'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_testnet'"}, "return_value": "'tests/test_format.py::TestGetVersion::test_testnet'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_testnet'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_invalid'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_invalid'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_invalid'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_invalid'"}, "return_value": "'tests/test_format.py::TestGetVersion'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_invalid'"}, "return_value": "'tests/test_format.py::TestGetVersion::test_invalid'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_invalid'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_mainnet_pay2sh'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_mainnet_pay2sh'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_mainnet_pay2sh'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_mainnet_pay2sh'"}, "return_value": "'tests/test_format.py::TestGetVersion'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_mainnet_pay2sh'"}, "return_value": "'tests/test_format.py::TestGetVersion::test_mainnet_pay2sh'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_mainnet_pay2sh'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_testnet_pay2sh'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_testnet_pay2sh'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_testnet_pay2sh'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_testnet_pay2sh'"}, "return_value": "'tests/test_format.py::TestGetVersion'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_testnet_pay2sh'"}, "return_value": "'tests/test_format.py::TestGetVersion::test_testnet_pay2sh'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestGetVersion::test_testnet_pay2sh'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestVerifySig::test_valid'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestVerifySig::test_valid'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestVerifySig::test_valid'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestVerifySig::test_valid'"}, "return_value": "'tests/test_format.py::TestVerifySig'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestVerifySig::test_valid'"}, "return_value": "'tests/test_format.py::TestVerifySig::test_valid'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestVerifySig::test_valid'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestVerifySig::test_invalid'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestVerifySig::test_invalid'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestVerifySig::test_invalid'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestVerifySig::test_invalid'"}, "return_value": "'tests/test_format.py::TestVerifySig'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestVerifySig::test_invalid'"}, "return_value": "'tests/test_format.py::TestVerifySig::test_invalid'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestVerifySig::test_invalid'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_mainnet'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_mainnet'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_mainnet'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_mainnet'"}, "return_value": "'tests/test_format.py::TestBytesToWIF'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_mainnet'"}, "return_value": "'tests/test_format.py::TestBytesToWIF::test_mainnet'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_mainnet'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_testnet'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_testnet'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_testnet'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_testnet'"}, "return_value": "'tests/test_format.py::TestBytesToWIF'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_testnet'"}, "return_value": "'tests/test_format.py::TestBytesToWIF::test_testnet'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_testnet'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_compressed_main'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_compressed_main'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_compressed_main'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_compressed_main'"}, "return_value": "'tests/test_format.py::TestBytesToWIF'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_compressed_main'"}, "return_value": "'tests/test_format.py::TestBytesToWIF::test_compressed_main'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_compressed_main'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_compressed_testnet'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_compressed_testnet'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_compressed_testnet'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_compressed_testnet'"}, "return_value": "'tests/test_format.py::TestBytesToWIF'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_compressed_testnet'"}, "return_value": "'tests/test_format.py::TestBytesToWIF::test_compressed_testnet'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestBytesToWIF::test_compressed_testnet'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_mainnet'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_mainnet'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_mainnet'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_mainnet'"}, "return_value": "'tests/test_format.py::TestWIFToBytes'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_mainnet'"}, "return_value": "'tests/test_format.py::TestWIFToBytes::test_mainnet'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_mainnet'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_testnet'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_testnet'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_testnet'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_testnet'"}, "return_value": "'tests/test_format.py::TestWIFToBytes'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_testnet'"}, "return_value": "'tests/test_format.py::TestWIFToBytes::test_testnet'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_testnet'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_compressed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_compressed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_compressed'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_compressed'"}, "return_value": "'tests/test_format.py::TestWIFToBytes'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_compressed'"}, "return_value": "'tests/test_format.py::TestWIFToBytes::test_compressed'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_compressed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_invalid_network'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_invalid_network'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_invalid_network'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_invalid_network'"}, "return_value": "'tests/test_format.py::TestWIFToBytes'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_invalid_network'"}, "return_value": "'tests/test_format.py::TestWIFToBytes::test_invalid_network'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFToBytes::test_invalid_network'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_main_success'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_main_success'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_main_success'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_main_success'"}, "return_value": "'tests/test_format.py::TestWIFChecksumCheck'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_main_success'"}, "return_value": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_main_success'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_main_success'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_test_success'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_test_success'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_test_success'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_test_success'"}, "return_value": "'tests/test_format.py::TestWIFChecksumCheck'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_test_success'"}, "return_value": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_test_success'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_test_success'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_compressed_success'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_compressed_success'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_compressed_success'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_compressed_success'"}, "return_value": "'tests/test_format.py::TestWIFChecksumCheck'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_compressed_success'"}, "return_value": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_compressed_success'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_compressed_success'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_decode_failure'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_decode_failure'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_decode_failure'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_decode_failure'"}, "return_value": "'tests/test_format.py::TestWIFChecksumCheck'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_decode_failure'"}, "return_value": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_decode_failure'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_decode_failure'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_other_failure'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_other_failure'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_other_failure'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_other_failure'"}, "return_value": "'tests/test_format.py::TestWIFChecksumCheck'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_other_failure'"}, "return_value": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_other_failure'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestWIFChecksumCheck::test_wif_checksum_check_other_failure'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_compressed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_compressed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_compressed'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_compressed'"}, "return_value": "'tests/test_format.py::TestPublicKeyToCoords'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_compressed'"}, "return_value": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_compressed'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_compressed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_uncompressed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_uncompressed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_uncompressed'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_uncompressed'"}, "return_value": "'tests/test_format.py::TestPublicKeyToCoords'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_uncompressed'"}, "return_value": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_uncompressed'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_uncompressed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_incorrect_length'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_incorrect_length'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_incorrect_length'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_incorrect_length'"}, "return_value": "'tests/test_format.py::TestPublicKeyToCoords'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_incorrect_length'"}, "return_value": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_incorrect_length'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToCoords::test_public_key_to_coords_incorrect_length'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_compressed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_compressed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_compressed'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_compressed'"}, "return_value": "'tests/test_format.py::TestPublicKeyToAddress'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_compressed'"}, "return_value": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_compressed'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_compressed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_uncompressed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_uncompressed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_uncompressed'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_uncompressed'"}, "return_value": "'tests/test_format.py::TestPublicKeyToAddress'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_uncompressed'"}, "return_value": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_uncompressed'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_uncompressed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_incorrect_length'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_incorrect_length'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_incorrect_length'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_incorrect_length'"}, "return_value": "'tests/test_format.py::TestPublicKeyToAddress'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_incorrect_length'"}, "return_value": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_incorrect_length'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_incorrect_length'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_test_compressed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_test_compressed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_test_compressed'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_test_compressed'"}, "return_value": "'tests/test_format.py::TestPublicKeyToAddress'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_test_compressed'"}, "return_value": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_test_compressed'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_test_compressed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_test_uncompressed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_test_uncompressed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_test_uncompressed'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_test_uncompressed'"}, "return_value": "'tests/test_format.py::TestPublicKeyToAddress'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_test_uncompressed'"}, "return_value": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_test_uncompressed'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestPublicKeyToAddress::test_public_key_to_address_test_uncompressed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestCoordsToPublicKey::test_coords_to_public_key_compressed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestCoordsToPublicKey::test_coords_to_public_key_compressed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestCoordsToPublicKey::test_coords_to_public_key_compressed'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestCoordsToPublicKey::test_coords_to_public_key_compressed'"}, "return_value": "'tests/test_format.py::TestCoordsToPublicKey'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestCoordsToPublicKey::test_coords_to_public_key_compressed'"}, "return_value": "'tests/test_format.py::TestCoordsToPublicKey::test_coords_to_public_key_compressed'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestCoordsToPublicKey::test_coords_to_public_key_compressed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_format.py::TestCoordsToPublicKey::test_coords_to_public_key_uncompressed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_format.py::TestCoordsToPublicKey::test_coords_to_public_key_uncompressed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestCoordsToPublicKey::test_coords_to_public_key_uncompressed'"}, "return_value": "'tests/test_format.py'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestCoordsToPublicKey::test_coords_to_public_key_uncompressed'"}, "return_value": "'tests/test_format.py::TestCoordsToPublicKey'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestCoordsToPublicKey::test_coords_to_public_key_uncompressed'"}, "return_value": "'tests/test_format.py::TestCoordsToPublicKey::test_coords_to_public_key_uncompressed'"}, {"func_args": {"nodeid": "'tests/test_format.py::TestCoordsToPublicKey::test_coords_to_public_key_uncompressed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::test_construct_input_block'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::test_construct_input_block'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::test_construct_input_block'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::test_construct_input_block'"}, "return_value": "'tests/test_transaction.py::test_construct_input_block'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::test_construct_input_block'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::test_calc_txid'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::test_calc_txid'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::test_calc_txid'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::test_calc_txid'"}, "return_value": "'tests/test_transaction.py::test_calc_txid'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::test_calc_txid'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_init'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_init'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_init'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_init'"}, "return_value": "'tests/test_transaction.py::TestTxIn'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_init'"}, "return_value": "'tests/test_transaction.py::TestTxIn::test_init'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_init'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_equality'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_equality'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_equality'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_equality'"}, "return_value": "'tests/test_transaction.py::TestTxIn'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_equality'"}, "return_value": "'tests/test_transaction.py::TestTxIn::test_equality'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_equality'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_repr'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_repr'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_repr'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_repr'"}, "return_value": "'tests/test_transaction.py::TestTxIn'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_repr'"}, "return_value": "'tests/test_transaction.py::TestTxIn::test_repr'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestTxIn::test_repr'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_input'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_input'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_input'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_input'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_input'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData::test_no_input'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_input'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_message'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_message'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_message'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_message'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_message'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData::test_message'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_message'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_message_pushdata'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_message_pushdata'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_message_pushdata'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_message_pushdata'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_message_pushdata'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData::test_message_pushdata'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_message_pushdata'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_fee_applied'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_fee_applied'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_fee_applied'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_fee_applied'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_fee_applied'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData::test_fee_applied'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_fee_applied'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_zero_remaining'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_zero_remaining'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_zero_remaining'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_zero_remaining'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_zero_remaining'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData::test_zero_remaining'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_zero_remaining'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_remaining'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_remaining'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_remaining'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_remaining'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_remaining'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_remaining'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_remaining'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_remaining_less_than_dust'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_remaining_less_than_dust'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_remaining_less_than_dust'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_remaining_less_than_dust'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_remaining_less_than_dust'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_remaining_less_than_dust'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_remaining_less_than_dust'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_insufficient_funds'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_insufficient_funds'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_insufficient_funds'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_insufficient_funds'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_insufficient_funds'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_insufficient_funds'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_combine_insufficient_funds'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_remaining'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_remaining'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_remaining'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_remaining'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_remaining'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_remaining'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_remaining'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_remaining_small_inputs'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_remaining_small_inputs'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_remaining_small_inputs'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_remaining_small_inputs'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_remaining_small_inputs'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_remaining_small_inputs'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_remaining_small_inputs'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_with_fee'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_with_fee'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_with_fee'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_with_fee'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_with_fee'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_with_fee'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_with_fee'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_insufficient_funds'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_insufficient_funds'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_insufficient_funds'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_insufficient_funds'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_insufficient_funds'"}, "return_value": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_insufficient_funds'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestSanitizeTxData::test_no_combine_insufficient_funds'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestCreateSignedTransaction::test_matching'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestCreateSignedTransaction::test_matching'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestCreateSignedTransaction::test_matching'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestCreateSignedTransaction::test_matching'"}, "return_value": "'tests/test_transaction.py::TestCreateSignedTransaction'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestCreateSignedTransaction::test_matching'"}, "return_value": "'tests/test_transaction.py::TestCreateSignedTransaction::test_matching'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestCreateSignedTransaction::test_matching'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_accurate_compressed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_accurate_compressed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_accurate_compressed'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_accurate_compressed'"}, "return_value": "'tests/test_transaction.py::TestEstimateTxFee'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_accurate_compressed'"}, "return_value": "'tests/test_transaction.py::TestEstimateTxFee::test_accurate_compressed'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_accurate_compressed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_accurate_uncompressed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_accurate_uncompressed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_accurate_uncompressed'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_accurate_uncompressed'"}, "return_value": "'tests/test_transaction.py::TestEstimateTxFee'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_accurate_uncompressed'"}, "return_value": "'tests/test_transaction.py::TestEstimateTxFee::test_accurate_uncompressed'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_accurate_uncompressed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_none'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_none'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_none'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_none'"}, "return_value": "'tests/test_transaction.py::TestEstimateTxFee'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_none'"}, "return_value": "'tests/test_transaction.py::TestEstimateTxFee::test_none'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestEstimateTxFee::test_none'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_no_message'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_no_message'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_no_message'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_no_message'"}, "return_value": "'tests/test_transaction.py::TestConstructOutputBlock'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_no_message'"}, "return_value": "'tests/test_transaction.py::TestConstructOutputBlock::test_no_message'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_no_message'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_message'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_message'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_message'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_message'"}, "return_value": "'tests/test_transaction.py::TestConstructOutputBlock'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_message'"}, "return_value": "'tests/test_transaction.py::TestConstructOutputBlock::test_message'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_message'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_long_message'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_long_message'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_long_message'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_long_message'"}, "return_value": "'tests/test_transaction.py::TestConstructOutputBlock'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_long_message'"}, "return_value": "'tests/test_transaction.py::TestConstructOutputBlock::test_long_message'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_long_message'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_pushdata_message'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_pushdata_message'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_pushdata_message'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_pushdata_message'"}, "return_value": "'tests/test_transaction.py::TestConstructOutputBlock'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_pushdata_message'"}, "return_value": "'tests/test_transaction.py::TestConstructOutputBlock::test_pushdata_message'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_pushdata_message'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_long_pushdata'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_long_pushdata'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_long_pushdata'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_long_pushdata'"}, "return_value": "'tests/test_transaction.py::TestConstructOutputBlock'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_long_pushdata'"}, "return_value": "'tests/test_transaction.py::TestConstructOutputBlock::test_long_pushdata'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_long_pushdata'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_string_pushdata'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_string_pushdata'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_string_pushdata'"}, "return_value": "'tests/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_string_pushdata'"}, "return_value": "'tests/test_transaction.py::TestConstructOutputBlock'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_string_pushdata'"}, "return_value": "'tests/test_transaction.py::TestConstructOutputBlock::test_string_pushdata'"}, {"func_args": {"nodeid": "'tests/test_transaction.py::TestConstructOutputBlock::test_string_pushdata'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_decimal'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_decimal'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_decimal'"}, "return_value": "'tests/test_utils.py'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_decimal'"}, "return_value": "'tests/test_utils.py::test_decimal'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_decimal'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_hex_to_bytes'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_hex_to_bytes'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_hex_to_bytes'"}, "return_value": "'tests/test_utils.py'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_hex_to_bytes'"}, "return_value": "'tests/test_utils.py::test_hex_to_bytes'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_hex_to_bytes'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_hex_to_int'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_hex_to_int'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_hex_to_int'"}, "return_value": "'tests/test_utils.py'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_hex_to_int'"}, "return_value": "'tests/test_utils.py::test_hex_to_int'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_hex_to_int'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_flip_hex_byte_order'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_flip_hex_byte_order'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_flip_hex_byte_order'"}, "return_value": "'tests/test_utils.py'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_flip_hex_byte_order'"}, "return_value": "'tests/test_utils.py::test_flip_hex_byte_order'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_flip_hex_byte_order'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_chunk_data'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_chunk_data'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_chunk_data'"}, "return_value": "'tests/test_utils.py'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_chunk_data'"}, "return_value": "'tests/test_utils.py::test_chunk_data'"}, {"func_args": {"nodeid": "'tests/test_utils.py::test_chunk_data'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_correct'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_correct'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_correct'"}, "return_value": "'tests/test_utils.py'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_correct'"}, "return_value": "'tests/test_utils.py::TestBytesToHex'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_correct'"}, "return_value": "'tests/test_utils.py::TestBytesToHex::test_correct'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_correct'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_default'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_default'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_default'"}, "return_value": "'tests/test_utils.py'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_default'"}, "return_value": "'tests/test_utils.py::TestBytesToHex'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_default'"}, "return_value": "'tests/test_utils.py::TestBytesToHex::test_default'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_default'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_upper'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_upper'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_upper'"}, "return_value": "'tests/test_utils.py'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_upper'"}, "return_value": "'tests/test_utils.py::TestBytesToHex'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_upper'"}, "return_value": "'tests/test_utils.py::TestBytesToHex::test_upper'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestBytesToHex::test_upper'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_default'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_default'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_default'"}, "return_value": "'tests/test_utils.py'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_default'"}, "return_value": "'tests/test_utils.py::TestIntToUnknownBytes'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_default'"}, "return_value": "'tests/test_utils.py::TestIntToUnknownBytes::test_default'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_default'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_little'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_little'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_little'"}, "return_value": "'tests/test_utils.py'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_little'"}, "return_value": "'tests/test_utils.py::TestIntToUnknownBytes'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_little'"}, "return_value": "'tests/test_utils.py::TestIntToUnknownBytes::test_little'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_little'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_zero'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_zero'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_zero'"}, "return_value": "'tests/test_utils.py'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_zero'"}, "return_value": "'tests/test_utils.py::TestIntToUnknownBytes'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_zero'"}, "return_value": "'tests/test_utils.py::TestIntToUnknownBytes::test_zero'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToUnknownBytes::test_zero'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToHex::test_default'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToHex::test_default'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToHex::test_default'"}, "return_value": "'tests/test_utils.py'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToHex::test_default'"}, "return_value": "'tests/test_utils.py::TestIntToHex'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToHex::test_default'"}, "return_value": "'tests/test_utils.py::TestIntToHex::test_default'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToHex::test_default'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToHex::test_upper'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToHex::test_upper'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToHex::test_upper'"}, "return_value": "'tests/test_utils.py'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToHex::test_upper'"}, "return_value": "'tests/test_utils.py::TestIntToHex'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToHex::test_upper'"}, "return_value": "'tests/test_utils.py::TestIntToHex::test_upper'"}, {"func_args": {"nodeid": "'tests/test_utils.py::TestIntToHex::test_upper'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_main'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_main'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_main'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_main'"}, "return_value": "'tests/test_wallet.py::TestWIFToKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_main'"}, "return_value": "'tests/test_wallet.py::TestWIFToKey::test_compressed_main'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_main'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_main'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_main'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_main'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_main'"}, "return_value": "'tests/test_wallet.py::TestWIFToKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_main'"}, "return_value": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_main'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_main'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_test'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_test'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_test'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_test'"}, "return_value": "'tests/test_wallet.py::TestWIFToKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_test'"}, "return_value": "'tests/test_wallet.py::TestWIFToKey::test_compressed_test'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_test'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_test'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_test'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_test'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_test'"}, "return_value": "'tests/test_wallet.py::TestWIFToKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_test'"}, "return_value": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_test'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_test'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_stn'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_stn'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_stn'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_stn'"}, "return_value": "'tests/test_wallet.py::TestWIFToKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_stn'"}, "return_value": "'tests/test_wallet.py::TestWIFToKey::test_compressed_stn'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_compressed_stn'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_stn'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_stn'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_stn'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_stn'"}, "return_value": "'tests/test_wallet.py::TestWIFToKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_stn'"}, "return_value": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_stn'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestWIFToKey::test_uncompressed_stn'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_default'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_default'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_default'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_default'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_default'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_init_default'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_default'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_from_key'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_from_key'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_from_key'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_from_key'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_from_key'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_init_from_key'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_from_key'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_wif_error'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_wif_error'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_wif_error'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_wif_error'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_wif_error'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_init_wif_error'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_init_wif_error'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_key_compressed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_key_compressed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_key_compressed'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_key_compressed'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_key_compressed'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_public_key_compressed'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_key_compressed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_key_uncompressed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_key_uncompressed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_key_uncompressed'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_key_uncompressed'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_key_uncompressed'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_public_key_uncompressed'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_key_uncompressed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_point'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_point'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_point'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_point'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_point'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_public_point'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_public_point'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_sign'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_sign'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_sign'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_sign'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_sign'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_sign'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_sign'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_verify_success'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_verify_success'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_verify_success'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_verify_success'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_verify_success'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_verify_success'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_verify_success'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_verify_failure'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_verify_failure'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_verify_failure'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_verify_failure'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_verify_failure'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_verify_failure'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_verify_failure'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_hex'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_hex'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_hex'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_hex'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_hex'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_to_hex'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_hex'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_bytes'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_bytes'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_bytes'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_bytes'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_bytes'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_to_bytes'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_bytes'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_der'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_der'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_der'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_der'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_der'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_to_der'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_der'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_pem'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_pem'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_pem'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_pem'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_pem'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_to_pem'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_pem'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_int'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_int'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_int'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_int'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_int'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_to_int'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_to_int'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_is_compressed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_is_compressed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_is_compressed'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_is_compressed'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_is_compressed'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_is_compressed'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_is_compressed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_equal'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_equal'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_equal'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_equal'"}, "return_value": "'tests/test_wallet.py::TestBaseKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_equal'"}, "return_value": "'tests/test_wallet.py::TestBaseKey::test_equal'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestBaseKey::test_equal'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_alias'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_alias'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_alias'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_alias'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_alias'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_alias'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_alias'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_init_default'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_init_default'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_init_default'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_init_default'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_init_default'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_init_default'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_init_default'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_address'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_address'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_address'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_address'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_address'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_address'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_address'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_to_wif'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_to_wif'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_to_wif'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_to_wif'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_to_wif'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_to_wif'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_to_wif'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_balance'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_balance'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_balance'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_balance'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_balance'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_get_balance'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_balance'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_unspent'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_unspent'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_unspent'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_unspent'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_unspent'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_get_unspent'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_unspent'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_transactions'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_transactions'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_transactions'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_transactions'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_transactions'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_get_transactions'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_get_transactions'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_hex'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_hex'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_hex'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_hex'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_hex'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_from_hex'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_hex'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_der'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_der'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_der'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_der'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_der'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_from_der'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_der'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_pem'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_pem'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_pem'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_pem'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_pem'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_from_pem'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_pem'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_int'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_int'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_int'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_int'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_int'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_from_int'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_int'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_hex_testnet'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_hex_testnet'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_hex_testnet'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_hex_testnet'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_hex_testnet'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_from_hex_testnet'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_hex_testnet'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_der_testnet'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_der_testnet'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_der_testnet'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_der_testnet'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_der_testnet'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_from_der_testnet'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_der_testnet'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_pem_testnet'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_pem_testnet'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_pem_testnet'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_pem_testnet'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_pem_testnet'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_from_pem_testnet'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_pem_testnet'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_int_testnet'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_int_testnet'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_int_testnet'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_int_testnet'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_int_testnet'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_from_int_testnet'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_from_int_testnet'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_repr'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_repr'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_repr'"}, "return_value": "'tests/test_wallet.py'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_repr'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_repr'"}, "return_value": "'tests/test_wallet.py::TestPrivateKey::test_repr'"}, {"func_args": {"nodeid": "'tests/test_wallet.py::TestPrivateKey::test_repr'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_fees.py::test_get_fee'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_fees.py::test_get_fee'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_fees.py::test_get_fee'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_fees.py::test_get_fee'"}, "return_value": "'tests/network/test_fees.py'"}, {"func_args": {"nodeid": "'tests/network/test_fees.py::test_get_fee'"}, "return_value": "'tests/network/test_fees.py::test_get_fee'"}, {"func_args": {"nodeid": "'tests/network/test_fees.py::test_get_fee'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_fees.py::test_get_fee_invalid_speed'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_fees.py::test_get_fee_invalid_speed'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_fees.py::test_get_fee_invalid_speed'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_fees.py::test_get_fee_invalid_speed'"}, "return_value": "'tests/network/test_fees.py'"}, {"func_args": {"nodeid": "'tests/network/test_fees.py::test_get_fee_invalid_speed'"}, "return_value": "'tests/network/test_fees.py::test_get_fee_invalid_speed'"}, {"func_args": {"nodeid": "'tests/network/test_fees.py::test_get_fee_invalid_speed'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_init'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_init'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_init'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_init'"}, "return_value": "'tests/network/test_meta.py'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_init'"}, "return_value": "'tests/network/test_meta.py::TestUnspent'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_init'"}, "return_value": "'tests/network/test_meta.py::TestUnspent::test_init'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_init'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_dict_conversion'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_dict_conversion'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_dict_conversion'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_dict_conversion'"}, "return_value": "'tests/network/test_meta.py'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_dict_conversion'"}, "return_value": "'tests/network/test_meta.py::TestUnspent'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_dict_conversion'"}, "return_value": "'tests/network/test_meta.py::TestUnspent::test_dict_conversion'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_dict_conversion'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_equality'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_equality'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_equality'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_equality'"}, "return_value": "'tests/network/test_meta.py'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_equality'"}, "return_value": "'tests/network/test_meta.py::TestUnspent'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_equality'"}, "return_value": "'tests/network/test_meta.py::TestUnspent::test_equality'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_equality'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_repr'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_repr'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_repr'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_repr'"}, "return_value": "'tests/network/test_meta.py'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_repr'"}, "return_value": "'tests/network/test_meta.py::TestUnspent'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_repr'"}, "return_value": "'tests/network/test_meta.py::TestUnspent::test_repr'"}, {"func_args": {"nodeid": "'tests/network/test_meta.py::TestUnspent::test_repr'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_satoshi_to_satoshi'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_satoshi_to_satoshi'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_satoshi_to_satoshi'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_satoshi_to_satoshi'"}, "return_value": "'tests/network/test_rates.py'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_satoshi_to_satoshi'"}, "return_value": "'tests/network/test_rates.py::test_satoshi_to_satoshi'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_satoshi_to_satoshi'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_ubsv_to_satoshi'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_ubsv_to_satoshi'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_ubsv_to_satoshi'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_ubsv_to_satoshi'"}, "return_value": "'tests/network/test_rates.py'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_ubsv_to_satoshi'"}, "return_value": "'tests/network/test_rates.py::test_ubsv_to_satoshi'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_ubsv_to_satoshi'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_mbsv_to_satoshi'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_mbsv_to_satoshi'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_mbsv_to_satoshi'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_mbsv_to_satoshi'"}, "return_value": "'tests/network/test_rates.py'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_mbsv_to_satoshi'"}, "return_value": "'tests/network/test_rates.py::test_mbsv_to_satoshi'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_mbsv_to_satoshi'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_bsv_to_satoshi'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_bsv_to_satoshi'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_bsv_to_satoshi'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_bsv_to_satoshi'"}, "return_value": "'tests/network/test_rates.py'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_bsv_to_satoshi'"}, "return_value": "'tests/network/test_rates.py::test_bsv_to_satoshi'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_bsv_to_satoshi'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_satoshi_to_currency_cached'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_satoshi_to_currency_cached'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_satoshi_to_currency_cached'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_satoshi_to_currency_cached'"}, "return_value": "'tests/network/test_rates.py'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_satoshi_to_currency_cached'"}, "return_value": "'tests/network/test_rates.py::test_satoshi_to_currency_cached'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::test_satoshi_to_currency_cached'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::TestSatoshiToCurrency::test_no_exponent'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::TestSatoshiToCurrency::test_no_exponent'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::TestSatoshiToCurrency::test_no_exponent'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::TestSatoshiToCurrency::test_no_exponent'"}, "return_value": "'tests/network/test_rates.py'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::TestSatoshiToCurrency::test_no_exponent'"}, "return_value": "'tests/network/test_rates.py::TestSatoshiToCurrency'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::TestSatoshiToCurrency::test_no_exponent'"}, "return_value": "'tests/network/test_rates.py::TestSatoshiToCurrency::test_no_exponent'"}, {"func_args": {"nodeid": "'tests/network/test_rates.py::TestSatoshiToCurrency::test_no_exponent'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::test_set_service_timeout'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::test_set_service_timeout'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::test_set_service_timeout'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::test_set_service_timeout'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::test_set_service_timeout'"}, "return_value": "'tests/network/test_services.py::test_set_service_timeout'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::test_set_service_timeout'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_equal'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_equal'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_equal'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_equal'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_equal'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_equal'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_equal'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_equal'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_failure'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_failure'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_failure'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_failure'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_failure'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_failure'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_failure'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_main_failure'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_equal'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_equal'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_equal'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_equal'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_equal'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_equal'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_equal'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_equal'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_failure'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_failure'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_failure'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_failure'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_failure'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_failure'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_failure'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_main_failure'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_equal'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_equal'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_equal'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_equal'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_equal'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_equal'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_equal'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_equal'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_failure'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_failure'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_failure'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_failure'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_failure'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_failure'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_failure'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_main_failure'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_equal'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_equal'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_equal'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_equal'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_equal'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_equal'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_equal'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_equal'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_failure'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_failure'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_failure'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_failure'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_failure'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_failure'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_failure'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_balance_test_failure'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_equal'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_equal'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_equal'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_equal'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_equal'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_equal'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_equal'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_equal'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_failure'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_failure'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_failure'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_failure'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_failure'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_failure'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_failure'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_transactions_test_failure'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_equal'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_equal'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_equal'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_equal'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_equal'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_equal'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_equal'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_equal'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_failure'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_failure'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_failure'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_failure'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_failure'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_failure'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_failure'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_get_unspents_test_failure'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_switch_service'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_switch_service'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_switch_service'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_switch_service'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_switch_service'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_switch_service'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI::test_switch_service'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_switch_service'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_retry_service'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_retry_service'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_retry_service'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_retry_service'"}, "return_value": "'tests/network/test_services.py'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_retry_service'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_retry_service'"}, "return_value": "'tests/network/test_services.py::TestNetworkAPI::test_retry_service'"}, {"func_args": {"nodeid": "'tests/network/test_services.py::TestNetworkAPI::test_retry_service'"}, "return_value": "None"}, {"func_args": {"nodeid": "'tests/network/test_transaction.py::TestTransaction::test_init'"}, "return_value": "''"}, {"func_args": {"nodeid": "'tests/network/test_transaction.py::TestTransaction::test_init'"}, "return_value": "'tests'"}, {"func_args": {"nodeid": "'tests/network/test_transaction.py::TestTransaction::test_init'"}, "return_value": "'tests/network'"}, {"func_args": {"nodeid": "'tests/network/test_transaction.py::TestTransaction::test_init'"}, "return_value": "'tests/network/test_transaction.py'"}, {"func_args": {"nodeid": "'tests/network/test_transaction.py::TestTransaction::test_init'"}, "return_value": "'tests/network/test_transaction.py::TestTransaction'"}, {"func_args": {"nodeid": "'tests/network/test_transaction.py::TestTransaction::test_init'"}, "return_value": "'tests/network/test_transaction.py::TestTransaction::test_init'"}, {"func_args": {"nodeid": "'tests/network/test_transaction.py::TestTransaction::test_init'"}, "return_value": "None"}], "text": "def iterparentnodeids(nodeid: str) -> Iterator[str]:\n    \"\"\"Return the parent node IDs of a given node ID, inclusive.\n\n    For the node ID\n\n        \"testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_source\"\n\n    the result would be\n\n        \"\"\n        \"testing\"\n        \"testing/code\"\n        \"testing/code/test_excinfo.py\"\n        \"testing/code/test_excinfo.py::TestFormattedExcinfo\"\n        \"testing/code/test_excinfo.py::TestFormattedExcinfo::test_repr_source\"\n\n    Note that :: parts are only considered at the last / component.\n    \"\"\"\n    pos = 0\n    sep = SEP\n    yield \"\"\n    while True:\n        at = nodeid.find(sep, pos)\n        if at == -1 and sep == SEP:\n            sep = \"::\"\n        elif at == -1:\n            if nodeid:\n                yield nodeid\n            break\n        else:\n            if at:\n                yield nodeid[:at]\n            pos = at + len(sep)"}, "wcswidth": {"line": 43, "args": [{"func_args": {"s": "''"}, "return_value": "0"}, {"func_args": {"s": "'tests/test_base58.py .'"}, "return_value": "22"}, {"func_args": {"s": "'tests/test_base58.py ..'"}, "return_value": "23"}, {"func_args": {"s": "'tests/test_base58.py ...'"}, "return_value": "24"}, {"func_args": {"s": "'tests/test_base58.py ....'"}, "return_value": "25"}, {"func_args": {"s": "'tests/test_base58.py .....'"}, "return_value": "26"}, {"func_args": {"s": "'tests/test_base58.py ......'"}, "return_value": "27"}, {"func_args": {"s": "'tests/test_base58.py ......'"}, "return_value": "27"}, {"func_args": {"s": "'tests/test_curve.py .'"}, "return_value": "21"}, {"func_args": {"s": "'tests/test_curve.py ..'"}, "return_value": "22"}, {"func_args": {"s": "'tests/test_curve.py ...'"}, "return_value": "23"}, {"func_args": {"s": "'tests/test_curve.py ....'"}, "return_value": "24"}, {"func_args": {"s": "'tests/test_curve.py ....'"}, "return_value": "24"}, {"func_args": {"s": "'tests/test_format.py .'"}, "return_value": "22"}, {"func_args": {"s": "'tests/test_format.py ..'"}, "return_value": "23"}, {"func_args": {"s": "'tests/test_format.py ...'"}, "return_value": "24"}, {"func_args": {"s": "'tests/test_format.py ....'"}, "return_value": "25"}, {"func_args": {"s": "'tests/test_format.py .....'"}, "return_value": "26"}, {"func_args": {"s": "'tests/test_format.py ......'"}, "return_value": "27"}, {"func_args": {"s": "'tests/test_format.py .......'"}, "return_value": "28"}, {"func_args": {"s": "'tests/test_format.py ........'"}, "return_value": "29"}, {"func_args": {"s": "'tests/test_format.py .........'"}, "return_value": "30"}, {"func_args": {"s": "'tests/test_format.py ..........'"}, "return_value": "31"}, {"func_args": {"s": "'tests/test_format.py ...........'"}, "return_value": "32"}, {"func_args": {"s": "'tests/test_format.py ............'"}, "return_value": "33"}, {"func_args": {"s": "'tests/test_format.py .............'"}, "return_value": "34"}, {"func_args": {"s": "'tests/test_format.py ..............'"}, "return_value": "35"}, {"func_args": {"s": "'tests/test_format.py ...............'"}, "return_value": "36"}, {"func_args": {"s": "'tests/test_format.py ................'"}, "return_value": "37"}, {"func_args": {"s": "'tests/test_format.py .................'"}, "return_value": "38"}, {"func_args": {"s": "'tests/test_format.py ..................'"}, "return_value": "39"}, {"func_args": {"s": "'tests/test_format.py ...................'"}, "return_value": "40"}, {"func_args": {"s": "'tests/test_format.py ....................'"}, "return_value": "41"}, {"func_args": {"s": "'tests/test_format.py .....................'"}, "return_value": "42"}, {"func_args": {"s": "'tests/test_format.py ......................'"}, "return_value": "43"}, {"func_args": {"s": "'tests/test_format.py .......................'"}, "return_value": "44"}, {"func_args": {"s": "'tests/test_format.py ........................'"}, "return_value": "45"}, {"func_args": {"s": "'tests/test_format.py .........................'"}, "return_value": "46"}, {"func_args": {"s": "'tests/test_format.py ..........................'"}, "return_value": "47"}, {"func_args": {"s": "'tests/test_format.py ...........................'"}, "return_value": "48"}, {"func_args": {"s": "'tests/test_format.py ............................'"}, "return_value": "49"}, {"func_args": {"s": "'tests/test_format.py .............................'"}, "return_value": "50"}, {"func_args": {"s": "'tests/test_format.py ..............................'"}, "return_value": "51"}, {"func_args": {"s": "'tests/test_format.py ...............................'"}, "return_value": "52"}, {"func_args": {"s": "'tests/test_format.py ................................'"}, "return_value": "53"}, {"func_args": {"s": "'tests/test_format.py ................................'"}, "return_value": "53"}, {"func_args": {"s": "'tests/test_transaction.py .'"}, "return_value": "27"}, {"func_args": {"s": "'tests/test_transaction.py ..'"}, "return_value": "28"}, {"func_args": {"s": "'tests/test_transaction.py ...'"}, "return_value": "29"}, {"func_args": {"s": "'tests/test_transaction.py ....'"}, "return_value": "30"}, {"func_args": {"s": "'tests/test_transaction.py .....'"}, "return_value": "31"}, {"func_args": {"s": "'tests/test_transaction.py ......'"}, "return_value": "32"}, {"func_args": {"s": "'tests/test_transaction.py .......'"}, "return_value": "33"}, {"func_args": {"s": "'tests/test_transaction.py ........'"}, "return_value": "34"}, {"func_args": {"s": "'tests/test_transaction.py .........'"}, "return_value": "35"}, {"func_args": {"s": "'tests/test_transaction.py ..........'"}, "return_value": "36"}, {"func_args": {"s": "'tests/test_transaction.py ...........'"}, "return_value": "37"}, {"func_args": {"s": "'tests/test_transaction.py ............'"}, "return_value": "38"}, {"func_args": {"s": "'tests/test_transaction.py .............'"}, "return_value": "39"}, {"func_args": {"s": "'tests/test_transaction.py ..............'"}, "return_value": "40"}, {"func_args": {"s": "'tests/test_transaction.py ...............'"}, "return_value": "41"}, {"func_args": {"s": "'tests/test_transaction.py ................'"}, "return_value": "42"}, {"func_args": {"s": "'tests/test_transaction.py .................'"}, "return_value": "43"}, {"func_args": {"s": "'tests/test_transaction.py ..................'"}, "return_value": "44"}, {"func_args": {"s": "'tests/test_transaction.py ...................'"}, "return_value": "45"}, {"func_args": {"s": "'tests/test_transaction.py ....................'"}, "return_value": "46"}, {"func_args": {"s": "'tests/test_transaction.py .....................'"}, "return_value": "47"}, {"func_args": {"s": "'tests/test_transaction.py ......................'"}, "return_value": "48"}, {"func_args": {"s": "'tests/test_transaction.py .......................'"}, "return_value": "49"}, {"func_args": {"s": "'tests/test_transaction.py ........................'"}, "return_value": "50"}, {"func_args": {"s": "'tests/test_transaction.py .........................'"}, "return_value": "51"}, {"func_args": {"s": "'tests/test_transaction.py ..........................'"}, "return_value": "52"}, {"func_args": {"s": "'tests/test_transaction.py ...........................'"}, "return_value": "53"}, {"func_args": {"s": "'tests/test_transaction.py ...........................'"}, "return_value": "53"}, {"func_args": {"s": "'tests/test_utils.py .'"}, "return_value": "21"}, {"func_args": {"s": "'tests/test_utils.py ..'"}, "return_value": "22"}, {"func_args": {"s": "'tests/test_utils.py ...'"}, "return_value": "23"}, {"func_args": {"s": "'tests/test_utils.py ....'"}, "return_value": "24"}, {"func_args": {"s": "'tests/test_utils.py .....'"}, "return_value": "25"}, {"func_args": {"s": "'tests/test_utils.py ......'"}, "return_value": "26"}, {"func_args": {"s": "'tests/test_utils.py .......'"}, "return_value": "27"}, {"func_args": {"s": "'tests/test_utils.py ........'"}, "return_value": "28"}, {"func_args": {"s": "'tests/test_utils.py .........'"}, "return_value": "29"}, {"func_args": {"s": "'tests/test_utils.py ..........'"}, "return_value": "30"}, {"func_args": {"s": "'tests/test_utils.py ...........'"}, "return_value": "31"}, {"func_args": {"s": "'tests/test_utils.py ............'"}, "return_value": "32"}, {"func_args": {"s": "'tests/test_utils.py .............'"}, "return_value": "33"}, {"func_args": {"s": "'tests/test_utils.py .............'"}, "return_value": "33"}, {"func_args": {"s": "'tests/test_wallet.py .'"}, "return_value": "22"}, {"func_args": {"s": "'tests/test_wallet.py ..'"}, "return_value": "23"}, {"func_args": {"s": "'tests/test_wallet.py ...'"}, "return_value": "24"}, {"func_args": {"s": "'tests/test_wallet.py ....'"}, "return_value": "25"}, {"func_args": {"s": "'tests/test_wallet.py .....'"}, "return_value": "26"}, {"func_args": {"s": "'tests/test_wallet.py ......'"}, "return_value": "27"}, {"func_args": {"s": "'tests/test_wallet.py .......'"}, "return_value": "28"}, {"func_args": {"s": "'tests/test_wallet.py ........'"}, "return_value": "29"}, {"func_args": {"s": "'tests/test_wallet.py .........'"}, "return_value": "30"}, {"func_args": {"s": "'tests/test_wallet.py ..........'"}, "return_value": "31"}, {"func_args": {"s": "'tests/test_wallet.py ...........'"}, "return_value": "32"}, {"func_args": {"s": "'tests/test_wallet.py ............'"}, "return_value": "33"}, {"func_args": {"s": "'tests/test_wallet.py .............'"}, "return_value": "34"}, {"func_args": {"s": "'tests/test_wallet.py ..............'"}, "return_value": "35"}, {"func_args": {"s": "'tests/test_wallet.py ...............'"}, "return_value": "36"}, {"func_args": {"s": "'tests/test_wallet.py ................'"}, "return_value": "37"}, {"func_args": {"s": "'tests/test_wallet.py .................'"}, "return_value": "38"}, {"func_args": {"s": "'tests/test_wallet.py ..................'"}, "return_value": "39"}, {"func_args": {"s": "'tests/test_wallet.py ...................'"}, "return_value": "40"}, {"func_args": {"s": "'tests/test_wallet.py ....................'"}, "return_value": "41"}, {"func_args": {"s": "'tests/test_wallet.py .....................'"}, "return_value": "42"}, {"func_args": {"s": "'tests/test_wallet.py ......................'"}, "return_value": "43"}, {"func_args": {"s": "'tests/test_wallet.py .......................'"}, "return_value": "44"}, {"func_args": {"s": "'tests/test_wallet.py ........................'"}, "return_value": "45"}, {"func_args": {"s": "'tests/test_wallet.py .........................'"}, "return_value": "46"}, {"func_args": {"s": "'tests/test_wallet.py ..........................'"}, "return_value": "47"}, {"func_args": {"s": "'tests/test_wallet.py ...........................'"}, "return_value": "48"}, {"func_args": {"s": "'tests/test_wallet.py ............................'"}, "return_value": "49"}, {"func_args": {"s": "'tests/test_wallet.py .............................'"}, "return_value": "50"}, {"func_args": {"s": "'tests/test_wallet.py ..............................'"}, "return_value": "51"}, {"func_args": {"s": "'tests/test_wallet.py ...............................'"}, "return_value": "52"}, {"func_args": {"s": "'tests/test_wallet.py ................................'"}, "return_value": "53"}, {"func_args": {"s": "'tests/test_wallet.py .................................'"}, "return_value": "54"}, {"func_args": {"s": "'tests/test_wallet.py ..................................'"}, "return_value": "55"}, {"func_args": {"s": "'tests/test_wallet.py ...................................'"}, "return_value": "56"}, {"func_args": {"s": "'tests/test_wallet.py ....................................'"}, "return_value": "57"}, {"func_args": {"s": "'tests/test_wallet.py .....................................'"}, "return_value": "58"}, {"func_args": {"s": "'tests/test_wallet.py ......................................'"}, "return_value": "59"}, {"func_args": {"s": "'tests/test_wallet.py ......................................'"}, "return_value": "59"}, {"func_args": {"s": "'tests/network/test_fees.py .'"}, "return_value": "28"}, {"func_args": {"s": "'tests/network/test_fees.py ..'"}, "return_value": "29"}, {"func_args": {"s": "'tests/network/test_fees.py ..'"}, "return_value": "29"}, {"func_args": {"s": "'tests/network/test_meta.py .'"}, "return_value": "28"}, {"func_args": {"s": "'tests/network/test_meta.py ..'"}, "return_value": "29"}, {"func_args": {"s": "'tests/network/test_meta.py ...'"}, "return_value": "30"}, {"func_args": {"s": "'tests/network/test_meta.py ....'"}, "return_value": "31"}, {"func_args": {"s": "'tests/network/test_meta.py ....'"}, "return_value": "31"}, {"func_args": {"s": "'tests/network/test_rates.py .'"}, "return_value": "29"}, {"func_args": {"s": "'tests/network/test_rates.py ..'"}, "return_value": "30"}, {"func_args": {"s": "'tests/network/test_rates.py ...'"}, "return_value": "31"}, {"func_args": {"s": "'tests/network/test_rates.py ....'"}, "return_value": "32"}, {"func_args": {"s": "'tests/network/test_rates.py .....'"}, "return_value": "33"}, {"func_args": {"s": "'tests/network/test_rates.py ......'"}, "return_value": "34"}, {"func_args": {"s": "'tests/network/test_rates.py ......'"}, "return_value": "34"}, {"func_args": {"s": "'tests/network/test_services.py .'"}, "return_value": "32"}, {"func_args": {"s": "'tests/network/test_services.py ..'"}, "return_value": "33"}, {"func_args": {"s": "'tests/network/test_services.py ...'"}, "return_value": "34"}, {"func_args": {"s": "'tests/network/test_services.py ....'"}, "return_value": "35"}, {"func_args": {"s": "'tests/network/test_services.py .....'"}, "return_value": "36"}, {"func_args": {"s": "'tests/network/test_services.py ......'"}, "return_value": "37"}, {"func_args": {"s": "'tests/network/test_services.py .......'"}, "return_value": "38"}, {"func_args": {"s": "'tests/network/test_services.py ........'"}, "return_value": "39"}, {"func_args": {"s": "'tests/network/test_services.py .........'"}, "return_value": "40"}, {"func_args": {"s": "'tests/network/test_services.py ..........'"}, "return_value": "41"}, {"func_args": {"s": "'tests/network/test_services.py ...........'"}, "return_value": "42"}, {"func_args": {"s": "'tests/network/test_services.py ............'"}, "return_value": "43"}, {"func_args": {"s": "'tests/network/test_services.py .............'"}, "return_value": "44"}, {"func_args": {"s": "'tests/network/test_services.py ..............'"}, "return_value": "45"}, {"func_args": {"s": "'tests/network/test_services.py ...............'"}, "return_value": "46"}, {"func_args": {"s": "'tests/network/test_services.py ...............'"}, "return_value": "46"}, {"func_args": {"s": "'tests/network/test_transaction.py .'"}, "return_value": "35"}], "text": "def wcswidth(s: str) -> int:\n    \"\"\"Determine how many columns are needed to display a string in a terminal.\n\n    Returns -1 if the string contains non-printable characters.\n    \"\"\"\n    width = 0\n    for c in unicodedata.normalize(\"NFC\", s):\n        wc = wcwidth(c)\n        if wc < 0:\n            return -1\n        width += wc\n    return width"}, "wcwidth": {"line": 4, "args": [{"func_args": {"c": "'t'"}, "return_value": "1"}, {"func_args": {"c": "'e'"}, "return_value": "1"}, {"func_args": {"c": "'s'"}, "return_value": "1"}, {"func_args": {"c": "'/'"}, "return_value": "1"}, {"func_args": {"c": "'_'"}, "return_value": "1"}, {"func_args": {"c": "'b'"}, "return_value": "1"}, {"func_args": {"c": "'a'"}, "return_value": "1"}, {"func_args": {"c": "'5'"}, "return_value": "1"}, {"func_args": {"c": "'8'"}, "return_value": "1"}, {"func_args": {"c": "'.'"}, "return_value": "1"}, {"func_args": {"c": "'p'"}, "return_value": "1"}, {"func_args": {"c": "'y'"}, "return_value": "1"}, {"func_args": {"c": "' '"}, "return_value": "1"}, {"func_args": {"c": "'c'"}, "return_value": "1"}, {"func_args": {"c": "'u'"}, "return_value": "1"}, {"func_args": {"c": "'r'"}, "return_value": "1"}, {"func_args": {"c": "'v'"}, "return_value": "1"}, {"func_args": {"c": "'f'"}, "return_value": "1"}, {"func_args": {"c": "'o'"}, "return_value": "1"}, {"func_args": {"c": "'m'"}, "return_value": "1"}, {"func_args": {"c": "'n'"}, "return_value": "1"}, {"func_args": {"c": "'i'"}, "return_value": "1"}, {"func_args": {"c": "'l'"}, "return_value": "1"}, {"func_args": {"c": "'w'"}, "return_value": "1"}, {"func_args": {"c": "'k'"}, "return_value": "1"}]}, "b58encode": {"line": 10, "args": [{"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8&E\\xb4\\xbf'"}, "return_value": "'1ELReFsTCUY2mfaDTy32qxYiT49z786eFg'"}, {"func_args": {"bytestr": "b'\\x00'"}, "return_value": "'1'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8&E\\xb4\\xbf'"}, "return_value": "'1ELReFsTCUY2mfaDTy32qxYiT49z786eFg'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, "return_value": "'5KHxtARu5yr1JECrYGEA2YpCPdh1i9ciEgQayAF8kcqApkGzT9s'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Y\\x07\\x92}'"}, "return_value": "'934bTuFSgCv9GHi9Ac84u9NA3J3isK9uadGY3nbe6MaDbnQdcbn'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01\\xa9t\\xd1\\r'"}, "return_value": "'L3jsepcttyuJK3HKezD4qqRKGtwc8d2d1Nw6vsoPDX9cMcUxqqMv'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01\\xfbW\\x8a\\x98'"}, "return_value": "'cU6s7jckL3bZUUkb3Q2CD9vNu8F1o58K5R5a3JFtidoccMbhEGKZ'"}, {"func_args": {"bytestr": "b'\\x00\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb\\xdc9\\xfeq'"}, "return_value": "'1ExJJsNLQDNVVM1s1sdyt1o5P3GC5r32UG'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8&E\\xb4\\xbf'"}, "return_value": "'1ELReFsTCUY2mfaDTy32qxYiT49z786eFg'"}, {"func_args": {"bytestr": "b'o\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb\"\\x01\\xe4S'"}, "return_value": "'muUFbvTKDEokGTVUjScMhw1QF2rtv5hxCz'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x18c\\xe2\\x99'"}, "return_value": "'mtrNwJxS1VyHYn3qBY1Qfsm3K3kh1mGRMS'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, "return_value": "'5KHxtARu5yr1JECrYGEA2YpCPdh1i9ciEgQayAF8kcqApkGzT9s'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01\\xa9t\\xd1\\r'"}, "return_value": "'L3jsepcttyuJK3HKezD4qqRKGtwc8d2d1Nw6vsoPDX9cMcUxqqMv'"}], "text": "def b58encode(bytestr):\n\n    alphabet = BASE58_ALPHABET_LIST\n\n    encoded = deque()\n    append = encoded.appendleft\n    _divmod = divmod\n\n    num = int.from_bytes(bytestr, 'big')\n\n    while num > 0:\n        num, rem = _divmod(num, 58)\n        append(alphabet[rem])\n\n    encoded = ''.join(encoded)\n\n    pad = 0\n    for byte in bytestr:\n        if byte == 0:\n            pad += 1\n        else:\n            break\n\n    return '1' * pad + encoded"}, "b58encode_check": {"line": 36, "args": [{"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "'1ELReFsTCUY2mfaDTy32qxYiT49z786eFg'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "'5KHxtARu5yr1JECrYGEA2YpCPdh1i9ciEgQayAF8kcqApkGzT9s'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "'934bTuFSgCv9GHi9Ac84u9NA3J3isK9uadGY3nbe6MaDbnQdcbn'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "'L3jsepcttyuJK3HKezD4qqRKGtwc8d2d1Nw6vsoPDX9cMcUxqqMv'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "'cU6s7jckL3bZUUkb3Q2CD9vNu8F1o58K5R5a3JFtidoccMbhEGKZ'"}, {"func_args": {"bytestr": "b'\\x00\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, "return_value": "'1ExJJsNLQDNVVM1s1sdyt1o5P3GC5r32UG'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "'1ELReFsTCUY2mfaDTy32qxYiT49z786eFg'"}, {"func_args": {"bytestr": "b'o\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, "return_value": "'muUFbvTKDEokGTVUjScMhw1QF2rtv5hxCz'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "'mtrNwJxS1VyHYn3qBY1Qfsm3K3kh1mGRMS'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "'5KHxtARu5yr1JECrYGEA2YpCPdh1i9ciEgQayAF8kcqApkGzT9s'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "'L3jsepcttyuJK3HKezD4qqRKGtwc8d2d1Nw6vsoPDX9cMcUxqqMv'"}], "text": "def b58encode_check(bytestr):\n    return b58encode(bytestr + double_sha256_checksum(bytestr))"}, "double_sha256": {"line": 9, "args": [{"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbfD \\x83\\xeb\\xe0d\\xca\\xe0\\\\-\\x96\\xe8\\xbbG7\\xc1\\x8c\\xd7t\\x89h\\xc6\\x97\\xbb\\xad\\xf41\\xa9'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbfD \\x83\\xeb\\xe0d\\xca\\xe0\\\\-\\x96\\xe8\\xbbG7\\xc1\\x8c\\xd7t\\x89h\\xc6\\x97\\xbb\\xad\\xf41\\xa9'"}, {"func_args": {"bytestr": "b\"\\x00\\x02\\x85\\x9f`\\x86\\x1c\\xc0\\xe74\\xa2\\xe4\\xee'\\x1a=@\\xa1N\\xa3\\xa7\""}, "return_value": "b'\\x1c\\xd5\\x05\\xc4\\x97\\xd2\\x899?\\xb1\\xfa;&\\xc0\\r\\xfaA\\x9b\"b\\xf5\\x05W\\xdf\\xde\\xfe\\xe1So\\x8dI7'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbfD \\x83\\xeb\\xe0d\\xca\\xe0\\\\-\\x96\\xe8\\xbbG7\\xc1\\x8c\\xd7t\\x89h\\xc6\\x97\\xbb\\xad\\xf41\\xa9'"}, {"func_args": {"bytestr": "b'\\x00\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, "return_value": "b'\\xdc9\\xfeq\\x0eG\\xe9\\x13+P;h\\xe7\\x15\\xdedn7\\x93!)\\xe7\\xb6g\\xf3\\xa4\\x13\\x9bT\\xcaPP'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99Y\\x0b\\xea\\x83P\\xc1\\x946\\xcb-\\x97\\xfe\\x04w:\\x19\\x01\\x99V\\xf0\\xbb\\xebf\\x15 0U\\xb0'"}, {"func_args": {"bytestr": "b'o\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, "return_value": "b'\"\\x01\\xe4S\\x18m\\xbd\\xe5\\x1e\\xa3\\xcc@\\xc3b%\\xe5\\x1e\\x15t\\xc1\\x04Q\\xd2\\xdcy4\\xf2\\xf7fE\\xc3\\xd1'"}, {"func_args": {"bytestr": "b'\\x01\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\xba\\xfb\\xca\\xe9\\x08\\x0c@\\xb0~\\xdf!\\x93\\x93oH\\xb8\\x96\\xa3H\\xdc\\xd8IE\\xaa\\x912\\xb6\\xa8\\xb7\\x05\\xa4p'"}, {"func_args": {"bytestr": "b'\\x05U\\x13\\x1e\\xfbz\\x0e\\xddLv\\xcc;\\xbe\\x83;\\xfcY\\xa6\\xf7<k'"}, "return_value": "b'\\xc9KDW\\x03\\xbe\\x13TX\\xbd\\xb3\\x84\\xf4\\x88\\xca\\xd2[\\x052\\x12\\xeb\\x19@<sq\\xe0i\\xe4\\n_\\xa3'"}, {"func_args": {"bytestr": "b'\\xc4\\xf2&\\x1e\\x95d\\xc9\\xdf\\xff\\xa8\\x15\\x05\\xc1S\\xfb\\x95\\xbf\\x93\\x99C\\x08'"}, "return_value": "b'\\xd4\\xd9\\t\\x1b\\xc0\\xb1\\xf5]\\x8b\\xcfQ9\\xb6\\x05m\\xd3\\xc8\\x04E\\xf0\\xa3\\xed\\xa9\\x1c\\x8a\\xa7\\xc7\\xc7\\xee\\x89\\x88\\x83'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Y\\x07\\x92}\\xac\\n\\xef\\xd4\\x18\\x16\\xe24\\xc8\\xe6\\x9b\\x83\\x13l\\xd8\\x89\\xdfr\\xe4\\xc2Va`\\xddc=\\x96\\x10'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r\\xd57\\x08\\xc5\\x8a\\xaa\\xf3\\xc4y/\\xe9\\x15\\x0b\\xe0\\x9a<\\xbe\\xd9\\xfc\\n-\\xee\\xf0\\x1a\\xcb\\x15]\\x1e'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xfbW\\x8a\\x98\\xb6\\x00\\xe7z\\x1c\\xb1\\xa7:w\\xe6\\xb9\\xe5Gbf\\x01\\xfc\\xc374\\x9b\\xbcb\\xbek\\x14tG'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Y\\x07\\x92}\\xac\\n\\xef\\xd4\\x18\\x16\\xe24\\xc8\\xe6\\x9b\\x83\\x13l\\xd8\\x89\\xdfr\\xe4\\xc2Va`\\xddc=\\x96\\x10'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r\\xd57\\x08\\xc5\\x8a\\xaa\\xf3\\xc4y/\\xe9\\x15\\x0b\\xe0\\x9a<\\xbe\\xd9\\xfc\\n-\\xee\\xf0\\x1a\\xcb\\x15]\\x1e'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbfD \\x83\\xeb\\xe0d\\xca\\xe0\\\\-\\x96\\xe8\\xbbG7\\xc1\\x8c\\xd7t\\x89h\\xc6\\x97\\xbb\\xad\\xf41\\xa9'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Y\\x07\\x92}\\xac\\n\\xef\\xd4\\x18\\x16\\xe24\\xc8\\xe6\\x9b\\x83\\x13l\\xd8\\x89\\xdfr\\xe4\\xc2Va`\\xddc=\\x96\\x10'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r\\xd57\\x08\\xc5\\x8a\\xaa\\xf3\\xc4y/\\xe9\\x15\\x0b\\xe0\\x9a<\\xbe\\xd9\\xfc\\n-\\xee\\xf0\\x1a\\xcb\\x15]\\x1e'"}, {"func_args": {"bytestr": "b\"\\x00\\x02\\x85\\x9f`\\x86\\x1c\\xc0\\xe74\\xa2\\xe4\\xee'\\x1a=@\\xa1N\\xa3\\xa7\""}, "return_value": "b'\\x1c\\xd5\\x05\\xc4\\x97\\xd2\\x899?\\xb1\\xfa;&\\xc0\\r\\xfaA\\x9b\"b\\xf5\\x05W\\xdf\\xde\\xfe\\xe1So\\x8dI7'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbfD \\x83\\xeb\\xe0d\\xca\\xe0\\\\-\\x96\\xe8\\xbbG7\\xc1\\x8c\\xd7t\\x89h\\xc6\\x97\\xbb\\xad\\xf41\\xa9'"}, {"func_args": {"bytestr": "b'\\x00\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, "return_value": "b'\\xdc9\\xfeq\\x0eG\\xe9\\x13+P;h\\xe7\\x15\\xdedn7\\x93!)\\xe7\\xb6g\\xf3\\xa4\\x13\\x9bT\\xcaPP'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbfD \\x83\\xeb\\xe0d\\xca\\xe0\\\\-\\x96\\xe8\\xbbG7\\xc1\\x8c\\xd7t\\x89h\\xc6\\x97\\xbb\\xad\\xf41\\xa9'"}, {"func_args": {"bytestr": "b'o\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, "return_value": "b'\"\\x01\\xe4S\\x18m\\xbd\\xe5\\x1e\\xa3\\xcc@\\xc3b%\\xe5\\x1e\\x15t\\xc1\\x04Q\\xd2\\xdcy4\\xf2\\xf7fE\\xc3\\xd1'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99Y\\x0b\\xea\\x83P\\xc1\\x946\\xcb-\\x97\\xfe\\x04w:\\x19\\x01\\x99V\\xf0\\xbb\\xebf\\x15 0U\\xb0'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbfD \\x83\\xeb\\xe0d\\xca\\xe0\\\\-\\x96\\xe8\\xbbG7\\xc1\\x8c\\xd7t\\x89h\\xc6\\x97\\xbb\\xad\\xf41\\xa9'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbfD \\x83\\xeb\\xe0d\\xca\\xe0\\\\-\\x96\\xe8\\xbbG7\\xc1\\x8c\\xd7t\\x89h\\xc6\\x97\\xbb\\xad\\xf41\\xa9'"}, {"func_args": {"bytestr": "b'\\x00\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, "return_value": "b'\\xdc9\\xfeq\\x0eG\\xe9\\x13+P;h\\xe7\\x15\\xdedn7\\x93!)\\xe7\\xb6g\\xf3\\xa4\\x13\\x9bT\\xcaPP'"}, {"func_args": {"bytestr": "b'\\x00\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, "return_value": "b'\\xdc9\\xfeq\\x0eG\\xe9\\x13+P;h\\xe7\\x15\\xdedn7\\x93!)\\xe7\\xb6g\\xf3\\xa4\\x13\\x9bT\\xcaPP'"}, {"func_args": {"bytestr": "b'\\x05U\\x13\\x1e\\xfbz\\x0e\\xddLv\\xcc;\\xbe\\x83;\\xfcY\\xa6\\xf7<k'"}, "return_value": "b'\\xc9KDW\\x03\\xbe\\x13TX\\xbd\\xb3\\x84\\xf4\\x88\\xca\\xd2[\\x052\\x12\\xeb\\x19@<sq\\xe0i\\xe4\\n_\\xa3'"}, {"func_args": {"bytestr": "b'\\xc4\\xf2&\\x1e\\x95d\\xc9\\xdf\\xff\\xa8\\x15\\x05\\xc1S\\xfb\\x95\\xbf\\x93\\x99C\\x08'"}, "return_value": "b'\\xd4\\xd9\\t\\x1b\\xc0\\xb1\\xf5]\\x8b\\xcfQ9\\xb6\\x05m\\xd3\\xc8\\x04E\\xf0\\xa3\\xed\\xa9\\x1c\\x8a\\xa7\\xc7\\xc7\\xee\\x89\\x88\\x83'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbfD \\x83\\xeb\\xe0d\\xca\\xe0\\\\-\\x96\\xe8\\xbbG7\\xc1\\x8c\\xd7t\\x89h\\xc6\\x97\\xbb\\xad\\xf41\\xa9'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbfD \\x83\\xeb\\xe0d\\xca\\xe0\\\\-\\x96\\xe8\\xbbG7\\xc1\\x8c\\xd7t\\x89h\\xc6\\x97\\xbb\\xad\\xf41\\xa9'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i\\x02\\x1e&br?\\x0f\\x01\\xf1\\xc4T\\x14\\x85\\x8c\\x95;~A?\\x1e\\x01\\xa3p\\xea5\\xe3>\\x07'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i\\x02\\x1e&br?\\x0f\\x01\\xf1\\xc4T\\x14\\x85\\x8c\\x95;~A?\\x1e\\x01\\xa3p\\xea5\\xe3>\\x07'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99Y\\x0b\\xea\\x83P\\xc1\\x946\\xcb-\\x97\\xfe\\x04w:\\x19\\x01\\x99V\\xf0\\xbb\\xebf\\x15 0U\\xb0'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99Y\\x0b\\xea\\x83P\\xc1\\x946\\xcb-\\x97\\xfe\\x04w:\\x19\\x01\\x99V\\xf0\\xbb\\xebf\\x15 0U\\xb0'"}, {"func_args": {"bytestr": "b\"\\x88x9\\x9d\\x83\\xec%\\xc6'\\xcf\\xbfu?\\xf9\\xca6\\x027>\\xacCz\\xb2gaT\\xa3\\xc2\\xda#\\xad\\xf3\\x01\\x00\\x00\\x00\""}, "return_value": "b'\\xd4\\x13\\xe4\\xe4\\x8a\\xd0B\\ro\\xe12]\\xaa\\xc8i\\xe4\\xca\\xfb\\xfe\\x15J\\xcb\\xb2\\xf1\\xdf\\xd9F\\x03\\xcf\\x8c\\xa2\\xc9'"}, {"func_args": {"bytestr": "b'\\xff\\xff\\xff\\xff'"}, "return_value": "b';\\xb10)\\xce{\\x1fU\\x9e\\xf5\\xe7G\\xfc\\xacC\\x9f\\x14U\\xa2\\xec|_\\t\\xb7\"\\x90y^pfPD'"}, {"func_args": {"bytestr": "b'P\\xc3\\x00\\x00\\x00\\x00\\x00\\x00\\x19v\\xa9\\x14\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\x88\\xac\\x08\\x88\\xfc\\x04\\x00\\x00\\x00\\x00\\x19v\\xa9\\x14\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x88\\xac'"}, "return_value": "b'\\xa1\\xec\\xd1\\xa4/Gd\\x88\\x17\\xa5\\x8b\\x91\\xa7\\x9c\\n\\x15\\x85h\\xde\\xca`\\xf4S\\x952\\x02f\\xe7#}=\\xf7'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i\\x02\\x1e&br?\\x0f\\x01\\xf1\\xc4T\\x14\\x85\\x8c\\x95;~A?\\x1e\\x01\\xa3p\\xea5\\xe3>\\x07'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i\\x02\\x1e&br?\\x0f\\x01\\xf1\\xc4T\\x14\\x85\\x8c\\x95;~A?\\x1e\\x01\\xa3p\\xea5\\xe3>\\x07'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99Y\\x0b\\xea\\x83P\\xc1\\x946\\xcb-\\x97\\xfe\\x04w:\\x19\\x01\\x99V\\xf0\\xbb\\xebf\\x15 0U\\xb0'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99Y\\x0b\\xea\\x83P\\xc1\\x946\\xcb-\\x97\\xfe\\x04w:\\x19\\x01\\x99V\\xf0\\xbb\\xebf\\x15 0U\\xb0'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i\\x02\\x1e&br?\\x0f\\x01\\xf1\\xc4T\\x14\\x85\\x8c\\x95;~A?\\x1e\\x01\\xa3p\\xea5\\xe3>\\x07'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i\\x02\\x1e&br?\\x0f\\x01\\xf1\\xc4T\\x14\\x85\\x8c\\x95;~A?\\x1e\\x01\\xa3p\\xea5\\xe3>\\x07'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99Y\\x0b\\xea\\x83P\\xc1\\x946\\xcb-\\x97\\xfe\\x04w:\\x19\\x01\\x99V\\xf0\\xbb\\xebf\\x15 0U\\xb0'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99Y\\x0b\\xea\\x83P\\xc1\\x946\\xcb-\\x97\\xfe\\x04w:\\x19\\x01\\x99V\\xf0\\xbb\\xebf\\x15 0U\\xb0'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i\\x02\\x1e&br?\\x0f\\x01\\xf1\\xc4T\\x14\\x85\\x8c\\x95;~A?\\x1e\\x01\\xa3p\\xea5\\xe3>\\x07'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i\\x02\\x1e&br?\\x0f\\x01\\xf1\\xc4T\\x14\\x85\\x8c\\x95;~A?\\x1e\\x01\\xa3p\\xea5\\xe3>\\x07'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99Y\\x0b\\xea\\x83P\\xc1\\x946\\xcb-\\x97\\xfe\\x04w:\\x19\\x01\\x99V\\xf0\\xbb\\xebf\\x15 0U\\xb0'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99Y\\x0b\\xea\\x83P\\xc1\\x946\\xcb-\\x97\\xfe\\x04w:\\x19\\x01\\x99V\\xf0\\xbb\\xebf\\x15 0U\\xb0'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i\\x02\\x1e&br?\\x0f\\x01\\xf1\\xc4T\\x14\\x85\\x8c\\x95;~A?\\x1e\\x01\\xa3p\\xea5\\xe3>\\x07'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i\\x02\\x1e&br?\\x0f\\x01\\xf1\\xc4T\\x14\\x85\\x8c\\x95;~A?\\x1e\\x01\\xa3p\\xea5\\xe3>\\x07'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i\\x02\\x1e&br?\\x0f\\x01\\xf1\\xc4T\\x14\\x85\\x8c\\x95;~A?\\x1e\\x01\\xa3p\\xea5\\xe3>\\x07'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i\\x02\\x1e&br?\\x0f\\x01\\xf1\\xc4T\\x14\\x85\\x8c\\x95;~A?\\x1e\\x01\\xa3p\\xea5\\xe3>\\x07'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99Y\\x0b\\xea\\x83P\\xc1\\x946\\xcb-\\x97\\xfe\\x04w:\\x19\\x01\\x99V\\xf0\\xbb\\xebf\\x15 0U\\xb0'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99Y\\x0b\\xea\\x83P\\xc1\\x946\\xcb-\\x97\\xfe\\x04w:\\x19\\x01\\x99V\\xf0\\xbb\\xebf\\x15 0U\\xb0'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i\\x02\\x1e&br?\\x0f\\x01\\xf1\\xc4T\\x14\\x85\\x8c\\x95;~A?\\x1e\\x01\\xa3p\\xea5\\xe3>\\x07'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i\\x02\\x1e&br?\\x0f\\x01\\xf1\\xc4T\\x14\\x85\\x8c\\x95;~A?\\x1e\\x01\\xa3p\\xea5\\xe3>\\x07'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99Y\\x0b\\xea\\x83P\\xc1\\x946\\xcb-\\x97\\xfe\\x04w:\\x19\\x01\\x99V\\xf0\\xbb\\xebf\\x15 0U\\xb0'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99Y\\x0b\\xea\\x83P\\xc1\\x946\\xcb-\\x97\\xfe\\x04w:\\x19\\x01\\x99V\\xf0\\xbb\\xebf\\x15 0U\\xb0'"}, {"func_args": {"bytestr": "b\"\\x01\\x00\\x00\\x00\\x01\\x88x9\\x9d\\x83\\xec%\\xc6'\\xcf\\xbfu?\\xf9\\xca6\\x027>\\xacCz\\xb2gaT\\xa3\\xc2\\xda#\\xad\\xf3\\x01\\x00\\x00\\x00\\x8aG0D\\x02 Mo(\\xd7\\x7f\\xa3\\x1c\\xfcl\\x13\\xbb\\x1b\\xda&(\\xf2#~&0\\xe8\\x92\\xdcb\\xbb1\\x9e\\xb7]\\xc7\\xf91\\x02 t\\x1fM\\xf7\\xd9F\\r\\xaa\\x84C\\x89\\xeb#\\xfb1\\x8d\\xd6t\\x96qD\\xeb\\x89Gv\\x08\\xb1\\x0e\\x03\\xc1u\\x03AA\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\\xff\\xff\\xff\\xff\\x02P\\xc3\\x00\\x00\\x00\\x00\\x00\\x00\\x19v\\xa9\\x14\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\x88\\xac\\x08\\x88\\xfc\\x04\\x00\\x00\\x00\\x00\\x19v\\xa9\\x14\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x88\\xac\\x00\\x00\\x00\\x00\""}, "return_value": "b\"i\\xca\\xb8+\\x13|G:L\\x8a;\\xea\\xcbD'\\x8a\\xac\\x00\\xe0\\xde\\x17\\x03\\xbb\\xcc>\\x006\\r\\xfb\\x7fcd\""}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r\\xd57\\x08\\xc5\\x8a\\xaa\\xf3\\xc4y/\\xe9\\x15\\x0b\\xe0\\x9a<\\xbe\\xd9\\xfc\\n-\\xee\\xf0\\x1a\\xcb\\x15]\\x1e'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xfbW\\x8a\\x98\\xb6\\x00\\xe7z\\x1c\\xb1\\xa7:w\\xe6\\xb9\\xe5Gbf\\x01\\xfc\\xc374\\x9b\\xbcb\\xbek\\x14tG'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Y\\x07\\x92}\\xac\\n\\xef\\xd4\\x18\\x16\\xe24\\xc8\\xe6\\x9b\\x83\\x13l\\xd8\\x89\\xdfr\\xe4\\xc2Va`\\xddc=\\x96\\x10'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Y\\x07\\x92}\\xac\\n\\xef\\xd4\\x18\\x16\\xe24\\xc8\\xe6\\x9b\\x83\\x13l\\xd8\\x89\\xdfr\\xe4\\xc2Va`\\xddc=\\x96\\x10'"}, {"func_args": {"bytestr": "b'\\xef\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1\\x01'"}, "return_value": "b'\\x89(\\xcb\\x83\\xd3g3\\x85\\x8f\\xe5\\x01G\\xa0v8\\xf8\\xbc\\xbfb\\xedN\\x18\\xdfx$!\\xd2\\xc1v\\x06\\xe1\\x18'"}, {"func_args": {"bytestr": "b'\\xef\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "b'Uv\\x87~\\x11\\x1a\\n\\xc5Z\\xcf\\xd9\\x0c\\xab\\xf7]\\xf2\\x8d\\x88\\xb80\\xe4\\x1d\\xa9q\\x11}\\xf1\\x02}/0\\x9a'"}, {"func_args": {"bytestr": "b'\\xef\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "b'Uv\\x87~\\x11\\x1a\\n\\xc5Z\\xcf\\xd9\\x0c\\xab\\xf7]\\xf2\\x8d\\x88\\xb80\\xe4\\x1d\\xa9q\\x11}\\xf1\\x02}/0\\x9a'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r\\xd57\\x08\\xc5\\x8a\\xaa\\xf3\\xc4y/\\xe9\\x15\\x0b\\xe0\\x9a<\\xbe\\xd9\\xfc\\n-\\xee\\xf0\\x1a\\xcb\\x15]\\x1e'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r\\xd57\\x08\\xc5\\x8a\\xaa\\xf3\\xc4y/\\xe9\\x15\\x0b\\xe0\\x9a<\\xbe\\xd9\\xfc\\n-\\xee\\xf0\\x1a\\xcb\\x15]\\x1e'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r\\xd57\\x08\\xc5\\x8a\\xaa\\xf3\\xc4y/\\xe9\\x15\\x0b\\xe0\\x9a<\\xbe\\xd9\\xfc\\n-\\xee\\xf0\\x1a\\xcb\\x15]\\x1e'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r\\xd57\\x08\\xc5\\x8a\\xaa\\xf3\\xc4y/\\xe9\\x15\\x0b\\xe0\\x9a<\\xbe\\xd9\\xfc\\n-\\xee\\xf0\\x1a\\xcb\\x15]\\x1e'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Y\\x07\\x92}\\xac\\n\\xef\\xd4\\x18\\x16\\xe24\\xc8\\xe6\\x9b\\x83\\x13l\\xd8\\x89\\xdfr\\xe4\\xc2Va`\\xddc=\\x96\\x10'"}, {"func_args": {"bytestr": "b'\\xef\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "b'Uv\\x87~\\x11\\x1a\\n\\xc5Z\\xcf\\xd9\\x0c\\xab\\xf7]\\xf2\\x8d\\x88\\xb80\\xe4\\x1d\\xa9q\\x11}\\xf1\\x02}/0\\x9a'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r\\xd57\\x08\\xc5\\x8a\\xaa\\xf3\\xc4y/\\xe9\\x15\\x0b\\xe0\\x9a<\\xbe\\xd9\\xfc\\n-\\xee\\xf0\\x1a\\xcb\\x15]\\x1e'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r\\xd57\\x08\\xc5\\x8a\\xaa\\xf3\\xc4y/\\xe9\\x15\\x0b\\xe0\\x9a<\\xbe\\xd9\\xfc\\n-\\xee\\xf0\\x1a\\xcb\\x15]\\x1e'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2\\x0e\\xa6O\\xb7\\x05\\x83\\xf2\\xf3\\xbf\\x93l\\xfd4\\xef\\x10\\xf5\\xc5\\xba\\x8a\\xffi\\xe6m!{w\\xb2q'"}], "text": "def double_sha256(bytestr):\n    return _sha256(_sha256(bytestr).digest()).digest()"}, "double_sha256_checksum": {"line": 13, "args": [{"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbf'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbf'"}, {"func_args": {"bytestr": "b\"\\x00\\x02\\x85\\x9f`\\x86\\x1c\\xc0\\xe74\\xa2\\xe4\\xee'\\x1a=@\\xa1N\\xa3\\xa7\""}, "return_value": "b'\\x1c\\xd5\\x05\\xc4'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbf'"}, {"func_args": {"bytestr": "b'\\x00\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, "return_value": "b'\\xdc9\\xfeq'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99'"}, {"func_args": {"bytestr": "b'o\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, "return_value": "b'\"\\x01\\xe4S'"}, {"func_args": {"bytestr": "b'\\x01\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\xba\\xfb\\xca\\xe9'"}, {"func_args": {"bytestr": "b'\\x05U\\x13\\x1e\\xfbz\\x0e\\xddLv\\xcc;\\xbe\\x83;\\xfcY\\xa6\\xf7<k'"}, "return_value": "b'\\xc9KDW'"}, {"func_args": {"bytestr": "b'\\xc4\\xf2&\\x1e\\x95d\\xc9\\xdf\\xff\\xa8\\x15\\x05\\xc1S\\xfb\\x95\\xbf\\x93\\x99C\\x08'"}, "return_value": "b'\\xd4\\xd9\\t\\x1b'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Y\\x07\\x92}'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xfbW\\x8a\\x98'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Y\\x07\\x92}'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbf'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Y\\x07\\x92}'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r'"}, {"func_args": {"bytestr": "b\"\\x00\\x02\\x85\\x9f`\\x86\\x1c\\xc0\\xe74\\xa2\\xe4\\xee'\\x1a=@\\xa1N\\xa3\\xa7\""}, "return_value": "b'\\x1c\\xd5\\x05\\xc4'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbf'"}, {"func_args": {"bytestr": "b'\\x00\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, "return_value": "b'\\xdc9\\xfeq'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbf'"}, {"func_args": {"bytestr": "b'o\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, "return_value": "b'\"\\x01\\xe4S'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbf'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbf'"}, {"func_args": {"bytestr": "b'\\x00\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, "return_value": "b'\\xdc9\\xfeq'"}, {"func_args": {"bytestr": "b'\\x00\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, "return_value": "b'\\xdc9\\xfeq'"}, {"func_args": {"bytestr": "b'\\x05U\\x13\\x1e\\xfbz\\x0e\\xddLv\\xcc;\\xbe\\x83;\\xfcY\\xa6\\xf7<k'"}, "return_value": "b'\\xc9KDW'"}, {"func_args": {"bytestr": "b'\\xc4\\xf2&\\x1e\\x95d\\xc9\\xdf\\xff\\xa8\\x15\\x05\\xc1S\\xfb\\x95\\xbf\\x93\\x99C\\x08'"}, "return_value": "b'\\xd4\\xd9\\t\\x1b'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbf'"}, {"func_args": {"bytestr": "b'\\x00\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'&E\\xb4\\xbf'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i'"}, {"func_args": {"bytestr": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff'"}, "return_value": "b'\\xf1\\xae\\xb8i'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99'"}, {"func_args": {"bytestr": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, "return_value": "b'\\x18c\\xe2\\x99'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xfbW\\x8a\\x98'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Y\\x07\\x92}'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Y\\x07\\x92}'"}, {"func_args": {"bytestr": "b'\\xef\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1\\x01'"}, "return_value": "b'\\x89(\\xcb\\x83'"}, {"func_args": {"bytestr": "b'\\xef\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "b'Uv\\x87~'"}, {"func_args": {"bytestr": "b'\\xef\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "b'Uv\\x87~'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Y\\x07\\x92}'"}, {"func_args": {"bytestr": "b'\\xef\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "b'Uv\\x87~'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01'"}, "return_value": "b'\\xa9t\\xd1\\r'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}, {"func_args": {"bytestr": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'Db\\xb6\\xa2'"}], "text": "def double_sha256_checksum(bytestr):\n    return double_sha256(bytestr)[:4]"}, "sha256": {"line": 24, "args": [{"func_args": {"bytestr": "b'data'"}, "return_value": "b':n\\xb0y\\x0f9\\xac\\x87\\xc9O8V\\xb2\\xdd,]\\x11\\x0eh\\x11`\"a\\xa9\\xa9#\\xd3\\xbb#\\xad\\xc8\\xb7'"}, {"func_args": {"bytestr": "b'data'"}, "return_value": "b':n\\xb0y\\x0f9\\xac\\x87\\xc9O8V\\xb2\\xdd,]\\x11\\x0eh\\x11`\"a\\xa9\\xa9#\\xd3\\xbb#\\xad\\xc8\\xb7'"}, {"func_args": {"bytestr": "b'OA\\x0bT\\x93^!Z\\xbf^\\xd4Z\\x9c\\xd2\\x8f\\x1d\\xc8&\\x11\\x13\\x83K\\xb89\\\\\\x0e\\xc8-\\xcc\\x19a\\x8f'"}, "return_value": "b\"\\x17Y\\x98W$\\xa2\\xaf\\xdc\\x0b=\\x13\\x03m\\x8f\\x8c\\xec\\xf37\\r#;}\\xff\\xa7wc'\\x8f\\xc6\\x17\\x06/\""}, {"func_args": {"bytestr": "b'h\\xcd\\x8b\\x8e\\xdb\\x00C\\xea\\xeb\\x80\\x08\\xdc\\xb8\\xb4ox\\xca{[\\x1c\\x1c\\n\\xae\\x9f\\x02g\\x01u\\xbd\\xcaO\\t\\xdd\\xbd\\xd3Ou\\xf1\\x99\\xa0)\\xa5\\x1bMX\\x12V\\xdaR=\\xfb\\xff\\x03$#\\x1f\\x06\\x95(\\\\aB\\x17\\x81\\xf9\\xc3\\xcd\\x08p\\x15=\\x16>\\xe9\\x1b!3\\xc5\\xcb\\x18\\x93\\xb7\\xdc\\xee\\x9dO\\xa1\\x11/\\xc7\\x18@\\xaa\\x1f\\xbf\\xf7\\x0c\\xee\\xf2!\\xbe\\x94\\xec\\x85\\x9d4S\\xce\\x0e!\\\\\\xab\\xa5\\xd0d\\xc7\\x81\\x8f\\xe2\\x89X\\x19w\\x1e\\xb4h\\xe9\\xa7N\\xf62n\\xd8]\\xaa\\xe2o\\xb1\\xfe\\x17\\x8e\\xc5\\x01\\xe3\\xcb\\x18\\xb8T\\x9d\\xd1\\xc7\\xcb\\xd8\\xca\\xfa\\xd0\\xde}\\xe05`\\x8c\\x96 \\x9a\\xc2\\x95[1{\\xb6\\x96W\\xced\\xef\\xc5.\\xc0\\x0f\\xff\\x80\\x92so\\xa6\\xa6\\xe0\\xcf|\\x9e2\\x08Es\\xd0#U\\xcd\\xde'"}, "return_value": "b\"E\\xabNY#\\xb3\\x13q'>\\x88\\x06y\\x86\\xbd\\x95\\xb3dS\\xa2V\\xf9\\xd8\\x04v\\xb6a\\xf8&\\x9b\\x13\\x03\""}, {"func_args": {"bytestr": "b'h\\xcd\\x8b\\x8e\\xdb\\x00C\\xea\\xeb\\x80\\x08\\xdc\\xb8\\xb4ox\\xca{[\\x1c\\x1c\\n\\xae\\x9f\\x02g\\x01u\\xbd\\xcaO\\t\\xdd\\xbd\\xd3Ou\\xf1\\x99\\xa0)\\xa5\\x1bMX\\x12V\\xdaR=\\xfb\\xff\\x03$#\\x1f\\x06\\x95(\\\\aB\\x17\\x81\\xf9\\xc3\\xcd\\x08p\\x15=\\x16>\\xe9\\x1b!3\\xc5\\xcb\\x18\\x93\\xb7\\xdc\\xee\\x9dO\\xa1\\x11/\\xc7\\x18@\\xaa\\x1f\\xbf\\xf7\\x0c\\xee\\xf2!\\xbe\\x94\\xec\\x85\\x9d4S\\xce\\x0e!\\\\\\xab\\xa5\\xd0d\\xc7\\x81\\x8f\\xe2\\x89X\\x19w\\x1e\\xb4h\\xe9\\xa7N\\xf62n\\xd8]\\xaa\\xe2o\\xb1\\xfe\\x17\\x8e\\xc5\\x01\\xe3\\xcb\\x18\\xb8T\\x9d\\xd1\\xc7\\xcb\\xd8\\xca\\xfa\\xd0\\xde}\\xe05`\\x8c\\x96 \\x9a\\xc2\\x95[1{\\xb6\\x96W\\xced\\xef\\xc5.\\xc0\\x0f\\xff\\x80\\x92so\\xa6\\xa6\\xe0\\xcf|\\x9e2\\x08Es\\xd0#U\\xcd\\xde'"}, "return_value": "b\"E\\xabNY#\\xb3\\x13q'>\\x88\\x06y\\x86\\xbd\\x95\\xb3dS\\xa2V\\xf9\\xd8\\x04v\\xb6a\\xf8&\\x9b\\x13\\x03\""}, {"func_args": {"bytestr": "b'\\x15v\\xb5\\xc5x\\x15iSH\\xd7hS\\xa4ik\\x86BG\\xa0,\\x17\\x8fY2\\xe7\\x17|\\xfc\\xe8\\xc6\\x84\\xf6::\\x18$7!\\x14xQ(Lwh\\xb6\\xd1\\xda\\x7f\\xc7\\xff\\x84\\xcf\\xe3\\x02\\xe9=\\xdb.mEPk){\\xd6\\xa5@\\n\\x94\\xf6.;)\\xc5\\xb0\\xda&\\xa1\\xfa\\x9a\\xd5\\x18S\\xa3Y\\xc7\\x140\\xdb\\x82\\x8c\\xe4\\x12UOs\\xda\\\\\\x17a\\xff\\x03<\\xd7S\\xabD\\xfbM\\xb7\\xdc\\xd7\\xeft\\xee\\xa4\\x94Ic\\x1d\\xb3R\\xbc\\x8d\\xc4D\\x1a\\xa1X\\xdc}\\r\\xa3;|e\\x1d\\xa4\\x06\\xec\\x04\\xb3\\x0b\\xaa\\x13\\x91\\x00\\x91\\x8c+\\xe7\\x007\\xcf\\xc0\\xb5\\x84\\xfb\\x94\\xa9\\xb4\\xaeA\\xb1\\x98\\xa5#\\xeb\\x95K\\x8co\\x12\\xe9 \\x98\\xe4\\xe6\\x14\\x7f\\x0f\\xa2T\\xd7\\xb2\\xd6n-1\\xd6\\xb04\\xf8\\x9eGh\\xf3,^'"}, "return_value": "b'UG;l\\x07m:\\x13^\\x80\\xcf\\xc3\\x87\\x956\\xab82\\xad\\xf7\\x94A\\x15V\\x8e\\xf7\\x14\\x97w(>D'"}, {"func_args": {"bytestr": "b'\\x15v\\xb5\\xc5x\\x15iSH\\xd7hS\\xa4ik\\x86BG\\xa0,\\x17\\x8fY2\\xe7\\x17|\\xfc\\xe8\\xc6\\x84\\xf6::\\x18$7!\\x14xQ(Lwh\\xb6\\xd1\\xda\\x7f\\xc7\\xff\\x84\\xcf\\xe3\\x02\\xe9=\\xdb.mEPk){\\xd6\\xa5@\\n\\x94\\xf6.;)\\xc5\\xb0\\xda&\\xa1\\xfa\\x9a\\xd5\\x18S\\xa3Y\\xc7\\x140\\xdb\\x82\\x8c\\xe4\\x12UOs\\xda\\\\\\x17a\\xff\\x03<\\xd7S\\xabD\\xfbM\\xb7\\xdc\\xd7\\xeft\\xee\\xa4\\x94Ic\\x1d\\xb3R\\xbc\\x8d\\xc4D\\x1a\\xa1X\\xdc}\\r\\xa3;|e\\x1d\\xa4\\x06\\xec\\x04\\xb3\\x0b\\xaa\\x13\\x91\\x00\\x91\\x8c+\\xe7\\x007\\xcf\\xc0\\xb5\\x84\\xfb\\x94\\xa9\\xb4\\xaeA\\xb1\\x98\\xa5#\\xeb\\x95K\\x8co\\x12\\xe9 \\x98\\xe4\\xe6\\x14\\x7f\\x0f\\xa2T\\xd7\\xb2\\xd6n-1\\xd6\\xb04\\xf8\\x9eGh\\xf3,^'"}, "return_value": "b'UG;l\\x07m:\\x13^\\x80\\xcf\\xc3\\x87\\x956\\xab82\\xad\\xf7\\x94A\\x15V\\x8e\\xf7\\x14\\x97w(>D'"}, {"func_args": {"bytestr": "b'\\x00\\x06]>\\xf2\\x97>\\\\\\xf7-/\\x0e\\x8a\\xd2\\xe4\\'\\x14}-\\xec`\\x9a_Q\"\\xdf\\xa9 |\\xd5\\x93\\x9f\\xf1\\xd0\\x93\\xfb\\xee\\x1eD\\x10A\\xc3\\x91\\xdb\\xf0\\x92\\x91\\xadD~\\xeb\\x93m\\x00N\\xad\\xae\\x87q&\\x17\\xe7\\xaax\\x99\\xd0\\x9e)\\x93R\\xecJ)@\\xebj\\xe76*\\x17.+\\xd2\\xf7\\xf1\\x11 \\xce\\x16\\xae\\xde\\x8d\\xc7\\x1f\\xab\\xe1\\xd3Z8Iw\\xe8\\xdf\\xfa\\x8f\\xcd\\xa4J\\x16\\xb0NP\\xc1\\xc5\\x06\\x89\\x08\\x01\\x8b\\x93\\x12*\\xaeU\\x99\\xf2ob\\xd6\\x08\\x0b\\xca\\\\\\xb9\\xb3\\xba\\x9c\\\\\\x9eN\\x86of\\xa18P\\x95\\xf4\\x1b\\xc4\\xf3\\x0c\\x13\\xa9/\\x07\\xf3L\\xaf\\x00\\xc9\\x11>Rs\\x1ef\\xfa\\xe8\\xedm>\\x00+\\xe40SNky\\x08\\x8aH\\xbd\\x812\\x1e\\x81E z`\\x93Un\\xa6\\xe9\\'\\x92\\xbb'"}, "return_value": "b'\\x11\\xfdM\\x18\\x94\\n\\xd4\\x1e\\xe1F\\x14\\xa9\\x8dP\\xd7\\xef\\xd1X\\n\\x00\\x19\\xdc{\\xc7p\\xfa\\x9f\\xe9\\xd6\\xa8\\xa7\\xa9'"}, {"func_args": {"bytestr": "b'\\xbb\\x92\\'\\xe9\\xa6nU\\x93`z E\\x81\\x1e2\\x81\\xbdH\\x8a\\x08ykNS0\\xe4+\\x00>m\\xed\\xe8\\xfaf\\x1esR>\\x11\\xc9\\x00\\xafL\\xf3\\x07/\\xa9\\x13\\x0c\\xf3\\xc4\\x1b\\xf4\\x95P8\\xa1fo\\x86N\\x9e\\\\\\x9c\\xba\\xb3\\xb9\\\\\\xca\\x0b\\x08\\xd6bo\\xf2\\x99U\\xae*\\x12\\x93\\x8b\\x01\\x08\\x89\\x06\\xc5\\xc1PN\\xb0\\x16J\\xa4\\xcd\\x8f\\xfa\\xdf\\xe8wI8Z\\xd3\\xe1\\xab\\x1f\\xc7\\x8d\\xde\\xae\\x16\\xce \\x11\\xf1\\xf7\\xd2+.\\x17*6\\xe7j\\xeb@)J\\xecR\\x93)\\x9e\\xd0\\x99x\\xaa\\xe7\\x17&q\\x87\\xae\\xadN\\x00m\\x93\\xeb~D\\xad\\x91\\x92\\xf0\\xdb\\x91\\xc3A\\x10D\\x1e\\xee\\xfb\\x93\\xd0\\xf1\\x9f\\x93\\xd5| \\xa9\\xdf\"Q_\\x9a`\\xec-}\\x14\\'\\xe4\\xd2\\x8a\\x0e/-\\xf7\\\\>\\x97\\xf2>]\\x06\\x00'"}, "return_value": "b'\\xfe[*\\xa9\\x84\\xa1\\x87\\x8d\\xd5\\xff\\xa5\\xbe\\x87\\x9d\\xa8\\xa2\\xd8\\xae2\\xa7\\xc0\\x02F\\xad1\\xc0v\\xd7\\xd1\\xce\\xce\\x10'"}], "text": "def sha256(bytestr: bytes) -> bytes:\n        return _sha256(bytestr).digest()"}, "ripemd160_sha256": {"line": 17, "args": [{"func_args": {"bytestr": "b\"\\x03=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4\""}, "return_value": "b'\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, {"func_args": {"bytestr": "b\"\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}, {"func_args": {"bytestr": "b\"\\x03=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4\""}, "return_value": "b'\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb'"}, {"func_args": {"bytestr": "b\"\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8'"}], "text": "def ripemd160_sha256(bytestr):\n    return new('ripemd160', sha256(bytestr)).digest()"}, "int_to_unknown_bytes": {"line": 14, "args": [{"func_args": {"num": "3586624678369103562237337711328143461747921022359905350847", "byteorder": "'big'"}, "return_value": "b'\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8&E\\xb4\\xbf'"}, {"func_args": {"num": "0", "byteorder": "'big'"}, "return_value": "b'\\x00'"}, {"func_args": {"num": "3586624678369103562237337711328143461747921022359905350847", "byteorder": "'big'"}, "return_value": "b'\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8&E\\xb4\\xbf'"}, {"func_args": {"num": "61838356523605233831678236402209370030136569351032850876", "byteorder": "'big'"}, "return_value": "b\"\\x02\\x85\\x9f`\\x86\\x1c\\xc0\\xe74\\xa2\\xe4\\xee'\\x1a=@\\xa1N\\xa3\\xa7\\t|\\xc9\\xbc\""}, {"func_args": {"num": "3586624678369103562237337711328143461747921022359905350847", "byteorder": "'big'"}, "return_value": "b'\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8&E\\xb4\\xbf'"}, {"func_args": {"num": "3752982076733829753913323606353353031990888064255270714993", "byteorder": "'big'"}, "return_value": "b'\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb\\xdc9\\xfeq'"}, {"func_args": {"num": "700344917306290668348009963687379115649109375357867503379097", "byteorder": "'big'"}, "return_value": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x18c\\xe2\\x99'"}, {"func_args": {"num": "700511274704655394539685949582404325219352342399759977407571", "byteorder": "'big'"}, "return_value": "b'o\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb\"\\x01\\xe4S'"}, {"func_args": {"num": "9863726413755784326073127134535809877850276466826434824937", "byteorder": "'big'"}, "return_value": "b'\\x01\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\xba\\xfb\\xca\\xe9'"}, {"func_args": {"num": "33471534042832104943264491882986052741072616634770638193751", "byteorder": "'big'"}, "return_value": "b'\\x05U\\x13\\x1e\\xfbz\\x0e\\xddLv\\xcc;\\xbe\\x83;\\xfcY\\xa6\\xf7<k\\xc9KDW'"}, {"func_args": {"num": "1236249413989603427560958268741970695367468867308680228964635", "byteorder": "'big'"}, "return_value": "b'\\xc4\\xf2&\\x1e\\x95d\\xc9\\xdf\\xff\\xa8\\x15\\x05\\xc1S\\xfb\\x95\\xbf\\x93\\x99C\\x08\\xd4\\xd9\\t\\x1b'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "119238183215055371543451235471983260237640410963580117617700877912428188936881621130777213", "byteorder": "'big'"}, "return_value": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Y\\x07\\x92}'"}, {"func_args": {"num": "16393037817233677891636174317487653628541383225619077371343200378185596100733546235090489613", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01\\xa9t\\xd1\\r'"}, {"func_args": {"num": "3586624678369103562237337711328143461747921022359905350847", "byteorder": "'big'"}, "return_value": "b'\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8&E\\xb4\\xbf'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "119238183215055371543451235471983260237640410963580117617700877912428188936881621130777213", "byteorder": "'big'"}, "return_value": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Y\\x07\\x92}'"}, {"func_args": {"num": "16393037817233677891636174317487653628541383225619077371343200378185596100733546235090489613", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01\\xa9t\\xd1\\r'"}, {"func_args": {"num": "61838356523605233831678236402209370030136569351032850876", "byteorder": "'big'"}, "return_value": "b\"\\x02\\x85\\x9f`\\x86\\x1c\\xc0\\xe74\\xa2\\xe4\\xee'\\x1a=@\\xa1N\\xa3\\xa7\\t|\\xc9\\xbc\""}, {"func_args": {"num": "3586624678369103562237337711328143461747921022359905350847", "byteorder": "'big'"}, "return_value": "b'\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8&E\\xb4\\xbf'"}, {"func_args": {"num": "3586624678369103562237337711328143461747921022359905350847", "byteorder": "'big'"}, "return_value": "b'\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8&E\\xb4\\xbf'"}, {"func_args": {"num": "3586624678369103562237337711328143461747921022359905350847", "byteorder": "'big'"}, "return_value": "b'\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8&E\\xb4\\xbf'"}, {"func_args": {"num": "3752982076733829753913323606353353031990888064255270714993", "byteorder": "'big'"}, "return_value": "b'\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb\\xdc9\\xfeq'"}, {"func_args": {"num": "3752982076733829753913323606353353031990888064255270714993", "byteorder": "'big'"}, "return_value": "b'\\x99\\x0e\\xf6\\rc\\xb5\\xb5\\x96J\\x1c\"\\x82\\x06\\x1a\\xf4Q#\\xe9?\\xcb\\xdc9\\xfeq'"}, {"func_args": {"num": "33471534042832104943264491882986052741072616634770638193751", "byteorder": "'big'"}, "return_value": "b'\\x05U\\x13\\x1e\\xfbz\\x0e\\xddLv\\xcc;\\xbe\\x83;\\xfcY\\xa6\\xf7<k\\xc9KDW'"}, {"func_args": {"num": "1236249413989603427560958268741970695367468867308680228964635", "byteorder": "'big'"}, "return_value": "b'\\xc4\\xf2&\\x1e\\x95d\\xc9\\xdf\\xff\\xa8\\x15\\x05\\xc1S\\xfb\\x95\\xbf\\x93\\x99C\\x08\\xd4\\xd9\\t\\x1b'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "3586624678369103562237337711328143461747921022359905350847", "byteorder": "'big'"}, "return_value": "b'\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8&E\\xb4\\xbf'"}, {"func_args": {"num": "3586624678369103562237337711328143461747921022359905350847", "byteorder": "'big'"}, "return_value": "b'\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8&E\\xb4\\xbf'"}, {"func_args": {"num": "702440901469923376062351904252476585316532478293390637578345", "byteorder": "'big'"}, "return_value": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\xf1\\xae\\xb8i'"}, {"func_args": {"num": "702440901469923376062351904252476585316532478293390637578345", "byteorder": "'big'"}, "return_value": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\xf1\\xae\\xb8i'"}, {"func_args": {"num": "700344917306290668348009963687379115649109375357867503379097", "byteorder": "'big'"}, "return_value": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x18c\\xe2\\x99'"}, {"func_args": {"num": "700344917306290668348009963687379115649109375357867503379097", "byteorder": "'big'"}, "return_value": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x18c\\xe2\\x99'"}, {"func_args": {"num": "702440901469923376062351904252476585316532478293390637578345", "byteorder": "'big'"}, "return_value": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\xf1\\xae\\xb8i'"}, {"func_args": {"num": "702440901469923376062351904252476585316532478293390637578345", "byteorder": "'big'"}, "return_value": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\xf1\\xae\\xb8i'"}, {"func_args": {"num": "700344917306290668348009963687379115649109375357867503379097", "byteorder": "'big'"}, "return_value": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x18c\\xe2\\x99'"}, {"func_args": {"num": "700344917306290668348009963687379115649109375357867503379097", "byteorder": "'big'"}, "return_value": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x18c\\xe2\\x99'"}, {"func_args": {"num": "702440901469923376062351904252476585316532478293390637578345", "byteorder": "'big'"}, "return_value": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\xf1\\xae\\xb8i'"}, {"func_args": {"num": "702440901469923376062351904252476585316532478293390637578345", "byteorder": "'big'"}, "return_value": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\xf1\\xae\\xb8i'"}, {"func_args": {"num": "700344917306290668348009963687379115649109375357867503379097", "byteorder": "'big'"}, "return_value": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x18c\\xe2\\x99'"}, {"func_args": {"num": "700344917306290668348009963687379115649109375357867503379097", "byteorder": "'big'"}, "return_value": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x18c\\xe2\\x99'"}, {"func_args": {"num": "702440901469923376062351904252476585316532478293390637578345", "byteorder": "'big'"}, "return_value": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\xf1\\xae\\xb8i'"}, {"func_args": {"num": "702440901469923376062351904252476585316532478293390637578345", "byteorder": "'big'"}, "return_value": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\xf1\\xae\\xb8i'"}, {"func_args": {"num": "700344917306290668348009963687379115649109375357867503379097", "byteorder": "'big'"}, "return_value": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x18c\\xe2\\x99'"}, {"func_args": {"num": "700344917306290668348009963687379115649109375357867503379097", "byteorder": "'big'"}, "return_value": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x18c\\xe2\\x99'"}, {"func_args": {"num": "702440901469923376062351904252476585316532478293390637578345", "byteorder": "'big'"}, "return_value": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\xf1\\xae\\xb8i'"}, {"func_args": {"num": "702440901469923376062351904252476585316532478293390637578345", "byteorder": "'big'"}, "return_value": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\xf1\\xae\\xb8i'"}, {"func_args": {"num": "702440901469923376062351904252476585316532478293390637578345", "byteorder": "'big'"}, "return_value": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\xf1\\xae\\xb8i'"}, {"func_args": {"num": "702440901469923376062351904252476585316532478293390637578345", "byteorder": "'big'"}, "return_value": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\xf1\\xae\\xb8i'"}, {"func_args": {"num": "700344917306290668348009963687379115649109375357867503379097", "byteorder": "'big'"}, "return_value": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x18c\\xe2\\x99'"}, {"func_args": {"num": "700344917306290668348009963687379115649109375357867503379097", "byteorder": "'big'"}, "return_value": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x18c\\xe2\\x99'"}, {"func_args": {"num": "702440901469923376062351904252476585316532478293390637578345", "byteorder": "'big'"}, "return_value": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\xf1\\xae\\xb8i'"}, {"func_args": {"num": "702440901469923376062351904252476585316532478293390637578345", "byteorder": "'big'"}, "return_value": "b'o\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\xf1\\xae\\xb8i'"}, {"func_args": {"num": "700344917306290668348009963687379115649109375357867503379097", "byteorder": "'big'"}, "return_value": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x18c\\xe2\\x99'"}, {"func_args": {"num": "700344917306290668348009963687379115649109375357867503379097", "byteorder": "'big'"}, "return_value": "b'o\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x18c\\xe2\\x99'"}, {"func_args": {"num": "28679718602997181072337614380936720482949", "byteorder": "'big'"}, "return_value": "b'TH8\\xe2\\xaaN\\xd7^aX7\\x93\\xe7\\xc6\\xa3\\x02\\x85'"}, {"func_args": {"num": "28679718602997181072337614380936720482949", "byteorder": "'little'"}, "return_value": "b'\\x85\\x02\\xa3\\xc6\\xe7\\x937Xa^\\xd7N\\xaa\\xe28HT'"}, {"func_args": {"num": "0", "byteorder": "'big'"}, "return_value": "b'\\x00'"}, {"func_args": {"num": "16393037817233677891636174317487653628541383225619077371343200378185596100733546235090489613", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01\\xa9t\\xd1\\r'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "30524974903054175115123516280827714620835945206676510110131424745581616367841694635611622040", "byteorder": "'big'"}, "return_value": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01\\xfbW\\x8a\\x98'"}, {"func_args": {"num": "119238183215055371543451235471983260237640410963580117617700877912428188936881621130777213", "byteorder": "'big'"}, "return_value": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Y\\x07\\x92}'"}, {"func_args": {"num": "119238183215055371543451235471983260237640410963580117617700877912428188936881621130777213", "byteorder": "'big'"}, "return_value": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Y\\x07\\x92}'"}, {"func_args": {"num": "30435219885084480395630131458230413990857128761907378969445857583814415993015755953624632195", "byteorder": "'big'"}, "return_value": "b'\\xef\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1\\x01\\x89(\\xcb\\x83'"}, {"func_args": {"num": "118887577676111251545430201008712554651785659226200699099397881186775062472717798101911422", "byteorder": "'big'"}, "return_value": "b'\\xef\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1Uv\\x87~'"}, {"func_args": {"num": "118887577676111251545430201008712554651785659226200699099397881186775062472717798101911422", "byteorder": "'big'"}, "return_value": "b'\\xef\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1Uv\\x87~'"}, {"func_args": {"num": "16393037817233677891636174317487653628541383225619077371343200378185596100733546235090489613", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01\\xa9t\\xd1\\r'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "16393037817233677891636174317487653628541383225619077371343200378185596100733546235090489613", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01\\xa9t\\xd1\\r'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "16393037817233677891636174317487653628541383225619077371343200378185596100733546235090489613", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01\\xa9t\\xd1\\r'"}, {"func_args": {"num": "16393037817233677891636174317487653628541383225619077371343200378185596100733546235090489613", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01\\xa9t\\xd1\\r'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "119238183215055371543451235471983260237640410963580117617700877912428188936881621130777213", "byteorder": "'big'"}, "return_value": "b'\\xef\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Y\\x07\\x92}'"}, {"func_args": {"num": "118887577676111251545430201008712554651785659226200699099397881186775062472717798101911422", "byteorder": "'big'"}, "return_value": "b'\\xef\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1Uv\\x87~'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "16393037817233677891636174317487653628541383225619077371343200378185596100733546235090489613", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\x01\\xa9t\\xd1\\r'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}, {"func_args": {"num": "64035303973569054264203805927686146986489778225074520981809376477287484768490416100259490", "byteorder": "'big'"}, "return_value": "b'\\x80\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3Db\\xb6\\xa2'"}], "text": "def int_to_unknown_bytes(num, byteorder='big'):\n    \"\"\"Converts an int to the least number of bytes as possible.\"\"\"\n    return num.to_bytes((num.bit_length() + 7) // 8 or 1, byteorder)"}, "int_to_varint": {"line": 48, "args": [{"func_args": {"val": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "1"}, "return_value": "b'\\x01'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "1"}, "return_value": "b'\\x01'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "1"}, "return_value": "b'\\x01'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "25"}, "return_value": "b'\\x19'"}, {"func_args": {"val": "1"}, "return_value": "b'\\x01'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "25"}, "return_value": "b'\\x19'"}, {"func_args": {"val": "25"}, "return_value": "b'\\x19'"}, {"func_args": {"val": "138"}, "return_value": "b'\\x8a'"}, {"func_args": {"val": "1"}, "return_value": "b'\\x01'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "1"}, "return_value": "b'\\x01'"}, {"func_args": {"val": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"val": "25"}, "return_value": "b'\\x19'"}, {"func_args": {"val": "25"}, "return_value": "b'\\x19'"}, {"func_args": {"val": "25"}, "return_value": "b'\\x19'"}, {"func_args": {"val": "25"}, "return_value": "b'\\x19'"}, {"func_args": {"val": "8"}, "return_value": "b'\\x08'"}, {"func_args": {"val": "8"}, "return_value": "b'\\x08'"}, {"func_args": {"val": "100015"}, "return_value": "b'\\xfe\\xaf\\x86\\x01\\x00'"}, {"func_args": {"val": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"val": "100007"}, "return_value": "b'\\xfe\\xa7\\x86\\x01\\x00'"}, {"func_args": {"val": "8"}, "return_value": "b'\\x08'"}, {"func_args": {"val": "25"}, "return_value": "b'\\x19'"}, {"func_args": {"val": "25"}, "return_value": "b'\\x19'"}, {"func_args": {"val": "25"}, "return_value": "b'\\x19'"}, {"func_args": {"val": "25"}, "return_value": "b'\\x19'"}, {"func_args": {"val": "25"}, "return_value": "b'\\x19'"}, {"func_args": {"val": "8"}, "return_value": "b'\\x08'"}, {"func_args": {"val": "25"}, "return_value": "b'\\x19'"}, {"func_args": {"val": "25"}, "return_value": "b'\\x19'"}], "text": "def int_to_varint(val):\n\n    if val < 253:\n        return val.to_bytes(1, 'little')\n    elif val <= 65535:\n        return b'\\xfd'+val.to_bytes(2, 'little')\n    elif val <= 4294967295:\n        return b'\\xfe'+val.to_bytes(4, 'little')\n    else:\n        return b'\\xff'+val.to_bytes(8, 'little')"}, "hex_to_bytes": {"line": 61, "args": [{"func_args": {"hexed": "'c28a9f80738f770d527803a566cf6fc3edf6cea586c4fc4a5223a5ad797e1ac3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"hexed": "'c28a9f80738f770d527803a566cf6fc3edf6cea586c4fc4a5223a5ad797e1ac3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}], "text": "def hex_to_bytes(hexed: str) -> bytes:\n    return pad_scalar(bytes.fromhex(pad_hex(hexed)))"}, "bytes_to_hex": {"line": 19, "args": [{"func_args": {"bytestr": "b\"\\x01\\x00\\x00\\x00\\x01\\x88x9\\x9d\\x83\\xec%\\xc6'\\xcf\\xbfu?\\xf9\\xca6\\x027>\\xacCz\\xb2gaT\\xa3\\xc2\\xda#\\xad\\xf3\\x01\\x00\\x00\\x00\\x8aG0D\\x02 Mo(\\xd7\\x7f\\xa3\\x1c\\xfcl\\x13\\xbb\\x1b\\xda&(\\xf2#~&0\\xe8\\x92\\xdcb\\xbb1\\x9e\\xb7]\\xc7\\xf91\\x02 t\\x1fM\\xf7\\xd9F\\r\\xaa\\x84C\\x89\\xeb#\\xfb1\\x8d\\xd6t\\x96qD\\xeb\\x89Gv\\x08\\xb1\\x0e\\x03\\xc1u\\x03AA\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\\xff\\xff\\xff\\xff\\x02P\\xc3\\x00\\x00\\x00\\x00\\x00\\x00\\x19v\\xa9\\x14\\xe7\\xc14_\\xc8\\xf8|h\\x17\\x0b:\\xa7\\x98\\xa9V\\xc2\\xfej\\x9e\\xff\\x88\\xac\\x08\\x88\\xfc\\x04\\x00\\x00\\x00\\x00\\x19v\\xa9\\x14\\x92F\\x1b\\xdeb\\x83\\xb4a\\xec\\xe7\\xdd\\xf4\\xdb\\xf1\\xe0\\xa4\\x8b\\xd1\\x13\\xd8\\x88\\xac\\x00\\x00\\x00\\x00\"", "upper": "False"}, "return_value": "'01000000018878399d83ec25c627cfbf753ff9ca3602373eac437ab2676154a3c2da23adf3010000008a47304402204d6f28d77fa31cfc6c13bb1bda2628f2237e2630e892dc62bb319eb75dc7f9310220741f4df7d9460daa844389eb23fb318dd674967144eb89477608b10e03c175034141043d5c2875c9bd116875a71a5db64cffcb13396b163d039b1d932782489180433476a4352a2add00ebb0d5c94c515b72eb10f1fd8f3f03b42f4a2b255bfc9aa9e3ffffffff0250c30000000000001976a914e7c1345fc8f87c68170b3aa798a956c2fe6a9eff88ac0888fc04000000001976a91492461bde6283b461ece7ddf4dbf1e0a48bd113d888ac00000000'"}, {"func_args": {"bytestr": "b\"dc\\x7f\\xfb\\r6\\x00>\\xcc\\xbb\\x03\\x17\\xde\\xe0\\x00\\xac\\x8a'D\\xcb\\xea;\\x8aL:G|\\x13+\\xb8\\xcai\"", "upper": "False"}, "return_value": "'64637ffb0d36003eccbb0317dee000ac8a2744cbea3b8a4c3a477c132bb8ca69'"}, {"func_args": {"bytestr": "b'TH8\\xe2\\xaaN\\xd7^aX7\\x93\\xe7\\xc6\\xa3\\x02\\x85'", "upper": "False"}, "return_value": "'544838e2aa4ed75e61583793e7c6a30285'"}, {"func_args": {"bytestr": "b'TH8\\xe2\\xaaN\\xd7^aX7\\x93\\xe7\\xc6\\xa3\\x02\\x85'", "upper": "False"}, "return_value": "'544838e2aa4ed75e61583793e7c6a30285'"}, {"func_args": {"bytestr": "b'TH8\\xe2\\xaaN\\xd7^aX7\\x93\\xe7\\xc6\\xa3\\x02\\x85'", "upper": "True"}, "return_value": "'544838E2AA4ED75E61583793E7C6A30285'"}, {"func_args": {"bytestr": "b'\\x85\\x02\\xa3\\xc6\\xe7\\x937Xa^\\xd7N\\xaa\\xe28HT'", "upper": "False"}, "return_value": "'8502a3c6e7933758615ed74eaae2384854'"}, {"func_args": {"bytestr": "b'TH8\\xe2\\xaaN\\xd7^aX7\\x93\\xe7\\xc6\\xa3\\x02\\x85'", "upper": "False"}, "return_value": "'544838e2aa4ed75e61583793e7c6a30285'"}], "text": "def bytes_to_hex(bytestr, upper=False):\n    hexed = hexlify(bytestr).decode()\n    return hexed.upper() if upper else hexed"}, "int_to_hex": {"line": 32, "args": [{"func_args": {"num": "28679718602997181072337614380936720482949", "upper": "False"}, "return_value": "'544838e2aa4ed75e61583793e7c6a30285'"}, {"func_args": {"num": "28679718602997181072337614380936720482949", "upper": "True"}, "return_value": "'544838E2AA4ED75E61583793E7C6A30285'"}], "text": "def int_to_hex(num, upper=False):\n    \"\"\"Ensures that there is an even number of characters in the hex string\"\"\"\n    hexed = hex(num)[2:]\n    if len(hexed) % 2 != 0:\n        hexed = '0' + hexed\n    return hexed.upper() if upper else hexed"}, "hex_to_int": {"line": 40, "args": [{"func_args": {"hexed": "'544838e2aa4ed75e61583793e7c6a30285'"}, "return_value": "28679718602997181072337614380936720482949"}], "text": "def hex_to_int(hexed):\n    return int(hexed, 16)"}, "flip_hex_byte_order": {"line": 44, "args": [{"func_args": {"string": "'8502a3c6e7933758615ed74eaae2384854'"}, "return_value": "'544838e2aa4ed75e61583793e7c6a30285'"}], "text": "def flip_hex_byte_order(string):\n    return bytes_to_hex(hex_to_bytes(string)[::-1])"}, "parity": {"line": 10, "args": [{"func_args": {"num": "18202689367598691302416718951920096486924260449729227135214517092930543058138"}, "return_value": "0"}, {"func_args": {"num": "18670021425217855567934802672626572767710677588765235587213472291025578284996"}, "return_value": "0"}, {"func_args": {"num": "2"}, "return_value": "0"}, {"func_args": {"num": "5"}, "return_value": "1"}, {"func_args": {"num": "53663045980837260634637807506183816949039230809110041985901491152185762425315"}, "return_value": "1"}], "text": "def parity(num):\n    return num & 1"}, "x_to_y": {"line": 14, "args": [{"func_args": {"x": "98231826851265556411949131072518137307566044384771278023089249290926817658893", "y_parity": "0"}, "return_value": "18202689367598691302416718951920096486924260449729227135214517092930543058138"}, {"func_args": {"x": "84395689074811850896746984745435708062140394031010675730965970759955946040649", "y_parity": "1"}, "return_value": "97122067812098339855636182336061335085559307076875328452244111716883256386667"}, {"func_args": {"x": "27753912938952041417634381842191885283234814940840273460372041880794577257268", "y_parity": "1"}, "return_value": "53663045980837260634637807506183816949039230809110041985901491152185762425315"}], "text": "def x_to_y(x, y_parity):\n\n    y = pow(x ** 3 + 7, TONELLI_SHANKS_CONSTANT, FIELD_SIZE)\n\n    if parity(y) != y_parity:\n        y = FIELD_SIZE - y\n\n    return y"}, "verify_sig": {"line": 24, "args": [{"func_args": {"signature": "b'0E\\x02!\\x00\\xd7y\\xe0\\xa4\\xfc\\xea\\x88\\x18sDit\\x9d\\x01\\xf3\\x03\\xa0\\xceO\\xab\\x80\\xe8PY.*\\xda\\x11w|\\x9fq\\x02 u\\xdaR\\xd8\\x84a\\xad\\xfamN\\xae&\\x91\\xfd\\xd6\\xbd\\xe1\\xb0e\\xfe\\xf4\\xc5S\\xd9\\x02D\\x1d\\x0b\\xba\\xe0=@'", "data": "b'data'", "public_key": "b\"\\x03=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4\""}, "return_value": "True"}, {"func_args": {"signature": "b'0D\\x02 `\\x03D^\\xa7\\xab\\xdc\\xa6_\\xb6&\\xcbN\\xc8S\\xa4\\xcf\\x9a8\\x02\\x99\\xc4\\xe9\\x02\\xb3\\x14k\\xfa\\x15J\\xb9\\x03\\x02 !\\xfd\\xb2\\xa0:\\xb3\\xba\\xb1\\xdc\\x1a]ZWb\\xa5\\x9d\\x8a5\\x1c\\xaeQ.\\xa7`\\xf6V\\x11\\xf1\\xe0iJ7'", "data": "b'data'", "public_key": "b\"\\x03=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4\""}, "return_value": "False"}, {"func_args": {"signature": "b\"0E\\x02!\\x00\\xf3zB\\r\\xb3\\x9c\\x99\\x1c\\x0f\\xc09s\\x01\\xce0\\xd5J\\xf0\\xd8\\xa1\\x85\\xe75\\x1af\\xaex\\x9c\\xc3\\x06u'\\x02 +\\x93j-^\\x0eVZV.w\\x02m\\n\\xb6\\xcb\\x8el\\xb8\\xc3<\\xc7S\\x8e\\to\\x1f2O\\x92\\xfd\\xf4\"", "data": "b'h\\xcd\\x8b\\x8e\\xdb\\x00C\\xea\\xeb\\x80\\x08\\xdc\\xb8\\xb4ox\\xca{[\\x1c\\x1c\\n\\xae\\x9f\\x02g\\x01u\\xbd\\xcaO\\t\\xdd\\xbd\\xd3Ou\\xf1\\x99\\xa0)\\xa5\\x1bMX\\x12V\\xdaR=\\xfb\\xff\\x03$#\\x1f\\x06\\x95(\\\\aB\\x17\\x81\\xf9\\xc3\\xcd\\x08p\\x15=\\x16>\\xe9\\x1b!3\\xc5\\xcb\\x18\\x93\\xb7\\xdc\\xee\\x9dO\\xa1\\x11/\\xc7\\x18@\\xaa\\x1f\\xbf\\xf7\\x0c\\xee\\xf2!\\xbe\\x94\\xec\\x85\\x9d4S\\xce\\x0e!\\\\\\xab\\xa5\\xd0d\\xc7\\x81\\x8f\\xe2\\x89X\\x19w\\x1e\\xb4h\\xe9\\xa7N\\xf62n\\xd8]\\xaa\\xe2o\\xb1\\xfe\\x17\\x8e\\xc5\\x01\\xe3\\xcb\\x18\\xb8T\\x9d\\xd1\\xc7\\xcb\\xd8\\xca\\xfa\\xd0\\xde}\\xe05`\\x8c\\x96 \\x9a\\xc2\\x95[1{\\xb6\\x96W\\xced\\xef\\xc5.\\xc0\\x0f\\xff\\x80\\x92so\\xa6\\xa6\\xe0\\xcf|\\x9e2\\x08Es\\xd0#U\\xcd\\xde'", "public_key": "b'\\x02\\xa7\\xab\\xeda\\xd0\\xa7\\xd0\\xa3#Og\\xbe\\x04\\xac>44\\xd1R\\xb4\\xc7H\\x04\\xf45\\x80!l\\xec\\xf2\\xf1\\x95'"}, "return_value": "True"}], "text": "def verify_sig(signature, data, public_key):\n    \"\"\"Verifies some data was signed by the owner of a public key.\n\n    :param signature: The signature to verify.\n    :type signature: ``bytes``\n    :param data: The data that was supposedly signed.\n    :type data: ``bytes``\n    :param public_key: The public key.\n    :type public_key: ``bytes``\n    :returns: ``True`` if all checks pass, ``False`` otherwise.\n    \"\"\"\n    return _vs(signature, data, public_key)"}, "bytes_to_wif": {"line": 55, "args": [{"func_args": {"private_key": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'", "prefix": "'main'", "compressed": "False"}, "return_value": "'5KHxtARu5yr1JECrYGEA2YpCPdh1i9ciEgQayAF8kcqApkGzT9s'"}, {"func_args": {"private_key": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'", "prefix": "'test'", "compressed": "False"}, "return_value": "'934bTuFSgCv9GHi9Ac84u9NA3J3isK9uadGY3nbe6MaDbnQdcbn'"}, {"func_args": {"private_key": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'", "prefix": "'main'", "compressed": "True"}, "return_value": "'L3jsepcttyuJK3HKezD4qqRKGtwc8d2d1Nw6vsoPDX9cMcUxqqMv'"}, {"func_args": {"private_key": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'", "prefix": "'test'", "compressed": "True"}, "return_value": "'cU6s7jckL3bZUUkb3Q2CD9vNu8F1o58K5R5a3JFtidoccMbhEGKZ'"}, {"func_args": {"private_key": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'", "prefix": "'main'", "compressed": "False"}, "return_value": "'5KHxtARu5yr1JECrYGEA2YpCPdh1i9ciEgQayAF8kcqApkGzT9s'"}, {"func_args": {"private_key": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'", "prefix": "'main'", "compressed": "True"}, "return_value": "'L3jsepcttyuJK3HKezD4qqRKGtwc8d2d1Nw6vsoPDX9cMcUxqqMv'"}], "text": "def bytes_to_wif(private_key, prefix='main', compressed=False):\n\n    if prefix == 'test':\n        prefix = TEST_PRIVATE_KEY\n    else:\n        prefix = MAIN_PRIVATE_KEY\n\n    if compressed:\n        suffix = PRIVATE_KEY_COMPRESSED_PUBKEY\n    else:\n        suffix = b''\n\n    private_key = prefix + private_key + suffix\n\n    return b58encode_check(private_key)"}, "wif_checksum_check": {"line": 95, "args": [{"func_args": {"wif": "'5KHxtARu5yr1JECrYGEA2YpCPdh1i9ciEgQayAF8kcqApkGzT9s'"}, "return_value": "True"}, {"func_args": {"wif": "'934bTuFSgCv9GHi9Ac84u9NA3J3isK9uadGY3nbe6MaDbnQdcbn'"}, "return_value": "True"}, {"func_args": {"wif": "'L3jsepcttyuJK3HKezD4qqRKGtwc8d2d1Nw6vsoPDX9cMcUxqqMv'"}, "return_value": "True"}, {"func_args": {"wif": "'1ELReFsTCUY2mfaDTy32qxYiT49z786eF'"}, "return_value": "False"}, {"func_args": {"wif": "'1ELReFsTCUY2mfaDTy32qxYiT49z786eFg'"}, "return_value": "False"}], "text": "def wif_checksum_check(wif):\n\n    try:\n        decoded = b58decode_check(wif)\n    except ValueError:\n        return False\n\n    if decoded[:1] in (MAIN_PRIVATE_KEY, TEST_PRIVATE_KEY):\n        return True\n\n    return False"}, "coords_to_public_key": {"line": 139, "args": [{"func_args": {"x": "27753912938952041417634381842191885283234814940840273460372041880794577257268", "y": "53663045980837260634637807506183816949039230809110041985901491152185762425315", "compressed": "True"}, "return_value": "b\"\\x03=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4\""}, {"func_args": {"x": "27753912938952041417634381842191885283234814940840273460372041880794577257268", "y": "53663045980837260634637807506183816949039230809110041985901491152185762425315", "compressed": "False"}, "return_value": "b\"\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, {"func_args": {"x": "27753912938952041417634381842191885283234814940840273460372041880794577257268", "y": "53663045980837260634637807506183816949039230809110041985901491152185762425315", "compressed": "True"}, "return_value": "b\"\\x03=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4\""}, {"func_args": {"x": "27753912938952041417634381842191885283234814940840273460372041880794577257268", "y": "53663045980837260634637807506183816949039230809110041985901491152185762425315", "compressed": "True"}, "return_value": "b\"\\x03=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4\""}], "text": "def coords_to_public_key(x, y, compressed=True):\n\n    if compressed:\n        y = PUBLIC_KEY_COMPRESSED_ODD_Y if y & 1 else PUBLIC_KEY_COMPRESSED_EVEN_Y\n        return y + x.to_bytes(32, 'big')\n\n    return PUBLIC_KEY_UNCOMPRESSED + x.to_bytes(32, 'big') + y.to_bytes(32, 'big')"}, "bytes_to_int": {"line": 49, "args": [{"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "6361905059834027265627799002075071394592333965607600083339658870814062357489"}, {"func_args": {"bytestr": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "6361905059834027265627799002075071394592333965607600083339658870814062357489"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "6361905059834027265627799002075071394592333965607600083339658870814062357489"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"bytestr": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}], "text": "def bytes_to_int(bytestr: bytes) -> int:\n    return int.from_bytes(bytestr, 'big')"}, "pad_scalar": {"line": 84, "args": [{"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, {"func_args": {"scalar": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"scalar": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}], "text": "def pad_scalar(scalar: bytes) -> bytes:\n    return (ZERO * (KEY_SIZE - len(scalar))) + scalar"}, "validate_secret": {"line": 88, "args": [{"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, {"func_args": {"secret": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, "return_value": "b'\\x0e\\x10\\xb5\\xed\\xc7\\xbe\\xfdA\\x15\\x8b\\xf3\\xa0/\\x0bzt\\x87\\xa9}\\xdf\\xd6\\xdei\\xbb`6\\xbd\\xf2@[+\\xf1'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"secret": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}], "text": "def validate_secret(secret: bytes) -> bytes:\n    if not 0 < bytes_to_int(secret) < GROUP_ORDER_INT:\n        raise ValueError('Secret scalar must be greater than 0 and less than {}.'.format(GROUP_ORDER_INT))\n    return pad_scalar(secret)"}, "get_valid_secret": {"line": 77, "args": [{"func_args": {}, "return_value": "b'\\x12\\xdf\\x9c\\xc7\\xb6T?\\x894\\x1c\\x86\\x9bar\\x9b\\t^)r\\x87\\x16<N\\x84{\\x9aT\\x8d3\\x0ee\\x96'"}, {"func_args": {}, "return_value": "b'\\xc1\\xc1\\x1e\\x88\\xa6s\\xfb\\xe6\\xf5J\\x87\"\\x83\\xed\\xad.\\xe5\\xb6\\xa1\\x05}e\\xea\\x88_\\xb4\\x13\"S\\x9d\\xe4\\xdb'"}, {"func_args": {}, "return_value": "b'\\xa8R\\xa3\\xdc`T\\xd2\\xa4\\xa2\\xff\\xa2\\x90\\x82\\xeaI}L\\xea/%\"\\x10R\\xc1\\xa0\\xf9\\xbb\\xceb\\xe9\\xed\\xea'"}, {"func_args": {}, "return_value": "b'\\xb2\\xebP\\x15\\xe4\\xc6\\x0f\\xc7?t\\x08\\xd5\\x91\\x1f\\xa8\\xe8\\xc8\\xd6\\x99\\xc8p\\xc1\\xf9B\\x07X1\\xe1~[\\x18a'"}, {"func_args": {}, "return_value": "b'\\xe8\\xd6\\xdc6X{\\x93\\xd0\\\\\\xbe\\xbdiN\\xa1\\xbc\\x85\\x81\\xa0\\x0c\\nA\\xfe\\xc0\\xd4\\x0c\\xd8\\x8c\\xa9\\x92\\xb3\\x13('"}, {"func_args": {}, "return_value": "b'\\xb3Y\\x84\\xd3\\xd1\\x0e\\x82\\x97F\\x92\\x94\\xf9\\xad*<\\xff&4/\\xea\\xf30\\xd8P\\xf7PZ\\x8f\\x96\\xf4\\x87\\x1f'"}], "text": "def get_valid_secret() -> bytes:\n    while True:\n        secret = urandom(KEY_SIZE)\n        if ZERO < secret < GROUP_ORDER:\n            return secret"}, "der_to_pem": {"line": 69, "args": [{"func_args": {"der": "b\"0\\x81\\x84\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'-----BEGIN PRIVATE KEY-----\\nMIGEAgEAMBAGByqGSM49AgEGBSuBBAAKBG0wawIBAQQgwoqfgHOPdw1SeAOlZs9v\\nw+32zqWGxPxKUiOlrXl+GsOhRANCAAQ9XCh1yb0RaHWnGl22TP/LEzlrFj0Dmx2T\\nJ4JIkYBDNHakNSoq3QDrsNXJTFFbcusQ8f2PPwO0L0orJVv8mqnj\\n-----END PRIVATE KEY-----\\n'"}, {"func_args": {"der": "b\"0\\x81\\x84\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'-----BEGIN PRIVATE KEY-----\\nMIGEAgEAMBAGByqGSM49AgEGBSuBBAAKBG0wawIBAQQgwoqfgHOPdw1SeAOlZs9v\\nw+32zqWGxPxKUiOlrXl+GsOhRANCAAQ9XCh1yb0RaHWnGl22TP/LEzlrFj0Dmx2T\\nJ4JIkYBDNHakNSoq3QDrsNXJTFFbcusQ8f2PPwO0L0orJVv8mqnj\\n-----END PRIVATE KEY-----\\n'"}, {"func_args": {"der": "b\"0\\x81\\x84\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'-----BEGIN PRIVATE KEY-----\\nMIGEAgEAMBAGByqGSM49AgEGBSuBBAAKBG0wawIBAQQgwoqfgHOPdw1SeAOlZs9v\\nw+32zqWGxPxKUiOlrXl+GsOhRANCAAQ9XCh1yb0RaHWnGl22TP/LEzlrFj0Dmx2T\\nJ4JIkYBDNHakNSoq3QDrsNXJTFFbcusQ8f2PPwO0L0orJVv8mqnj\\n-----END PRIVATE KEY-----\\n'"}], "text": "def der_to_pem(der: bytes) -> bytes:\n    return b''.join([PEM_HEADER, b'\\n'.join(chunk_data(b64encode(der), 64)), b'\\n', PEM_FOOTER])"}, "pad_hex": {"line": 44, "args": [{"func_args": {"hexed": "'c28a9f80738f770d527803a566cf6fc3edf6cea586c4fc4a5223a5ad797e1ac3'"}, "return_value": "'c28a9f80738f770d527803a566cf6fc3edf6cea586c4fc4a5223a5ad797e1ac3'"}, {"func_args": {"hexed": "'c28a9f80738f770d527803a566cf6fc3edf6cea586c4fc4a5223a5ad797e1ac3'"}, "return_value": "'c28a9f80738f770d527803a566cf6fc3edf6cea586c4fc4a5223a5ad797e1ac3'"}], "text": "def pad_hex(hexed: str) -> str:\n    # Pad odd-length hex strings.\n    return hexed if not len(hexed) & 1 else f'0{hexed}'"}, "int_to_bytes_padded": {"line": 57, "args": [{"func_args": {"num": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"num": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"num": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"num": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"num": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"num": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}], "text": "def int_to_bytes_padded(num: int) -> bytes:\n    return pad_scalar(num.to_bytes((num.bit_length() + 7) // 8 or 1, 'big'))"}, "pem_to_der": {"line": 73, "args": [{"func_args": {"pem": "b'-----BEGIN PRIVATE KEY-----\\nMIGEAgEAMBAGByqGSM49AgEGBSuBBAAKBG0wawIBAQQgwoqfgHOPdw1SeAOlZs9v\\nw+32zqWGxPxKUiOlrXl+GsOhRANCAAQ9XCh1yb0RaHWnGl22TP/LEzlrFj0Dmx2T\\nJ4JIkYBDNHakNSoq3QDrsNXJTFFbcusQ8f2PPwO0L0orJVv8mqnj\\n-----END PRIVATE KEY-----\\n'"}, "return_value": "b\"0\\x81\\x84\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, {"func_args": {"pem": "b'-----BEGIN PRIVATE KEY-----\\nMIGEAgEAMBAGByqGSM49AgEGBSuBBAAKBG0wawIBAQQgwoqfgHOPdw1SeAOlZs9v\\nw+32zqWGxPxKUiOlrXl+GsOhRANCAAQ9XCh1yb0RaHWnGl22TP/LEzlrFj0Dmx2T\\nJ4JIkYBDNHakNSoq3QDrsNXJTFFbcusQ8f2PPwO0L0orJVv8mqnj\\n-----END PRIVATE KEY-----\\n'"}, "return_value": "b\"0\\x81\\x84\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}], "text": "def pem_to_der(pem: bytes) -> bytes:\n    return b64decode(b''.join(pem.strip().splitlines()[1:-1]))"}, "get_op_pushdata_code": {"line": 122, "args": [{"func_args": {"dest": "b'hello'"}, "return_value": "b'\\x05'"}, {"func_args": {"dest": "b'hello'"}, "return_value": "b'\\x05'"}, {"func_args": {"dest": "b'there'"}, "return_value": "b'\\x05'"}, {"func_args": {"dest": "b''"}, "return_value": "b'N\\xa0\\x86\\x01\\x00'"}, {"func_args": {"dest": "b'hello'"}, "return_value": "b'\\x05'"}, {"func_args": {"dest": "b''"}, "return_value": "b'N\\xa0\\x86\\x01\\x00'"}, {"func_args": {"dest": "b'hello'"}, "return_value": "b'\\x05'"}], "text": "def get_op_pushdata_code(dest):\n    length_data = len(dest)\n    if length_data <= 0x4c:  # (https://en.bitcoin.it/wiki/Script)\n        return length_data.to_bytes(1, byteorder='little')\n    elif length_data <= 0xff:\n        return OP_PUSHDATA1 + length_data.to_bytes(1, byteorder='little')  # OP_PUSHDATA1 format\n    elif length_data <= 0xffff:\n        return OP_PUSHDATA2 + length_data.to_bytes(2, byteorder='little')  # OP_PUSHDATA2 format\n    else:\n        return OP_PUSHDATA4 + length_data.to_bytes(4, byteorder='little')"}, "get_op_return_size": {"line": 100, "args": [{"func_args": {"message": "b'hello'", "custom_pushdata": "False"}, "return_value": "17"}, {"func_args": {"message": "b'\\x05hello'", "custom_pushdata": "True"}, "return_value": "17"}, {"func_args": {"message": "b''", "custom_pushdata": "False"}, "return_value": "100020"}, {"func_args": {"message": "b'hello'", "custom_pushdata": "False"}, "return_value": "17"}], "text": "def get_op_return_size(message, custom_pushdata=False):\n    # calculate op_return size for each individual message\n    if custom_pushdata is False:\n        op_return_size = (\n            8  # int64_t amount 0x00000000\n            + len(OP_FALSE + OP_RETURN)  # 2 bytes\n            + len(get_op_pushdata_code(message))  # 1 byte if <75 bytes, 2 bytes if OP_PUSHDATA1...\n            + len(message)  # Max 220 bytes at present\n        )\n\n    if custom_pushdata is True:\n        op_return_size = (\n            8  # int64_t amount 0x00000000\n            + len(OP_FALSE + OP_RETURN)  # 2 bytes\n            + len(message)  # Unsure if Max size will be >220 bytes due to extra OP_PUSHDATA codes...\n        )\n\n    # \"Var_Int\" that preceeds OP_RETURN - 0xdf is max value with current 220 byte limit (so only adds 1 byte)\n    op_return_size += len(int_to_varint(op_return_size))\n    return op_return_size"}, "estimate_tx_fee": {"line": 78, "args": [{"func_args": {"n_in": "2", "n_out": "2", "satoshis": "5", "compressed": "True", "op_return_size": "17"}, "return_value": "1955"}, {"func_args": {"n_in": "2", "n_out": "2", "satoshis": "5", "compressed": "True", "op_return_size": "17"}, "return_value": "1955"}, {"func_args": {"n_in": "2", "n_out": "2", "satoshis": "1", "compressed": "True", "op_return_size": "0"}, "return_value": "374"}, {"func_args": {"n_in": "2", "n_out": "2", "satoshis": "0", "compressed": "True", "op_return_size": "0"}, "return_value": "0"}, {"func_args": {"n_in": "2", "n_out": "2", "satoshis": "0", "compressed": "True", "op_return_size": "0"}, "return_value": "0"}, {"func_args": {"n_in": "2", "n_out": "2", "satoshis": "0", "compressed": "True", "op_return_size": "0"}, "return_value": "0"}, {"func_args": {"n_in": "2", "n_out": "2", "satoshis": "50", "compressed": "True", "op_return_size": "0"}, "return_value": "18700"}, {"func_args": {"n_in": "1", "n_out": "2", "satoshis": "0", "compressed": "True", "op_return_size": "0"}, "return_value": "0"}, {"func_args": {"n_in": "1", "n_out": "2", "satoshis": "0", "compressed": "True", "op_return_size": "0"}, "return_value": "0"}, {"func_args": {"n_in": "2", "n_out": "2", "satoshis": "0", "compressed": "True", "op_return_size": "0"}, "return_value": "0"}, {"func_args": {"n_in": "1", "n_out": "2", "satoshis": "1", "compressed": "True", "op_return_size": "0"}, "return_value": "226"}, {"func_args": {"n_in": "1", "n_out": "2", "satoshis": "1", "compressed": "True", "op_return_size": "0"}, "return_value": "226"}, {"func_args": {"n_in": "1", "n_out": "2", "satoshis": "50", "compressed": "True", "op_return_size": "0"}, "return_value": "11300"}, {"func_args": {"n_in": "2", "n_out": "2", "satoshis": "50", "compressed": "True", "op_return_size": "0"}, "return_value": "18700"}, {"func_args": {"n_in": "1", "n_out": "2", "satoshis": "70", "compressed": "True", "op_return_size": "0"}, "return_value": "15820"}, {"func_args": {"n_in": "1", "n_out": "2", "satoshis": "70", "compressed": "False", "op_return_size": "0"}, "return_value": "18060"}, {"func_args": {"n_in": "5", "n_out": "5", "satoshis": "0", "compressed": "True", "op_return_size": "0"}, "return_value": "0"}, {"func_args": {"n_in": "1", "n_out": "3", "satoshis": "0", "compressed": "True", "op_return_size": "100037"}, "return_value": "0"}], "text": "def estimate_tx_fee(n_in, n_out, satoshis, compressed, op_return_size=0):\n\n    if not satoshis:\n        return 0\n\n    estimated_size = (\n        4 +  # version\n        n_in * (148 if compressed else 180)\n        + len(int_to_varint(n_in))\n        + n_out * 34  # excluding op_return outputs, dealt with separately\n        + len(int_to_varint(n_out))\n        + op_return_size  # grand total size of op_return outputs(s) and related field(s)\n        + 4  # time lock\n    )\n\n    estimated_fee = math.ceil(estimated_size * satoshis)\n\n    logging.debug('Estimated fee: {} satoshis for {} bytes'.format(estimated_fee, estimated_size))\n\n    return estimated_fee"}, "calc_txid": {"line": 74, "args": [{"func_args": {"tx_hex": "'01000000018878399d83ec25c627cfbf753ff9ca3602373eac437ab2676154a3c2da23adf3010000008a47304402204d6f28d77fa31cfc6c13bb1bda2628f2237e2630e892dc62bb319eb75dc7f9310220741f4df7d9460daa844389eb23fb318dd674967144eb89477608b10e03c175034141043d5c2875c9bd116875a71a5db64cffcb13396b163d039b1d932782489180433476a4352a2add00ebb0d5c94c515b72eb10f1fd8f3f03b42f4a2b255bfc9aa9e3ffffffff0250c30000000000001976a914e7c1345fc8f87c68170b3aa798a956c2fe6a9eff88ac0888fc04000000001976a91492461bde6283b461ece7ddf4dbf1e0a48bd113d888ac00000000'"}, "return_value": "'64637ffb0d36003eccbb0317dee000ac8a2744cbea3b8a4c3a477c132bb8ca69'"}], "text": "def calc_txid(tx_hex):\n    return bytes_to_hex(double_sha256(hex_to_bytes(tx_hex))[::-1])"}, "satoshi_to_satoshi": {"line": 103, "args": [{"func_args": {}, "return_value": "1"}, {"func_args": {}, "return_value": "1"}], "text": "def satoshi_to_satoshi():\n    return SATOSHI"}, "wrapper": {"line": 571, "args": [{"func_args": {"amount": "1000", "currency": "'satoshi'"}, "return_value": "1000"}, {"func_args": {"amount": "1000", "currency": "'satoshi'"}, "return_value": "1000"}, {"func_args": {"amount": "2000", "currency": "'satoshi'"}, "return_value": "2000"}, {"func_args": {"amount": "2000", "currency": "'satoshi'"}, "return_value": "2000"}, {"func_args": {"amount": "500", "currency": "'satoshi'"}, "return_value": "500"}, {"func_args": {"amount": "1500", "currency": "'satoshi'"}, "return_value": "1500"}, {"func_args": {"amount": "2500", "currency": "'satoshi'"}, "return_value": "2500"}, {"func_args": {"amount": "2000", "currency": "'satoshi'"}, "return_value": "2000"}, {"func_args": {"amount": "2000", "currency": "'satoshi'"}, "return_value": "2000"}, {"func_args": {"amount": "1000", "currency": "'satoshi'"}, "return_value": "1000"}, {"func_args": {"amount": "1000", "currency": "'satoshi'"}, "return_value": "1000"}, {"func_args": {"amount": "2500", "currency": "'satoshi'"}, "return_value": "2500"}, {"func_args": {"amount": "50000", "currency": "'satoshi'"}, "return_value": "50000"}, {"func_args": {"amount": "83658760", "currency": "'satoshi'"}, "return_value": "83658760"}, {"func_args": {"amount": "50000", "currency": "'satoshi'"}, "return_value": "50000"}, {"func_args": {"amount": "83658760", "currency": "'satoshi'"}, "return_value": "83658760"}, {"func_args": {"amount": "1", "currency": "'satoshi'"}, "return_value": "1"}, {"func_args": {"amount": "1", "currency": "'ubsv'"}, "return_value": "100"}]}, "currency_to_satoshi_cached": {"line": 591, "args": [{"func_args": {"amount": "1000", "currency": "'satoshi'"}, "return_value": "1000"}, {"func_args": {"amount": "1000", "currency": "'satoshi'"}, "return_value": "1000"}, {"func_args": {"amount": "2000", "currency": "'satoshi'"}, "return_value": "2000"}, {"func_args": {"amount": "2000", "currency": "'satoshi'"}, "return_value": "2000"}, {"func_args": {"amount": "500", "currency": "'satoshi'"}, "return_value": "500"}, {"func_args": {"amount": "1500", "currency": "'satoshi'"}, "return_value": "1500"}, {"func_args": {"amount": "2500", "currency": "'satoshi'"}, "return_value": "2500"}, {"func_args": {"amount": "2000", "currency": "'satoshi'"}, "return_value": "2000"}, {"func_args": {"amount": "2000", "currency": "'satoshi'"}, "return_value": "2000"}, {"func_args": {"amount": "1000", "currency": "'satoshi'"}, "return_value": "1000"}, {"func_args": {"amount": "1000", "currency": "'satoshi'"}, "return_value": "1000"}, {"func_args": {"amount": "2500", "currency": "'satoshi'"}, "return_value": "2500"}, {"func_args": {"amount": "50000", "currency": "'satoshi'"}, "return_value": "50000"}, {"func_args": {"amount": "83658760", "currency": "'satoshi'"}, "return_value": "83658760"}, {"func_args": {"amount": "50000", "currency": "'satoshi'"}, "return_value": "50000"}, {"func_args": {"amount": "83658760", "currency": "'satoshi'"}, "return_value": "83658760"}, {"func_args": {"amount": "1", "currency": "'satoshi'"}, "return_value": "1"}, {"func_args": {"amount": "1", "currency": "'ubsv'"}, "return_value": "100"}], "text": "def currency_to_satoshi_cached(amount, currency):\n    \"\"\"Converts a given amount of currency to the equivalent number of\n    satoshi. The amount can be either an int, float, or string as long as\n    it is a valid input to :py:class:`decimal.Decimal`. Results are cached\n    using a decorator for 60 seconds by default. See :ref:`cache times`.\n\n    :param amount: The quantity of currency.\n    :param currency: One of the :ref:`supported currencies`.\n    :type currency: ``str``\n    :rtype: ``int``\n    \"\"\"\n    return currency_to_satoshi_local_cached(amount, currency)"}, "satoshi_to_currency_cached": {"line": 625, "args": [{"func_args": {"num": "0", "currency": "'satoshi'"}, "return_value": "'0'"}, {"func_args": {"num": "1", "currency": "'ubsv'"}, "return_value": "'0.01'"}], "text": "def satoshi_to_currency_cached(num, currency):\n    \"\"\"Converts a given number of satoshi to another currency as a formatted\n    string rounded down to the proper number of decimal places. Results are\n    cached using a decorator for 60 seconds by default. See :ref:`cache times`.\n\n    :param num: The number of satoshi.\n    :type num: ``int``\n    :param currency: One of the :ref:`supported currencies`.\n    :type currency: ``str``\n    :rtype: ``str``\n    \"\"\"\n    return '{:f}'.format(\n        Decimal(\n            num / Decimal(currency_to_satoshi_cached(1, currency))\n        ).quantize(\n            Decimal('0.' + '0' * CURRENCY_PRECISION[currency]),\n            rounding=ROUND_DOWN\n        ).normalize()\n    )"}, "ubsv_to_satoshi": {"line": 107, "args": [{"func_args": {}, "return_value": "100"}, {"func_args": {}, "return_value": "100"}], "text": "def ubsv_to_satoshi():\n    return uBSV"}, "mbsv_to_satoshi": {"line": 111, "args": [{"func_args": {}, "return_value": "100000"}], "text": "def mbsv_to_satoshi():\n    return mBSV"}, "bsv_to_satoshi": {"line": 115, "args": [{"func_args": {}, "return_value": "100000000"}, {"func_args": {}, "return_value": "100000000"}], "text": "def bsv_to_satoshi():\n    return BSV"}, "satoshi_to_currency": {"line": 605, "args": [{"func_args": {"num": "1", "currency": "'bsv'"}, "return_value": "'0.00000001'"}], "text": "def satoshi_to_currency(num, currency):\n    \"\"\"Converts a given number of satoshi to another currency as a formatted\n    string rounded down to the proper number of decimal places.\n\n    :param num: The number of satoshi.\n    :type num: ``int``\n    :param currency: One of the :ref:`supported currencies`.\n    :type currency: ``str``\n    :rtype: ``str``\n    \"\"\"\n    return '{:f}'.format(\n        Decimal(\n            num / Decimal(EXCHANGE_RATES[currency]())\n        ).quantize(\n            Decimal('0.' + '0' * CURRENCY_PRECISION[currency]),\n            rounding=ROUND_DOWN\n        ).normalize()\n    )"}, "int_to_bytes": {"line": 213, "args": [{"func_args": {"value": "1", "signed": "True", "width": "None"}, "return_value": "b'\\x01'"}, {"func_args": {"value": "87993618360805341115891506172036624893404292644470266399436498750715784469187", "signed": "False", "width": "None"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"value": "0", "signed": "True", "width": "None"}, "return_value": "b'\\x00'"}, {"func_args": {"value": "132", "signed": "False", "width": "None"}, "return_value": "b'\\x84'"}, {"func_args": {"value": "1", "signed": "True", "width": "None"}, "return_value": "b'\\x01'"}, {"func_args": {"value": "87993618360805341115891506172036624893404292644470266399436498750715784469187", "signed": "False", "width": "None"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"value": "0", "signed": "True", "width": "None"}, "return_value": "b'\\x00'"}, {"func_args": {"value": "132", "signed": "False", "width": "None"}, "return_value": "b'\\x84'"}, {"func_args": {"value": "1", "signed": "True", "width": "None"}, "return_value": "b'\\x01'"}, {"func_args": {"value": "87993618360805341115891506172036624893404292644470266399436498750715784469187", "signed": "False", "width": "None"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"value": "0", "signed": "True", "width": "None"}, "return_value": "b'\\x00'"}, {"func_args": {"value": "132", "signed": "False", "width": "None"}, "return_value": "b'\\x84'"}, {"func_args": {"value": "1", "signed": "True", "width": "None"}, "return_value": "b'\\x01'"}, {"func_args": {"value": "87993618360805341115891506172036624893404292644470266399436498750715784469187", "signed": "False", "width": "None"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"value": "0", "signed": "True", "width": "None"}, "return_value": "b'\\x00'"}, {"func_args": {"value": "132", "signed": "False", "width": "None"}, "return_value": "b'\\x84'"}, {"func_args": {"value": "1", "signed": "True", "width": "None"}, "return_value": "b'\\x01'"}, {"func_args": {"value": "87993618360805341115891506172036624893404292644470266399436498750715784469187", "signed": "False", "width": "None"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"value": "0", "signed": "True", "width": "None"}, "return_value": "b'\\x00'"}, {"func_args": {"value": "132", "signed": "False", "width": "None"}, "return_value": "b'\\x84'"}, {"func_args": {"value": "1", "signed": "True", "width": "None"}, "return_value": "b'\\x01'"}, {"func_args": {"value": "87993618360805341115891506172036624893404292644470266399436498750715784469187", "signed": "False", "width": "None"}, "return_value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'"}, {"func_args": {"value": "0", "signed": "True", "width": "None"}, "return_value": "b'\\x00'"}, {"func_args": {"value": "132", "signed": "False", "width": "None"}, "return_value": "b'\\x84'"}], "text": "def int_to_bytes(value, signed=False, width=None):\n        \"\"\"\n        Converts an integer to a byte string\n\n        :param value:\n            The integer to convert\n\n        :param signed:\n            If the byte string should be encoded using two's complement\n\n        :param width:\n            If None, the minimal possible size (but at least 1),\n            otherwise an integer of the byte width for the return value\n\n        :return:\n            A byte string\n        \"\"\"\n\n        if width is None:\n            if signed:\n                if value < 0:\n                    bits_required = abs(value + 1).bit_length()\n                else:\n                    bits_required = value.bit_length()\n                if bits_required % 8 == 0:\n                    bits_required += 1\n            else:\n                bits_required = value.bit_length()\n            width = math.ceil(bits_required / 8) or 1\n        return value.to_bytes(width, byteorder='big', signed=signed)"}, "int_from_bytes": {"line": 244, "args": [{"func_args": {"value": "b'\\x84'", "signed": "False"}, "return_value": "132"}, {"func_args": {"value": "b'\\x00'", "signed": "True"}, "return_value": "0"}, {"func_args": {"value": "b'\\x01'", "signed": "True"}, "return_value": "1"}, {"func_args": {"value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'", "signed": "False"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"value": "b'\\x84'", "signed": "False"}, "return_value": "132"}, {"func_args": {"value": "b'\\x00'", "signed": "True"}, "return_value": "0"}, {"func_args": {"value": "b'\\x01'", "signed": "True"}, "return_value": "1"}, {"func_args": {"value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'", "signed": "False"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"value": "b'\\x84'", "signed": "False"}, "return_value": "132"}, {"func_args": {"value": "b'\\x00'", "signed": "True"}, "return_value": "0"}, {"func_args": {"value": "b'\\x01'", "signed": "True"}, "return_value": "1"}, {"func_args": {"value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'", "signed": "False"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}, {"func_args": {"value": "b'\\x84'", "signed": "False"}, "return_value": "132"}, {"func_args": {"value": "b'\\x00'", "signed": "True"}, "return_value": "0"}, {"func_args": {"value": "b'\\x01'", "signed": "True"}, "return_value": "1"}, {"func_args": {"value": "b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3'", "signed": "False"}, "return_value": "87993618360805341115891506172036624893404292644470266399436498750715784469187"}], "text": "def int_from_bytes(value, signed=False):\n        \"\"\"\n        Converts a byte string to an integer\n\n        :param value:\n            The byte string to convert\n\n        :param signed:\n            If the byte string should be interpreted using two's complement\n\n        :return:\n            An integer\n        \"\"\"\n\n        return int.from_bytes(value, 'big', signed=signed)"}, "chr_cls": {"line": 24, "args": [{"func_args": {"num": "43"}, "return_value": "b'+'"}, {"func_args": {"num": "4"}, "return_value": "b'\\x04'"}, {"func_args": {"num": "129"}, "return_value": "b'\\x81'"}, {"func_args": {"num": "0"}, "return_value": "b'\\x00'"}, {"func_args": {"num": "10"}, "return_value": "b'\\n'"}, {"func_args": {"num": "42"}, "return_value": "b'*'"}, {"func_args": {"num": "72"}, "return_value": "b'H'"}, {"func_args": {"num": "134"}, "return_value": "b'\\x86'"}, {"func_args": {"num": "61"}, "return_value": "b'='"}, {"func_args": {"num": "206"}, "return_value": "b'\\xce'"}, {"func_args": {"num": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"num": "1"}, "return_value": "b'\\x01'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "107"}, "return_value": "b'k'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "129"}, "return_value": "b'\\x81'"}, {"func_args": {"num": "43"}, "return_value": "b'+'"}, {"func_args": {"num": "4"}, "return_value": "b'\\x04'"}, {"func_args": {"num": "129"}, "return_value": "b'\\x81'"}, {"func_args": {"num": "0"}, "return_value": "b'\\x00'"}, {"func_args": {"num": "10"}, "return_value": "b'\\n'"}, {"func_args": {"num": "42"}, "return_value": "b'*'"}, {"func_args": {"num": "72"}, "return_value": "b'H'"}, {"func_args": {"num": "134"}, "return_value": "b'\\x86'"}, {"func_args": {"num": "61"}, "return_value": "b'='"}, {"func_args": {"num": "206"}, "return_value": "b'\\xce'"}, {"func_args": {"num": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"num": "1"}, "return_value": "b'\\x01'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "107"}, "return_value": "b'k'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "129"}, "return_value": "b'\\x81'"}, {"func_args": {"num": "43"}, "return_value": "b'+'"}, {"func_args": {"num": "4"}, "return_value": "b'\\x04'"}, {"func_args": {"num": "129"}, "return_value": "b'\\x81'"}, {"func_args": {"num": "0"}, "return_value": "b'\\x00'"}, {"func_args": {"num": "10"}, "return_value": "b'\\n'"}, {"func_args": {"num": "42"}, "return_value": "b'*'"}, {"func_args": {"num": "72"}, "return_value": "b'H'"}, {"func_args": {"num": "134"}, "return_value": "b'\\x86'"}, {"func_args": {"num": "61"}, "return_value": "b'='"}, {"func_args": {"num": "206"}, "return_value": "b'\\xce'"}, {"func_args": {"num": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"num": "1"}, "return_value": "b'\\x01'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "107"}, "return_value": "b'k'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "129"}, "return_value": "b'\\x81'"}, {"func_args": {"num": "43"}, "return_value": "b'+'"}, {"func_args": {"num": "4"}, "return_value": "b'\\x04'"}, {"func_args": {"num": "129"}, "return_value": "b'\\x81'"}, {"func_args": {"num": "0"}, "return_value": "b'\\x00'"}, {"func_args": {"num": "10"}, "return_value": "b'\\n'"}, {"func_args": {"num": "42"}, "return_value": "b'*'"}, {"func_args": {"num": "72"}, "return_value": "b'H'"}, {"func_args": {"num": "134"}, "return_value": "b'\\x86'"}, {"func_args": {"num": "61"}, "return_value": "b'='"}, {"func_args": {"num": "206"}, "return_value": "b'\\xce'"}, {"func_args": {"num": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"num": "1"}, "return_value": "b'\\x01'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "107"}, "return_value": "b'k'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "129"}, "return_value": "b'\\x81'"}, {"func_args": {"num": "43"}, "return_value": "b'+'"}, {"func_args": {"num": "4"}, "return_value": "b'\\x04'"}, {"func_args": {"num": "129"}, "return_value": "b'\\x81'"}, {"func_args": {"num": "0"}, "return_value": "b'\\x00'"}, {"func_args": {"num": "10"}, "return_value": "b'\\n'"}, {"func_args": {"num": "42"}, "return_value": "b'*'"}, {"func_args": {"num": "72"}, "return_value": "b'H'"}, {"func_args": {"num": "134"}, "return_value": "b'\\x86'"}, {"func_args": {"num": "61"}, "return_value": "b'='"}, {"func_args": {"num": "206"}, "return_value": "b'\\xce'"}, {"func_args": {"num": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"num": "1"}, "return_value": "b'\\x01'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "107"}, "return_value": "b'k'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "129"}, "return_value": "b'\\x81'"}, {"func_args": {"num": "43"}, "return_value": "b'+'"}, {"func_args": {"num": "4"}, "return_value": "b'\\x04'"}, {"func_args": {"num": "129"}, "return_value": "b'\\x81'"}, {"func_args": {"num": "0"}, "return_value": "b'\\x00'"}, {"func_args": {"num": "10"}, "return_value": "b'\\n'"}, {"func_args": {"num": "42"}, "return_value": "b'*'"}, {"func_args": {"num": "72"}, "return_value": "b'H'"}, {"func_args": {"num": "134"}, "return_value": "b'\\x86'"}, {"func_args": {"num": "61"}, "return_value": "b'='"}, {"func_args": {"num": "206"}, "return_value": "b'\\xce'"}, {"func_args": {"num": "2"}, "return_value": "b'\\x02'"}, {"func_args": {"num": "1"}, "return_value": "b'\\x01'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "107"}, "return_value": "b'k'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "16"}, "return_value": "b'\\x10'"}, {"func_args": {"num": "48"}, "return_value": "b'0'"}, {"func_args": {"num": "129"}, "return_value": "b'\\x81'"}], "text": "def chr_cls(num):\n        return bytes([num])"}, "_dump_header": {"line": 238, "args": [{"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'0k'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'"}, "return_value": "b'0\\x10'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'"}, "return_value": "b'0\\x10'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'0\\x81\\x84'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'0k'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'"}, "return_value": "b'0\\x10'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'"}, "return_value": "b'0\\x10'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'0\\x81\\x84'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'0k'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'"}, "return_value": "b'0\\x10'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'"}, "return_value": "b'0\\x10'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'0\\x81\\x84'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'0k'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'"}, "return_value": "b'0\\x10'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'"}, "return_value": "b'0\\x10'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'0\\x81\\x84'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'0k'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'"}, "return_value": "b'0\\x10'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'"}, "return_value": "b'0\\x10'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'0\\x81\\x84'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'0k'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'"}, "return_value": "b'0\\x10'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'"}, "return_value": "b'0\\x10'"}, {"func_args": {"class_": "0", "method": "1", "tag": "16", "contents": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\""}, "return_value": "b'0\\x81\\x84'"}], "text": "def _dump_header(class_, method, tag, contents):\n    \"\"\"\n    Constructs the header bytes for an ASN.1 object\n\n    :param class_:\n        An integer ASN.1 class value: 0 (universal), 1 (application),\n        2 (context), 3 (private)\n\n    :param method:\n        An integer ASN.1 method value: 0 (primitive), 1 (constructed)\n\n    :param tag:\n        An integer ASN.1 tag value\n\n    :param contents:\n        A byte string of the encoded byte contents\n\n    :return:\n        A byte string of the ASN.1 DER header\n    \"\"\"\n\n    header = b''\n\n    id_num = 0\n    id_num |= class_ << 6\n    id_num |= method << 5\n\n    if tag >= 31:\n        cont_bit = 0\n        while tag > 0:\n            header = chr_cls(cont_bit | (tag & 0x7f)) + header\n            if not cont_bit:\n                cont_bit = 0x80\n            tag = tag >> 7\n        header = chr_cls(id_num | 31) + header\n    else:\n        header += chr_cls(id_num | tag)\n\n    length = len(contents)\n    if length <= 127:\n        header += chr_cls(length)\n    else:\n        length_bytes = int_to_bytes(length)\n        header += chr_cls(0x80 | len(length_bytes))\n        header += length_bytes\n\n    return header"}, "_parse": {"line": 138, "args": [{"func_args": {"encoded_data": "b\"0\\x81\\x84\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "135", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 1, 16, b'0\\x81\\x84', b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 135)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "132", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 2, b'\\x02\\x01', b'\\x00', b''), 3)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "132", "pointer": "3", "lengths_only": "False"}, "return_value": "((0, 1, 16, b'0\\x10', b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n', b''), 21)"}, {"func_args": {"encoded_data": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'", "data_len": "16", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 6, b'\\x06\\x07', b'*\\x86H\\xce=\\x02\\x01', b''), 9)"}, {"func_args": {"encoded_data": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'", "data_len": "16", "pointer": "9", "lengths_only": "False"}, "return_value": "((0, 0, 6, b'\\x06\\x05', b'+\\x81\\x04\\x00\\n', b''), 16)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "132", "pointer": "21", "lengths_only": "False"}, "return_value": "((0, 0, 4, b'\\x04m', b\"0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 132)"}, {"func_args": {"encoded_data": "b\"0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "109", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 1, 16, b'0k', b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 109)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "107", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 2, b'\\x02\\x01', b'\\x01', b''), 3)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "107", "pointer": "3", "lengths_only": "False"}, "return_value": "((0, 0, 4, b'\\x04 ', b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3', b''), 37)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "107", "pointer": "37", "lengths_only": "False"}, "return_value": "((2, 1, 1, b'\\xa1D', b\"\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 107)"}, {"func_args": {"encoded_data": "b\"\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "68", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 3, b'\\x03B', b\"\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 68)"}, {"func_args": {"encoded_data": "b\"0\\x81\\x84\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "135", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 1, 16, b'0\\x81\\x84', b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 135)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "132", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 2, b'\\x02\\x01', b'\\x00', b''), 3)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "132", "pointer": "3", "lengths_only": "False"}, "return_value": "((0, 1, 16, b'0\\x10', b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n', b''), 21)"}, {"func_args": {"encoded_data": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'", "data_len": "16", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 6, b'\\x06\\x07', b'*\\x86H\\xce=\\x02\\x01', b''), 9)"}, {"func_args": {"encoded_data": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'", "data_len": "16", "pointer": "9", "lengths_only": "False"}, "return_value": "((0, 0, 6, b'\\x06\\x05', b'+\\x81\\x04\\x00\\n', b''), 16)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "132", "pointer": "21", "lengths_only": "False"}, "return_value": "((0, 0, 4, b'\\x04m', b\"0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 132)"}, {"func_args": {"encoded_data": "b\"0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "109", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 1, 16, b'0k', b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 109)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "107", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 2, b'\\x02\\x01', b'\\x01', b''), 3)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "107", "pointer": "3", "lengths_only": "False"}, "return_value": "((0, 0, 4, b'\\x04 ', b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3', b''), 37)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "107", "pointer": "37", "lengths_only": "False"}, "return_value": "((2, 1, 1, b'\\xa1D', b\"\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 107)"}, {"func_args": {"encoded_data": "b\"\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "68", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 3, b'\\x03B', b\"\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 68)"}, {"func_args": {"encoded_data": "b\"0\\x81\\x84\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "135", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 1, 16, b'0\\x81\\x84', b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 135)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "132", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 2, b'\\x02\\x01', b'\\x00', b''), 3)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "132", "pointer": "3", "lengths_only": "False"}, "return_value": "((0, 1, 16, b'0\\x10', b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n', b''), 21)"}, {"func_args": {"encoded_data": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'", "data_len": "16", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 6, b'\\x06\\x07', b'*\\x86H\\xce=\\x02\\x01', b''), 9)"}, {"func_args": {"encoded_data": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'", "data_len": "16", "pointer": "9", "lengths_only": "False"}, "return_value": "((0, 0, 6, b'\\x06\\x05', b'+\\x81\\x04\\x00\\n', b''), 16)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "132", "pointer": "21", "lengths_only": "False"}, "return_value": "((0, 0, 4, b'\\x04m', b\"0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 132)"}, {"func_args": {"encoded_data": "b\"0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "109", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 1, 16, b'0k', b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 109)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "107", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 2, b'\\x02\\x01', b'\\x01', b''), 3)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "107", "pointer": "3", "lengths_only": "False"}, "return_value": "((0, 0, 4, b'\\x04 ', b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3', b''), 37)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "107", "pointer": "37", "lengths_only": "False"}, "return_value": "((2, 1, 1, b'\\xa1D', b\"\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 107)"}, {"func_args": {"encoded_data": "b\"\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "68", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 3, b'\\x03B', b\"\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 68)"}, {"func_args": {"encoded_data": "b\"0\\x81\\x84\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "135", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 1, 16, b'0\\x81\\x84', b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 135)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "132", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 2, b'\\x02\\x01', b'\\x00', b''), 3)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "132", "pointer": "3", "lengths_only": "False"}, "return_value": "((0, 1, 16, b'0\\x10', b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n', b''), 21)"}, {"func_args": {"encoded_data": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'", "data_len": "16", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 6, b'\\x06\\x07', b'*\\x86H\\xce=\\x02\\x01', b''), 9)"}, {"func_args": {"encoded_data": "b'\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n'", "data_len": "16", "pointer": "9", "lengths_only": "False"}, "return_value": "((0, 0, 6, b'\\x06\\x05', b'+\\x81\\x04\\x00\\n', b''), 16)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x000\\x10\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x05+\\x81\\x04\\x00\\n\\x04m0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "132", "pointer": "21", "lengths_only": "False"}, "return_value": "((0, 0, 4, b'\\x04m', b\"0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 132)"}, {"func_args": {"encoded_data": "b\"0k\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "109", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 1, 16, b'0k', b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 109)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "107", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 2, b'\\x02\\x01', b'\\x01', b''), 3)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "107", "pointer": "3", "lengths_only": "False"}, "return_value": "((0, 0, 4, b'\\x04 ', b'\\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3', b''), 37)"}, {"func_args": {"encoded_data": "b\"\\x02\\x01\\x01\\x04 \\xc2\\x8a\\x9f\\x80s\\x8fw\\rRx\\x03\\xa5f\\xcfo\\xc3\\xed\\xf6\\xce\\xa5\\x86\\xc4\\xfcJR#\\xa5\\xady~\\x1a\\xc3\\xa1D\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "107", "pointer": "37", "lengths_only": "False"}, "return_value": "((2, 1, 1, b'\\xa1D', b\"\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 107)"}, {"func_args": {"encoded_data": "b\"\\x03B\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\"", "data_len": "68", "pointer": "0", "lengths_only": "False"}, "return_value": "((0, 0, 3, b'\\x03B', b\"\\x00\\x04=\\\\(u\\xc9\\xbd\\x11hu\\xa7\\x1a]\\xb6L\\xff\\xcb\\x139k\\x16=\\x03\\x9b\\x1d\\x93'\\x82H\\x91\\x80C4v\\xa45**\\xdd\\x00\\xeb\\xb0\\xd5\\xc9LQ[r\\xeb\\x10\\xf1\\xfd\\x8f?\\x03\\xb4/J+%[\\xfc\\x9a\\xa9\\xe3\", b''), 68)"}], "text": "def _parse(encoded_data, data_len, pointer=0, lengths_only=False):\n    \"\"\"\n    Parses a byte string into component parts\n\n    :param encoded_data:\n        A byte string that contains BER-encoded data\n\n    :param data_len:\n        The integer length of the encoded data\n\n    :param pointer:\n        The index in the byte string to parse from\n\n    :param lengths_only:\n        A boolean to cause the call to return a 2-element tuple of the integer\n        number of bytes in the header and the integer number of bytes in the\n        contents. Internal use only.\n\n    :return:\n        A 2-element tuple:\n         - 0: A tuple of (class_, method, tag, header, content, trailer)\n         - 1: An integer indicating how many bytes were consumed\n    \"\"\"\n\n    if data_len < pointer + 2:\n        raise ValueError(_INSUFFICIENT_DATA_MESSAGE % (2, data_len - pointer))\n\n    start = pointer\n    first_octet = ord(encoded_data[pointer]) if _PY2 else encoded_data[pointer]\n    pointer += 1\n\n    tag = first_octet & 31\n    # Base 128 length using 8th bit as continuation indicator\n    if tag == 31:\n        tag = 0\n        while True:\n            num = ord(encoded_data[pointer]) if _PY2 else encoded_data[pointer]\n            pointer += 1\n            tag *= 128\n            tag += num & 127\n            if num >> 7 == 0:\n                break\n\n    length_octet = ord(encoded_data[pointer]) if _PY2 else encoded_data[pointer]\n    pointer += 1\n\n    if length_octet >> 7 == 0:\n        if lengths_only:\n            return (pointer, pointer + (length_octet & 127))\n        contents_end = pointer + (length_octet & 127)\n\n    else:\n        length_octets = length_octet & 127\n        if length_octets:\n            pointer += length_octets\n            contents_end = pointer + int_from_bytes(encoded_data[pointer - length_octets:pointer], signed=False)\n            if lengths_only:\n                return (pointer, contents_end)\n\n        else:\n            # To properly parse indefinite length values, we need to scan forward\n            # parsing headers until we find a value with a length of zero. If we\n            # just scanned looking for \\x00\\x00, nested indefinite length values\n            # would not work.\n            contents_end = pointer\n            while contents_end < data_len:\n                sub_header_end, contents_end = _parse(encoded_data, data_len, contents_end, lengths_only=True)\n                if contents_end == sub_header_end and encoded_data[contents_end - 2:contents_end] == b'\\x00\\x00':\n                    break\n            if lengths_only:\n                return (pointer, contents_end)\n            if contents_end > data_len:\n                raise ValueError(_INSUFFICIENT_DATA_MESSAGE % (contents_end, data_len))\n            return (\n                (\n                    first_octet >> 6,\n                    (first_octet >> 5) & 1,\n                    tag,\n                    encoded_data[start:pointer],\n                    encoded_data[pointer:contents_end - 2],\n                    b'\\x00\\x00'\n                ),\n                contents_end\n            )\n\n    if contents_end > data_len:\n        raise ValueError(_INSUFFICIENT_DATA_MESSAGE % (contents_end, data_len))\n    return (\n        (\n            first_octet >> 6,\n            (first_octet >> 5) & 1,\n            tag,\n            encoded_data[start:pointer],\n            encoded_data[pointer:contents_end],\n            b''\n        ),\n        contents_end\n    )"}, "default_user_agent": {"line": 863, "args": [{"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}, {"func_args": {"name": "'python-requests'"}, "return_value": "'python-requests/2.27.1'"}], "text": "def default_user_agent(name=\"python-requests\"):\n    \"\"\"\n    Return a string representing the default user agent.\n\n    :rtype: str\n    \"\"\"\n    return '%s/%s' % (name, __version__)"}, "default_headers": {"line": 872, "args": [{"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}, {"func_args": {}, "return_value": "{'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}"}], "text": "def default_headers():\n    \"\"\"\n    :rtype: requests.structures.CaseInsensitiveDict\n    \"\"\"\n    return CaseInsensitiveDict({\n        'User-Agent': default_user_agent(),\n        'Accept-Encoding': DEFAULT_ACCEPT_ENCODING,\n        'Accept': '*/*',\n        'Connection': 'keep-alive',\n    })"}, "unquote_unreserved": {"line": 608, "args": [{"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"uri": "'https://bsvbook.guarda.co/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ?details=basic'"}, "return_value": "'https://bsvbook.guarda.co/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ?details=basic'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"uri": "'https://bsvbook.guarda.co/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf?details=txids?page=1'"}, "return_value": "'https://bsvbook.guarda.co/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf?details=txids?page=1'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"uri": "'https://bsvbook.guarda.co/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'https://bsvbook.guarda.co/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/test/chain/info'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/test/chain/info'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}], "text": "def unquote_unreserved(uri):\n    \"\"\"Un-escape any percent-escape sequences in a URI that are unreserved\n    characters. This leaves all reserved, illegal and non-ASCII bytes encoded.\n\n    :rtype: str\n    \"\"\"\n    parts = uri.split('%')\n    for i in range(1, len(parts)):\n        h = parts[i][0:2]\n        if len(h) == 2 and h.isalnum():\n            try:\n                c = chr(int(h, 16))\n            except ValueError:\n                raise InvalidURL(\"Invalid percent-escape sequence: '%s'\" % h)\n\n            if c in UNRESERVED_SET:\n                parts[i] = c + parts[i][2:]\n            else:\n                parts[i] = '%' + parts[i]\n        else:\n            parts[i] = '%' + parts[i]\n    return ''.join(parts)"}, "requote_uri": {"line": 632, "args": [{"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"uri": "'https://bsvbook.guarda.co/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ?details=basic'"}, "return_value": "'https://bsvbook.guarda.co/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ?details=basic'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"uri": "'https://bsvbook.guarda.co/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf?details=txids?page=1'"}, "return_value": "'https://bsvbook.guarda.co/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf?details=txids?page=1'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"uri": "'https://bsvbook.guarda.co/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'https://bsvbook.guarda.co/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/test/chain/info'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/test/chain/info'"}, {"func_args": {"uri": "'https://api.whatsonchain.com/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, "return_value": "'https://api.whatsonchain.com/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}], "text": "def requote_uri(uri):\n    \"\"\"Re-quote the given URI.\n\n    This function passes the given URI through an unquote/quote cycle to\n    ensure that it is fully and consistently quoted.\n\n    :rtype: str\n    \"\"\"\n    safe_with_percent = \"!#$%&'()*+,/:;=?@[]~\"\n    safe_without_percent = \"!#$&'()*+,/:;=?@[]~\"\n    try:\n        # Unquote only the unreserved characters\n        # Then quote only illegal characters (do not quote reserved,\n        # unreserved, or '%')\n        return quote(unquote_unreserved(uri), safe=safe_with_percent)\n    except InvalidURL:\n        # We couldn't unquote the given URI, so let's try quoting it, but\n        # there may be unquoted '%'s in the URI. We need to make sure they're\n        # properly quoted so they do not cause issues elsewhere.\n        return quote(uri, safe=safe_without_percent)"}, "get_auth_from_url": {"line": 988, "args": [{"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://bsvbook.guarda.co/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ?details=basic'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://bsvbook.guarda.co/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf?details=txids?page=1'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://bsvbook.guarda.co/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/test/chain/info'"}, "return_value": "('', '')"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, "return_value": "('', '')"}], "text": "def get_auth_from_url(url):\n    \"\"\"Given a url with authentication components, extract them into a tuple of\n    username,password.\n\n    :rtype: (str,str)\n    \"\"\"\n    parsed = urlparse(url)\n\n    try:\n        auth = (unquote(parsed.username), unquote(parsed.password))\n    except (AttributeError, TypeError):\n        auth = ('', '')\n\n    return auth"}, "should_bypass_proxies": {"line": 737, "args": [{"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://bsvbook.guarda.co/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ?details=basic'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://bsvbook.guarda.co/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf?details=txids?page=1'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://bsvbook.guarda.co/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/test/chain/info'", "no_proxy": "None"}, "return_value": "False"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'", "no_proxy": "None"}, "return_value": "False"}], "text": "def should_bypass_proxies(url, no_proxy):\n    \"\"\"\n    Returns whether we should bypass proxies or not.\n\n    :rtype: bool\n    \"\"\"\n    # Prioritize lowercase environment variables over uppercase\n    # to keep a consistent behaviour with other http projects (curl, wget).\n    get_proxy = lambda k: os.environ.get(k) or os.environ.get(k.upper())\n\n    # First check whether no_proxy is defined. If it is, check that the URL\n    # we're getting isn't in the no_proxy list.\n    no_proxy_arg = no_proxy\n    if no_proxy is None:\n        no_proxy = get_proxy('no_proxy')\n    parsed = urlparse(url)\n\n    if parsed.hostname is None:\n        # URLs don't always have hostnames, e.g. file:/// urls.\n        return True\n\n    if no_proxy:\n        # We need to check whether we match here. We need to see if we match\n        # the end of the hostname, both with and without the port.\n        no_proxy = (\n            host for host in no_proxy.replace(' ', '').split(',') if host\n        )\n\n        if is_ipv4_address(parsed.hostname):\n            for proxy_ip in no_proxy:\n                if is_valid_cidr(proxy_ip):\n                    if address_in_network(parsed.hostname, proxy_ip):\n                        return True\n                elif parsed.hostname == proxy_ip:\n                    # If no_proxy ip was defined in plain IP notation instead of cidr notation &\n                    # matches the IP of the index\n                    return True\n        else:\n            host_with_port = parsed.hostname\n            if parsed.port:\n                host_with_port += ':{}'.format(parsed.port)\n\n            for host in no_proxy:\n                if parsed.hostname.endswith(host) or host_with_port.endswith(host):\n                    # The URL does match something in no_proxy, so we don't want\n                    # to apply the proxies on this URL.\n                    return True\n\n    with set_environ('no_proxy', no_proxy_arg):\n        # parsed.hostname can be `None` in cases such as a file URI.\n        try:\n            bypass = proxy_bypass(parsed.hostname)\n        except (TypeError, socket.gaierror):\n            bypass = False\n\n    if bypass:\n        return True\n\n    return False"}, "get_environ_proxies": {"line": 798, "args": [{"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://bsvbook.guarda.co/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ?details=basic'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://bsvbook.guarda.co/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf?details=txids?page=1'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/chain/info'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://bsvbook.guarda.co/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/test/chain/info'", "no_proxy": "None"}, "return_value": "{}"}, {"func_args": {"url": "'https://api.whatsonchain.com/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'", "no_proxy": "None"}, "return_value": "{}"}], "text": "def get_environ_proxies(url, no_proxy=None):\n    \"\"\"\n    Return a dict of environment proxies.\n\n    :rtype: dict\n    \"\"\"\n    if should_bypass_proxies(url, no_proxy=no_proxy):\n        return {}\n    else:\n        return getproxies()"}, "extract_zipped_paths": {"line": 243, "args": [{"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, {"func_args": {"path": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}, "return_value": "'/usr/app/src/test_repos/bitsv/.tox/py38/lib/python3.8/site-packages/certifi/cacert.pem'"}], "text": "def extract_zipped_paths(path):\n    \"\"\"Replace nonexistent paths that look like they refer to a member of a zip\n    archive with the location of an extracted copy of the target, or else\n    just return the provided path unchanged.\n    \"\"\"\n    if os.path.exists(path):\n        # this is already a valid path, no need to do anything further\n        return path\n\n    # find the first valid part of the provided path and treat that as a zip archive\n    # assume the rest of the path is the name of a member in the archive\n    archive, member = os.path.split(path)\n    while archive and not os.path.exists(archive):\n        archive, prefix = os.path.split(archive)\n        if not prefix:\n            # If we don't check for an empty prefix after the split (in other words, archive remains unchanged after the split),\n            # we _can_ end up in an infinite loop on a rare corner case affecting a small number of users\n            break\n        member = '/'.join([prefix, member])\n\n    if not zipfile.is_zipfile(archive):\n        return path\n\n    zip_file = zipfile.ZipFile(archive)\n    if member not in zip_file.namelist():\n        return path\n\n    # we have a valid zip archive and a valid member of that archive\n    tmp = tempfile.gettempdir()\n    extracted_path = os.path.join(tmp, member.split('/')[-1])\n    if not os.path.exists(extracted_path):\n        # use read + write to avoid the creating nested folders, we only want the file, avoids mkdir racing condition\n        with atomic_open(extracted_path) as file_handler:\n            file_handler.write(zip_file.read(member))\n    return extracted_path"}, "_parse_content_type_header": {"line": 489, "args": [{"func_args": {"header": "'application/json; charset=UTF-8'"}, "return_value": "('application/json', {'charset': 'UTF-8'})"}, {"func_args": {"header": "'application/json; charset=UTF-8'"}, "return_value": "('application/json', {'charset': 'UTF-8'})"}, {"func_args": {"header": "'application/json; charset=UTF-8'"}, "return_value": "('application/json', {'charset': 'UTF-8'})"}, {"func_args": {"header": "'application/json; charset=UTF-8'"}, "return_value": "('application/json', {'charset': 'UTF-8'})"}, {"func_args": {"header": "'application/json; charset=UTF-8'"}, "return_value": "('application/json', {'charset': 'UTF-8'})"}, {"func_args": {"header": "'application/json; charset=UTF-8'"}, "return_value": "('application/json', {'charset': 'UTF-8'})"}, {"func_args": {"header": "'application/json; charset=utf-8'"}, "return_value": "('application/json', {'charset': 'utf-8'})"}, {"func_args": {"header": "'application/json; charset=UTF-8'"}, "return_value": "('application/json', {'charset': 'UTF-8'})"}, {"func_args": {"header": "'application/json; charset=utf-8'"}, "return_value": "('application/json', {'charset': 'utf-8'})"}, {"func_args": {"header": "'application/json; charset=UTF-8'"}, "return_value": "('application/json', {'charset': 'UTF-8'})"}, {"func_args": {"header": "'application/json; charset=UTF-8'"}, "return_value": "('application/json', {'charset': 'UTF-8'})"}, {"func_args": {"header": "'application/json; charset=utf-8'"}, "return_value": "('application/json', {'charset': 'utf-8'})"}, {"func_args": {"header": "'application/json; charset=UTF-8'"}, "return_value": "('application/json', {'charset': 'UTF-8'})"}, {"func_args": {"header": "'application/json; charset=UTF-8'"}, "return_value": "('application/json', {'charset': 'UTF-8'})"}, {"func_args": {"header": "'application/json; charset=UTF-8'"}, "return_value": "('application/json', {'charset': 'UTF-8'})"}, {"func_args": {"header": "'application/json; charset=UTF-8'"}, "return_value": "('application/json', {'charset': 'UTF-8'})"}], "text": "def _parse_content_type_header(header):\n    \"\"\"Returns content type and parameters from given header\n\n    :param header: string\n    :return: tuple containing content type and dictionary of\n         parameters\n    \"\"\"\n\n    tokens = header.split(';')\n    content_type, params = tokens[0].strip(), tokens[1:]\n    params_dict = {}\n    items_to_strip = \"\\\"' \"\n\n    for param in params:\n        param = param.strip()\n        if param:\n            key, value = param, True\n            index_of_equals = param.find(\"=\")\n            if index_of_equals != -1:\n                key = param[:index_of_equals].strip(items_to_strip)\n                value = param[index_of_equals + 1:].strip(items_to_strip)\n            params_dict[key.lower()] = value\n    return content_type, params_dict"}, "get_encoding_from_headers": {"line": 514, "args": [{"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:48:41 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Origin', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS', 'Access-Control-Allow-Headers': 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,woc-api-key', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Server': 'cloudflare', 'CF-RAY': '6d01e5396d587b1f-DME', 'Content-Encoding': 'gzip'}"}, "return_value": "'UTF-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:48:42 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Content-Length': '3', 'Connection': 'keep-alive', 'Vary': 'Origin', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS', 'Access-Control-Allow-Headers': 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,woc-api-key', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Server': 'cloudflare', 'CF-RAY': '6d01e53be9487a7d-DME'}"}, "return_value": "'UTF-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:48:42 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Origin', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS', 'Access-Control-Allow-Headers': 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,woc-api-key', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Server': 'cloudflare', 'CF-RAY': '6d01e53e2ff53a7d-DME', 'Content-Encoding': 'gzip'}"}, "return_value": "'UTF-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:48:43 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Content-Length': '3', 'Connection': 'keep-alive', 'Vary': 'Origin', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS', 'Access-Control-Allow-Headers': 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,woc-api-key', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Server': 'cloudflare', 'CF-RAY': '6d01e5402fee7a64-DME'}"}, "return_value": "'UTF-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:48:43 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Origin', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS', 'Access-Control-Allow-Headers': 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,woc-api-key', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Server': 'cloudflare', 'CF-RAY': '6d01e5428acf16ec-DME', 'Content-Encoding': 'gzip'}"}, "return_value": "'UTF-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:48:44 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Content-Length': '37', 'Connection': 'keep-alive', 'Vary': 'Origin', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS', 'Access-Control-Allow-Headers': 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,woc-api-key', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Server': 'cloudflare', 'CF-RAY': '6d01e5477b083a5f-DME'}"}, "return_value": "'UTF-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:48:44 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, DELETE, HEAD', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Headers': 'Origin,Content-Type,Accept,Authorization,User-Agent,Code', 'Referrer-Policy': 'same-origin', 'X-XSS-Protection': '1; mode=block', 'X-Frame-Options': 'SAMEORIGIN', 'Permissions-Policy': 'accelerometer=();camera=();geolocation=();gyroscope=();magnetometer=();microphone=();payment=();usb=(self);', 'Content-Encoding': 'gzip', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains; preload', 'X-Content-Type-Options': 'nosniff', 'Server': 'cloudflare', 'CF-RAY': '6d01e54a4d5f7b33-DME'}"}, "return_value": "'utf-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:48:48 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Origin', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS', 'Access-Control-Allow-Headers': 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,woc-api-key', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Server': 'cloudflare', 'CF-RAY': '6d01e561adc53a77-DME', 'Content-Encoding': 'gzip'}"}, "return_value": "'UTF-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:48:48 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, DELETE, HEAD', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Headers': 'Origin,Content-Type,Accept,Authorization,User-Agent,Code', 'Referrer-Policy': 'same-origin', 'X-XSS-Protection': '1; mode=block', 'X-Frame-Options': 'SAMEORIGIN', 'Permissions-Policy': 'accelerometer=();camera=();geolocation=();gyroscope=();magnetometer=();microphone=();payment=();usb=(self);', 'Content-Encoding': 'gzip', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains; preload', 'X-Content-Type-Options': 'nosniff', 'Server': 'cloudflare', 'CF-RAY': '6d01e5640f9c1693-DME'}"}, "return_value": "'utf-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:48:52 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Origin', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS', 'Access-Control-Allow-Headers': 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,woc-api-key', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Server': 'cloudflare', 'CF-RAY': '6d01e57ade6c7593-DME', 'Content-Encoding': 'gzip'}"}, "return_value": "'UTF-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:48:52 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Origin', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS', 'Access-Control-Allow-Headers': 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,woc-api-key', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Server': 'cloudflare', 'CF-RAY': '6d01e57d192d161c-DME', 'Content-Encoding': 'gzip'}"}, "return_value": "'UTF-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:48:53 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, DELETE, HEAD', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Headers': 'Origin,Content-Type,Accept,Authorization,User-Agent,Code', 'Referrer-Policy': 'same-origin', 'X-XSS-Protection': '1; mode=block', 'X-Frame-Options': 'SAMEORIGIN', 'Permissions-Policy': 'accelerometer=();camera=();geolocation=();gyroscope=();magnetometer=();microphone=();payment=();usb=(self);', 'Content-Encoding': 'gzip', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains; preload', 'X-Content-Type-Options': 'nosniff', 'Server': 'cloudflare', 'CF-RAY': '6d01e57f3ee84971-DME'}"}, "return_value": "'utf-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:48:57 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Content-Length': '43', 'Connection': 'keep-alive', 'Vary': 'Origin', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS', 'Access-Control-Allow-Headers': 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,woc-api-key', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Server': 'cloudflare', 'CF-RAY': '6d01e59aef7a16e8-DME'}"}, "return_value": "'UTF-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:49:00 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Origin', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS', 'Access-Control-Allow-Headers': 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,woc-api-key', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Server': 'cloudflare', 'CF-RAY': '6d01e5b02bf93374-DME', 'Content-Encoding': 'gzip'}"}, "return_value": "'UTF-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:49:04 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Origin', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS', 'Access-Control-Allow-Headers': 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,woc-api-key', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Server': 'cloudflare', 'CF-RAY': '6d01e5c5a9cc166c-DME', 'Content-Encoding': 'gzip'}"}, "return_value": "'UTF-8'"}, {"func_args": {"headers": "{'Date': 'Wed, 19 Jan 2022 17:49:04 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Origin', 'Access-Control-Allow-Methods': 'GET, POST, OPTIONS', 'Access-Control-Allow-Headers': 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,woc-api-key', 'CF-Cache-Status': 'DYNAMIC', 'Expect-CT': 'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"', 'Server': 'cloudflare', 'CF-RAY': '6d01e5c7fd0f005f-DME', 'Content-Encoding': 'gzip'}"}, "return_value": "'UTF-8'"}], "text": "def get_encoding_from_headers(headers):\n    \"\"\"Returns encodings from given HTTP Header Dict.\n\n    :param headers: dictionary to extract encoding from.\n    :rtype: str\n    \"\"\"\n\n    content_type = headers.get('content-type')\n\n    if not content_type:\n        return None\n\n    content_type, params = _parse_content_type_header(content_type)\n\n    if 'charset' in params:\n        return params['charset'].strip(\"'\\\"\")\n\n    if 'text' in content_type:\n        return 'ISO-8859-1'\n\n    if 'application/json' in content_type:\n        # Assume UTF-8 based on RFC 4627: https://www.ietf.org/rfc/rfc4627.txt since the charset was unset\n        return 'utf-8'"}, "default_hooks": {"line": 16, "args": [{"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}, {"func_args": {}, "return_value": "{'response': []}"}], "text": "def default_hooks():\n    return {event: [] for event in HOOKS}"}, "generate": {"line": 755, "args": [{"func_args": {}, "return_value": "b'{\"chain\":\"main\",\"blocks\":722995,\"headers\":661647,\"bestblockhash\":\"00000000000000000a7d1f0b96df231a9b79c7536f6bd0658ed834db598353be\",\"difficulty\":82596369441.63945,\"mediantime\":1642613455,\"verificationprogress\":0.9999990680405404,\"pruned\":false,\"chainwork\":\"000000000000000000000000000000000000000001343a280db888b98011f77e\"}\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'[]\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'{\"chain\":\"main\",\"blocks\":722995,\"headers\":661647,\"bestblockhash\":\"00000000000000000a7d1f0b96df231a9b79c7536f6bd0658ed834db598353be\",\"difficulty\":82596369441.63945,\"mediantime\":1642613455,\"verificationprogress\":0.9999990680405404,\"pruned\":false,\"chainwork\":\"000000000000000000000000000000000000000001343a280db888b98011f77e\"}\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'[]\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'[{\"tx_hash\":\"6d3b03b8f2e7c899eeddb318c14b36ea9fff176f8f356049e516dcc06839d10f\",\"height\":440399},{\"tx_hash\":\"7d31a463865c3add0d8f4be453db7b7b1f90c6b5c7478685e259f467b8b524f9\",\"height\":440769},{\"tx_hash\":\"20d40add3b7deea7c6102c1950cf053299666023f364c46461a5677a06f4aff5\",\"height\":441305},{\"tx_hash\":\"4083672dc99759f216b94cc5bd4cd1b6d187caba3f4ae6ec74d0f563b2ca8497\",\"height\":441318},{\"tx_hash\":\"f30a3f30044ec40fb69cd1358a3d8acb4a85efae36b1a9c02e3efd89798f30a5\",\"height\":441343},{\"tx_hash\":\"2638e44cf0b41b512d3eaadf0d528830c424c4d898d3a5ab5d5202ffdd1f758e\",\"height\":462936},{\"tx_hash\":\"4122e2c615e9561f625f9ff4186f5f826554f12edfd0aed5c88c6e0665c6cbef\",\"height\":531419}]\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'{\"confirmed\":110000,\"unconfirmed\":0}\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'{\"address\":\"17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ\",\"balance\":\"110000\",\"totalReceived\":\"1000000110000\",\"totalSent\":\"1000000000000\",\"unconfirmedBalance\":\"0\",\"unconfirmedTxs\":0,\"txs\":4}\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'[{\"tx_hash\":\"a32697f1796b7b87d953637ac827e11b84c6b0f9237cff793f329f877af50aea\",\"height\":337370},{\"tx_hash\":\"07a78d55fc17a2809e031116e71ac63faa6c2ea9e29480b4fa59031683b506b8\",\"height\":337374},{\"tx_hash\":\"9fdbf640c879c57bf9cfd389b3a0649762c4cb4093b9cccd6ffc5fa06f8a28de\",\"height\":337375},{\"tx_hash\":\"18f5cab07cb6ce1e0e84fadf1d8a529a66eaa7dda6061a75e51881b6121b3051\",\"height\":337377},{\"tx_hash\":\"82fd6fdcc09627414faad2b9c24500ed8ddeb284b6727e4faa5a666d06282369\",\"height\":337381},{\"tx_hash\":\"0570b083fdb91b62029f18b94b438a2c55d18a849f53aa332083296824ae0a86\",\"height\":337382},{\"tx_hash\":\"ba13a6770ee2cb88c8050f97469c022fe9d502fd91703667972ae2e168e8e373\",\"height\":337384},{\"tx_hash\":\"7eb8c857dc111decf4fd0ae6276846c771401be9384808d80133827155811abf\",\"height\":337384},{\"tx_hash\":\"80ce03bd6fd99402b5b5982b7fec23dc22fb48e78b4c07547e5ea4c9e28ee695\",\"height\":337390},{\"tx_hash\":\"88851bdcc1bb3e9728a3d9addf4509429bf0f2e279194871ab322598c1eef331\",\"height\":337390},{\"tx_hash\":\"00499461136da89b69bb8f252ef3e13ed57fa99a009e68553d534dc6a0cff322\",\"height\":337391},{\"tx_hash\":\"91bbf3dbe790ac234763c'"}, {"func_args": {}, "return_value": "b'e1d28c3c269f7b34d4e6f0ced765aa0450ce742797a\",\"height\":337391},{\"tx_hash\":\"87c4acc7c46e0cfdd2442c211660e2817a06648d1d4211f5aa82d94b328e0cb4\",\"height\":337397},{\"tx_hash\":\"27c5c18b9ea8793b4d2a5dc911cb731d929c74366bdf5977bd5548f41a19fbae\",\"height\":337401},{\"tx_hash\":\"1a2640f142fa756a05b7b3ee4ea54cc85031bf7d3441b86d4e41413cb0936634\",\"height\":337403},{\"tx_hash\":\"ad9aba2c84406fe2b2b082c0f3e1e191d1de41bf261a3707081b2017b3e1b587\",\"height\":337406},{\"tx_hash\":\"e0348c828a4181d9610ecea00f003c462e5b7000b90dba1d7bc59e487135f476\",\"height\":337411},{\"tx_hash\":\"56b427e7f06f8ed8ea01b384c0e1d1c53ab3630f3905396db51d6208da1edc9e\",\"height\":337416},{\"tx_hash\":\"64d69a29e214056cba90f09467058fc1f8e8a2b858b24c907ef38f97f6d4a30f\",\"height\":337420},{\"tx_hash\":\"478728b706381fb19ef91fa90842c8c53ae657aa91fae3b795e157bb49838040\",\"height\":337422},{\"tx_hash\":\"0f29740915e8c301f9dc5ace8bb02a69157a8dce891fa43446f5cdae17af168a\",\"height\":337424},{\"tx_hash\":\"e4b6c68f54e621e46fbd15ae7c2d5f83007972234d9bb3f55fd8554732c5b829\",\"height\":337427},{\"tx_hash\":\"13d109532af5241f9f343fa77a46e04bc15528e54d4559c2975f227c2d223686\",\"height\":337428},{\"tx_hash\":\"21abf8343f5f94184ff01cf9580b20aa8c211e45a40474d087720bcc9192ad23\",\"height\":337429},{\"tx_hash\":\"8ad6b0bce92798998f2bde8518c6fe71493146969fcde379dcae4454ac3ec5f9\",\"height\":337430},{\"tx_hash\":\"991d9cff432a3edacd4b5b3062d8b4a6866d4cc09f9eed2f1d7dedea53d9e049\",\"height\":337432},{\"tx_hash\":\"7b63ccd41ab4b2dfac21572d03325ccfd5e8dac4c9e87d41d7b63d1fda8081a2\",\"height\":337434},{\"tx_hash\":\"bfaa6a1d42796b92e1f4231cd77dc1ff9423f0b8e802f7279382558be5d427e6\",\"height\":337436},{\"tx_hash\":\"c4d9d954d80b86641a8b23a081f94a4937b32de38c4f66b74eaef8e02283f3fd\",\"height\":337439},{\"tx_hash\":\"eadc6f937ab3a7a496e46ec7c07efbbbdc0daff0fc085ebda37f6db169590783\",\"height\":337443},{\"tx_hash\":\"1ffce7ab2ab6d65f5f085800a46ba8ef7e4baf29ef0a63d699de99965dcbc8b7\",\"height\":337444},{\"tx_hash\":\"6cfb179d72b9e849ab996ca815de69e8c87198192373b6eb21ba878a23245005\",\"height\":337445},{\"tx_hash\":\"829a2107acdd3b5bd48bac79def9305ffb96bfe9293939488a2c4e11e2a0553d\",\"height\":337448},{\"tx_hash\":\"526aeaaa36a2ad9e10f6b593713a0e1fd2204970ec7f3987639ff025e095827c\",\"height\":337449},{\"tx_hash\":\"63b2112232f2672e4366779f213ad939b16483dee14c3b785900967dfb79cdaf\",\"height\":337450},{\"tx_hash\":\"93b82671d84cb9599f8501581860929a8f53952733505c2d91022b923f19df1b\",\"height\":337452},{\"tx_hash\":\"c0c6e997f9a5361c94d45d04fdacc2e24ea9ddb6035633132bc949242236cef5\",\"height\":337452},{\"tx_hash\":\"8b7d36365a85bd6a57c4d7f0f2fc39c9c83732373afabcf736ac0037eaa63160\",\"height\":337452},{\"tx_hash\":\"4f3775fa3eed99e0588e13c4826dfa0ae8fcd90a804c01af8037c5671191900e\",\"height\":337452},{\"tx_hash\":\"2e594b1dd4eabc8bbf5cf5fe7b94c987b36ee76805508e5a1d2c316ddd1614f1\",\"height\":337453},{\"tx_hash\":\"6448828ebed74e4cafb5a94866cbe43310621f397be97c4315ca6725d8ace1ae\",\"height\":337453},{\"tx_hash\":\"5c5ecbb47a99cc649f5ea9f28a3c06a04e2755e44211781007ee41360e31a0a4\",\"height\":337454},{\"tx_hash\":\"ea6252165fdf4741db7bdb52c280144320cb5e0260376ee8f34714c5158887b9\",\"height\":337454},{\"tx_hash\":\"6c17e1baa7e5e6dd9a285fb17f969a4f231262830ebd5a6c75faabf8e557d0ed\",\"height\":337455},{\"tx_hash\":\"704e370d450c00c6e575d3575a035afb06946ce6bc79dd0b59360b5dfb517ed7\",\"height\":337458},{\"tx_hash\":\"d1bdeefd9c24e8798744017a47f3f6894fe6734dd286e395df67577213d3093c\",\"height\":337458},{\"tx_hash\":\"a6066e18e3a0da1e4b3980ec5dc3205af144d9117dfa59f7b236dcb37e7ba116\",\"height\":337459},{\"tx_hash\":\"ec1402ce882c029880cbe9326b28e9025d3003eac345f97adc7b154de41c9c11\",\"height\":337461},{\"tx_hash\":\"f8f80c17beec8bd6ec4060db485cbaa47857f2aed699a9c24a63fc5b1c9a5d69\",\"height\":337462},{\"tx_hash\":\"c40a83ed8912e40448790c9061472646de54e375d8f3532769bea20be117591f\",\"height\":337464},{\"tx_hash\":\"84770518e8406740c5774517dce7044a207597025f337560d2505686b16ee2b9\",\"height\":337464},{\"tx_hash\":\"cdfeab0046c816c0baf240c9990be89a83a29e68962f369a75504480fe1fb0ae\",\"height\":337465},{\"tx_hash\":\"a2eea338a1207b1f4b45b558e349a664556f60b5602d8ad084b3e36cd9968411\",\"height\":337470},{\"tx_hash\":\"b354f5bc9d7c194f4dc8ea09920c3cb79f396d1e4675e0a259afbf3e456b39fe\",\"height\":337471},{\"tx_hash\":\"a154244e35c1dd220e324def70c3bc3585fd789da9420ae7b20f805057c584e6\",\"height\":337471},{\"tx_hash\":\"eba3ddb88961fb9526770b59f0be39cd9b20cf5fda506117f43c5688b1a9bac9\",\"height\":337475},{\"tx_hash\":\"7a3857e2a3e64c6c0b13ad280110d4ebc45a7019ce7a43ba9909b35bb64eb37f\",\"height\":337476},{\"tx_hash\":\"c925672834f5e19bb6390ef861c62aca2ee578bf801ea441efe13a6a5823c54a\",\"height\":337480},{\"tx_hash\":\"dea13d5e74f3b5dace5896504dd9d3ba4cd3de9ffef7d8744503a81df1390be6\",\"height\":337481},{\"tx_hash\":\"5d6647b525d6316f0ccf2bda446966770447eea394c05ff77330b253c9a0473e\",\"height\":337484},{\"tx_hash\":\"54df89570ccb5cc40ca66cb8a4fcb7877916f99928bf8f04a05e74410c5e98cc\",\"height\":337487},{\"tx_hash\":\"a8bc33ede8b14f32d18deb9e3a826d92dff5a40672afa4d4df064a4a8230abb5\",\"height\":337492},{\"tx_hash\":\"0008e0182ac8f8f389215489ef27d09ed9878fafc1c196efd9690cb95432f364\",\"height\":337492},{\"tx_hash\":\"b2226ff35d689ff1280f117bd550de3b182ed01c6c81af12856234514991af13\",\"height\":337494},{\"tx_hash\":\"0c444c3e6f5fcf3bb765726d9684f395429318ace42bfe7f22f49cde96e9d920\",\"height\":337494},{\"tx_hash\":\"3b4c9225947027411dcd75f222dc23898748db8673627dab8266890dbfd0cbd3\",\"height\":337495},{\"tx_hash\":\"66909a69b80221c8cdd6439121e7381dbf1b3bdf423329ec8ef3f8ace70229f8\",\"height\":337496},{\"tx_hash\":\"2a9d75fd7f48a96be8fd30e5c5191198d2723ffaf95664ed6ead2387bbbcd21a\",\"height\":337497},{\"tx_hash\":\"08029f1e995889c9c7c76752432789f4f5bad7b73032a41e9edf2a2c0b8b9807\",\"height\":337504},{\"tx_hash\":\"2612553a2c4db66817390763a581ff6d814479a9825faca926c491212a79e20a\",\"height\":337506},{\"tx_hash\":\"49f98a9ce9d5e4c3931361bec7005aaa705a1eb59d453b866f4a7d1a3be26df5\",\"height\":337508},{\"tx_hash\":\"a8c19996a0c2c16e2c212325e4869760d682cde5d43c4eda8beb666e85fb5454\",\"height\":337512},{\"tx_hash\":\"2e78aa91ed5db8e3b470335a7972fcbf018492bcd09364e37e0521be02413f1f\",\"height\":337515},{\"tx_hash\":\"892d66da6fcbed2a08c02017efeb0ae59f7622542d74357f43d461d34f666b51\",\"height\":337519},{\"tx_hash\":\"b687382ed1311baaad82caa80a5223fad1675ebc61e3d6b672cfab4f0a6e46c7\",\"height\":337521},{\"tx_hash\":\"d3c555f6b9959ec1bc638f318846621ba64cd84557694f6740435d99f90811a8\",\"height\":337522},{\"tx_hash\":\"f68f44fbb2f6a71df93133cf632681b9247f2cafa44a9ebd931c61de11c15079\",\"height\":337524},{\"tx_hash\":\"f782b9ecaf6115a77bcd54b73b8cf249e0cdc1d5de9f542f2a6e30543e54696c\",\"height\":337525},{\"tx_hash\":\"b3c1d8411855fff7ebdf1ee297d39556550870e38886208539b240c19846019b\",\"height\":337527},{\"tx_hash\":\"8dc7fc3250622998ae247b3805eb84179feb77dc050584da27a742c708bf759f\",\"height\":337529},{\"tx_hash\":\"9d756fb491a10fc6ffde2f63ff5055d489eb318873d5cd0dcb6ae5ae5674b3b4\",\"height\":337530},{\"tx_hash\":\"884ed1480e1b80bd16d3bfb06419fcee47f762ae4c0a387217ebafd740186ef0\",\"height\":337531},{\"tx_hash\":\"77ddce777cbceaa4cfdf82a198c56c13fd4760481400091e776e8a7fe3d6d24b\",\"height\":337532},{\"tx_hash\":\"4d4368cdf18b874b85ea218d9dcaf5762d38f2e9e0ebaec6c852ac2500deca2b\",\"height\":337533},{\"tx_hash\":\"7de76c8281dbdc5a64464ea94dc109e7672625e92d1b9a149b5cfdb729997a79\",\"height\":337534},{\"tx_hash\":\"23acf21a53a2b6f6cf379645085cff65bfe3e37df96fa86d351f73138efae6fa\",\"height\":337536},{\"tx_hash\":\"4d747c67f86a6fcc9fc88fcf16e2115e9994f994eef6cd7dc351062a6a3d5b68\",\"height\":337538},{\"tx_hash\":\"251c7f15793d64a94df08be7a849a55f0fa907cca54f3dc5a94f20bf5aaf298d\",\"height\":337539},{\"tx_hash\":\"4817098d73b29c2462880be2d4611613fde9bf3fac2921511adcf48a323d6269\",\"height\":337540},{\"tx_hash\":\"1f73b5815f98d4c13d1b35e8a1e5b7a6d318cf2e6d09985908e8601fabdf44da\",\"height\":337541},{\"tx_hash\":\"fe878d70a60de31be9d3004beaa33a6700af147c52c27620988181d6bee9dc8b\",\"height\":337542},{\"tx_hash\":\"84810d3a0bf0eafd7f91bb7455e18ccea60b40211eb8701ff4fcf20dd1541942\",\"height\":337546},{\"tx_hash\":\"ed5b829a927f8f325f0af6ad504f4b442805513de50e1980608ab7f35e494d23\",\"height\":337547},{\"tx_hash\":\"0a5549f4be30076cdb18bf613f0f24d0ec8af2a738d6cddf93e4b57082d6f6cd\",\"height\":337550},{\"tx_hash\":\"11e43c69873fea132eca999547b27aae50b47d324239f1c849b696d614f63e02\",\"height\":337551},{\"tx_hash\":\"1f5edb6695d9b1feba673eab5696c2a21bd2de986578581a1f343ef2ca49f1de\",\"height\":337558},{\"tx_hash\":\"febfd1f5863f355dd076044821423449e8e0be933b66f0dafb8b67338b5c40fb\",\"height\":337563},{\"tx_hash\":\"b46555fdfc9b6c9d0c54b9cb6f607568777deafa3a02249a5f0c0dd48530e719\",\"height\":337570},{\"tx_hash\":\"57a6db882f35aa0e820794629b3fd74c0978cb5100e2788dfe3b13714162614b\",\"height\":337576},{\"tx_hash\":\"269d8eb9e601f8066ce1e5b2a9311d8a8feec2a9cd6710438d2b8f8a4765b1f0\",\"height\":337578},{\"tx_hash\":\"001d936bd9b95b06b24b30a392cf2fb5e81a3a3a0fe1076fb745048d5f1ba058\",\"height\":337586},{\"tx_hash\":\"336e8a364b6097e00bc83c383cfd63f1b71035df9412d4172597cdea7cedddb4\",\"height\":337587},{\"tx_hash\":\"7cb7c0eb5d8d44ed0aa7aea5220477df3b55dd1b00031d1eac7a29125d28f02b\",\"height\":337588},{\"tx_hash\":\"10363caaf2906b084a1a9e84a520f32b6b213e59d9378e26a800fad37cff1158\",\"height\":337612},{\"tx_hash\":\"a50fb39d7c2ad9fe0ba2f9b9ab0e3593d49d1ff00120bc30cf8c568d5bf56378\",\"height\":337616},{\"tx_hash\":\"269f4eec875a22bcb89e45e232004ce518b074b18ab8f76e27deff263411cbad\",\"height\":337616},{\"tx_hash\":\"adec36c9c7f979aa638bb6c4f43a7b3f7641c14dc67e72508abac0a6a4dfe00f\",\"height\":337621},{\"tx_hash\":\"bf47c654ee6329bdb1e07dbc783e959d10e431775861c9a5ebed0e3e51f05906\",\"height\":337626},{\"tx_hash\":\"bd1182f6b676c13dfc0ab28097dc43eac43554006854ab785b20b4a6bb307b73\",\"height\":337641},{\"tx_hash\":\"4e2310ee5f5d95ea17878f558406e24d10e6234a614fd960bbcddcb2ccd25dd4\",\"height\":337647},{\"tx_hash\":\"686bb67995439a03476936970fef95089c565bdb6741664588fd58478b7860f3\",\"height\":337680},{\"tx_hash\":\"c6a87c513eebc4a47a9e529a9564fd7d263de44cc7fe2e6a061aafb09a6906a5\",\"height\":337683},{\"tx_hash\":\"b4d90ddcc8d2fb30ea4889e5319cd9026c7cefc0a4338e63c117dcb16ae59603\",\"height\":337685},{\"tx_hash\":\"45252e4d10a0371ccccb48dcdd7c42c697fe7bf232ebb2d462af8a4f85474420\",\"height\":337686},{\"tx_hash\":\"4960a19eed992dfb402d0d3efa899fc66515c54a20bf08bec7fbf5bba299eb95\",\"height\":337686},{\"tx_hash\":\"ec444b55c26445082a439676608cf269a2d9babfbabc7e4166d2ee89bdefe061\",\"height\":337687},{\"tx_hash\":\"196bfdf96535bbbadea6130366852ff825461f954272eb5313afbdd604201d10\",\"height\":337695},{\"tx_hash\":\"c0a95d7c4f4c226e84799ded59e93d48063c799367d7154a0538e80aff69691f\",\"height\":337695},{\"tx_hash\":\"ee99ffd05dbd5eca72251546c0bb2f887eff6c7f32ea79d28901d830d437cb6d\",\"height\":337695},{\"tx_hash\":\"8a0d0c124c6b77e937b959350ba3008534677762397baf8d68ab1dacdf79be67\",\"height\":337703},{\"tx_hash\":\"4a70cc290607cf1b3d358f96c1ed1f83ae1b097070f89c914e001cf732b1c3fa\",\"height\":337704},{\"tx_hash\":\"0ceef066efa3664fef7d98420daf339967cd37b5aadb72d7bb701bc92a6c5de7\",\"height\":337704},{\"tx_hash\":\"c5eb47ec5ab9248903a905f9524dd2fe72a0a320c5f04a9f76d9a1b02c021a78\",\"height\":337706},{\"tx_hash\":\"04ef35699d713641228c839f4763ededcd6f368ee90cc427c97e091751bd80e6\",\"height\":337706},{\"tx_hash\":\"a0c57d52f0c53487342cb7f99e8a5249741ec952cffa93204629063921bb25f5\",\"height\":337709},{\"tx_hash\":\"7f8a842de1116cfde8fa14f3fc9a1318a674f114b386b3bbe7c31cf538fce99f\",\"height\":337723},{\"tx_hash\":\"27602fc32e9a804bb75be9dc67d3e052f11c63118fbb2fe836eeeea7864cd036\",\"height\":337728},{\"tx_hash\":\"43074412a082ed8cbc621a407e891701a69aa39d00c4c9ec2c46cfaff01f4cf4\",\"height\":337728},{\"tx_hash\":\"5b0298526c97f6412d1c093051b04405ed5c95455ca7f05889492df6aa48741f\",\"height\":337728},{\"tx_hash\":\"e889d04a1de5f9edb637bc37a7c6b8366cb6b921c858fd006c15f686a8c82bb1\",\"height\":337728},{\"tx_hash\":\"07e6062efafcc626a1b00e40cdf631eb4e1a18ae8494db53f41eb19a9ac663b0\",\"height\":337730},{\"tx_hash\":\"f91ad18de278c2dcdde608474b127cc3ced0dd97a4feea3b8cc6ddb3520c9da2\",\"height\":337735},{\"tx_hash\":\"7e41da5dca99a5746add768e347589b535cd3f381088253f6254e6e84b7b34cd\",\"height\":337745},{\"tx_hash\":\"11adb79f9ce23a0eb315e802d1b84565074fc4baa345e7fdcc2c6091b0f24782\",\"height\":337753},{\"tx_hash\":\"228538dfb91f2e44d9251fb35e6e27943aca9ea712c423f9da7d0676b652a5c5\",\"height\":337760},{\"tx_hash\":\"9a12b54576598e4e4d95c8ea6'"}, {"func_args": {}, "return_value": "b'613089e572230642cf8e58c8cb018114ef9c78c\",\"height\":337761},{\"tx_hash\":\"f4901d0a7a50086aa09b11854a2b29402f04a317b4f14a39c2de0a8462e3b3df\",\"height\":337792},{\"tx_hash\":\"fb74c39476d08a0aa60a9721d7a6e40bf5b1ba99470249a65bf2ba07e82fe809\",\"height\":337793},{\"tx_hash\":\"23bff6715c450f2af6f56a42862ac5006eb6037fbee549c5820ddaf2afca7e5d\",\"height\":337808},{\"tx_hash\":\"d07571f366db3c7769e74b2c52a11446f6e52107327beccf367d7b00a243df07\",\"height\":337853},{\"tx_hash\":\"406aa2cce2cab9a606a1eb0675c7b6987c45e748b9f08d6627855cce91987c1e\",\"height\":337854},{\"tx_hash\":\"8328a2ab8d4d22f8a098c8fa5a113a4a77c708c7d2c8fd358dd0cf0633b1edad\",\"height\":337890},{\"tx_hash\":\"d41cfbc62295217d85a75c17b8860a6ad2e9b8871a6502b5980932a855792191\",\"height\":337890},{\"tx_hash\":\"79781dd4afa7f34bc5d44341e47867c297e1b70614377a3e080f2a038a835691\",\"height\":337890},{\"tx_hash\":\"3b3f41f7ded78c4f2e18f5decc80f311e23dc9456b9cb387f618925c94c910fd\",\"height\":337891},{\"tx_hash\":\"e48a2be73401a9daf8e560e2d38702fbefe647dbf08d96c0b532f0d6cb92d7fc\",\"height\":337891},{\"tx_hash\":\"7270d303e58506d7199f9ebf1895fc46d0d0f1111caccb3bda8452974950817a\",\"height\":337893},{\"tx_hash\":\"2f183e723d46c40822fbbe4cfb6a86812d37beb085d9e0b051bedb8d24f5abec\",\"height\":337902},{\"tx_hash\":\"aab2c4f7b5b8491da177b8cd50fee763ca093c7f8f4d0bef3cbf4a3b85d8d8af\",\"height\":337902},{\"tx_hash\":\"10c7807ffc77707bd16415a03ae2896eb09510178824abaa9a053faa531c7af9\",\"height\":337903},{\"tx_hash\":\"fbaabb5c9f4f4ff706f075c60ecb64c5cd38d6d726abae3228ca76242b3efe54\",\"height\":337903},{\"tx_hash\":\"af67af3c647a78311f2f6fc0509b77012aee27f03859e205a9ec409172268519\",\"height\":337904},{\"tx_hash\":\"b27033fb1e73268612fcb81f0befa18c3fec496719cbe8dcac5c6139ba5f0d39\",\"height\":337904},{\"tx_hash\":\"50348d8426021c0d8b8f3b6640b089e488229714e11a4f428f70d7579ea614d3\",\"height\":337905},{\"tx_hash\":\"c30b9855eb5d926c1a5b5febcc9eb34f87568f3f791b8529c49fcc178a98ae84\",\"height\":337906},{\"tx_hash\":\"1762080dda92f7dc58bdae0345ca9e940b1296b4e35fb8899cd591c12336a845\",\"height\":337906},{\"tx_hash\":\"711184255c2ceb868fa8f3cc86dc56b4e790c997ccda51de096ae77f100ecdcf\",\"height\":337906},{\"tx_hash\":\"6cce50fbdcc1299f80074f3a9a0f92079205026aab5213d811bcbff4928eea37\",\"height\":337907},{\"tx_hash\":\"4c26341c2878e201cad31bad6d3b380a11fc9c1e20d2b6f60655d34892c9d57e\",\"height\":337910},{\"tx_hash\":\"186eddf72ed79b9081c5b8b4dbe64f08027dba19223c264295e27e804a9a2679\",\"height\":337910},{\"tx_hash\":\"c9a3fe5063936cc685fb3a53d3237a200debcf4d92ae25d46ebc5c6ada837d6a\",\"height\":337912},{\"tx_hash\":\"3b6efc9b3642b3a68dbf9a5857cd342f281d4600192803eef028a86f3badbca5\",\"height\":337912},{\"tx_hash\":\"b264d7b5e947d6dd9a48ad349e3d5dd7f354441e9ac046330cb309fb94eb62c8\",\"height\":337913},{\"tx_hash\":\"2957eed3e704c3a9cf65c1b4fedc0beb1626b5c9efa719f81f39675d5fae6c80\",\"height\":337915},{\"tx_hash\":\"b1b3505f36c9562ac30d29cd101e6d4f94b810abbbf471c1309519a4eb9fd9b0\",\"height\":337927},{\"tx_hash\":\"c6c43f7a2bca90f3e94ef4625bd48477a924624c8f17a4878060f6d912d84dd1\",\"height\":337939},{\"tx'"}, {"func_args": {}, "return_value": "b'_hash\":\"88c5d62fffdbc599378fb8519b7aca46774776f6bf5768b1014b7a4d7715e1ed\",\"height\":337941},{\"tx_hash\":\"a415a2f139d5836a8be9d04a4a1badd0241bb0571c29b8d9f8d0561c0f1f7898\",\"height\":337970},{\"tx_hash\":\"44d776a55ff2c1992f954190e93c7f377a4b4db0f9ccc51ef1d09a88571554fb\",\"height\":337989},{\"tx_hash\":\"722984a2a72ebeb58f28ba6eb879c72ce29508c32647209328a7ee7c0adacdb2\",\"height\":338005},{\"tx_hash\":\"2a175dc3217754ddf810114be144d488ce5a67fe21e93d1ff5f715b89414dd95\",\"height\":338041},{\"tx_hash\":\"184140ff8aa07a2ac5ef6343ec5644b5f2b0c57dc1125cafa4a53bf4b5de72bb\",\"height\":338068},{\"tx_hash\":\"a46682ce58c64147b1d8148e8c97648e443820e17ed181e8d512713208bb1d17\",\"height\":338094},{\"tx_hash\":\"693e8530869a97e184d59c6ee21c0ac3b5d0a08c82bfb02e36d72a0f1c54ad44\",\"height\":338159},{\"tx_hash\":\"5c30249487ab8a0645ae35a8b6eaa387a15769f5727892bb16928a38735f6058\",\"height\":338211},{\"tx_hash\":\"069e7049490eb4221c90aebbfdfe578b1b9d27cbc67ac9c078a95effb18330fb\",\"height\":338257},{\"tx_hash\":\"bd88e02b68aaf02027ff440759de0c0dbff5be27b5ad8f4fff6243512fcdab87\",\"height\":338261},{\"tx_hash\":\"07482d2ac1fce6b85dfa8553337b6ae78225d3cb068385a9e31d6a2dededffe5\",\"height\":338269},{\"tx_hash\":\"0abc096d1aa5258ea8e61e727ce3d33007337134cbbfc48468fd72a446640a86\",\"height\":338354},{\"tx_hash\":\"c65ec44bb248c4c84e97c699cbb09f4c29713970dd7d8d616c9e191a812ded70\",\"height\":338396},{\"tx_hash\":\"8c0e65a1ea3d4e8749de30eb6373f7ea056c7dfc3e4b1d77232333f1d50d91c4\",\"height\":338410},{\"tx_hash\":\"984c2c45ce56f89736e2c63317eb35249ebbc039c426246012c1f7f9442cc581\",\"height\":338442},{\"tx_hash\":\"1668e574e0f100f47df1c2ab07404b2a14c40c369495e17a484cc0dd166d7721\",\"height\":338461},{\"tx_hash\":\"563ee90b94c0e391047d2460dd8674b3b361043ec217026c49f9079932d4f372\",\"height\":338475},{\"tx_hash\":\"3e5cd4d1683e0f1398f1f528da4a4b41a0577f2551d17ced405d2a35fc4d7f5d\",\"height\":338502},{\"tx_hash\":\"42f0ae23141911b60b3ca60b007e17c50f1a8684256d33f757c8bf3efa488006\",\"height\":338690},{\"tx_hash\":\"06de423df78f7fd8c4059c0d8ee0a4281d6db2fc889178e73c26966c92581f94\",\"height\":338690},{\"tx_hash\":\"fe98361e260a0c4625e98db2bbcd09bfc5eb3508fa1be24b4f6e3328fe8d1e8a\",\"height\":338690},{\"tx_hash\":\"22de9082557ece679b4db48b8d1d777308ee60e0aa51ba9c8c45ce2015a19e19\",\"height\":338690},{\"tx_hash\":\"760e4aca8846c84c9c5c632579e2fdee0933615de62aeede2d18486af9338a34\",\"height\":338690},{\"tx_hash\":\"8c18ad12dbb37698ec42af316227451d569ca862c9da0c8ea1aaf653d8649d9a\",\"height\":338691},{\"tx_hash\":\"25c6507d04793c98a23c42693a3572a00ed88fac9b9d717d0c9f0b24daba8cb2\",\"height\":338722},{\"tx_hash\":\"1195ea5c3f07d46fe2e53c405c52cb99dd3c378e5d48b3a584aaeaf72cf1b4a8\",\"height\":338766},{\"tx_hash\":\"7366a9e548b4bc1b2eeaf0075977fc860af3f64a3dea5f72039067e96b81b175\",\"height\":338813},{\"tx_hash\":\"3e4d3b025b8f7a7800fac7bd1b53f9555ceae45aeeac9a86583073c7f08a4aa9\",\"height\":338818},{\"tx_hash\":\"9bdbc9fb4c399c2aeddc040ad4a0f1b417a32f37741fe83acd2989abe309c3aa\",\"height\":338819},{\"tx_hash\":\"062a8c2851297f4e0db8e08b371362ceb1f0289336062359f0a99bb78ddc1b'"}, {"func_args": {}, "return_value": "b'5a\",\"height\":338820},{\"tx_hash\":\"32860d4d1e609edf21dee3559f4fed5491ce78897f039098f5717d7379c0ef17\",\"height\":338892},{\"tx_hash\":\"161751e5e96b21e38fd85c73421ccca163fe78d72e8b92c95310f59d8a805813\",\"height\":338949},{\"tx_hash\":\"8088797179c260555148ca914a93b2c60a171672c869c7638491977a863ade7b\",\"height\":338950},{\"tx_hash\":\"029dc7fafdb936c0e5d1dca09b3236a7780ec0bad7cd9c140bd2c26a3580aeaf\",\"height\":338951},{\"tx_hash\":\"9a93d927584877fe053cb9d1e12dea4d52bf454b2dae53f031777859ed4ea345\",\"height\":338984},{\"tx_hash\":\"b9abaa7020c9d349fa36c0836123fb4b7e7a9efa608c09f3156ea460c6e31f62\",\"height\":339010},{\"tx_hash\":\"5dc277d9d532448fdedcba071ffa9859de01ee37330fe6f34767a229bfa8ba8b\",\"height\":339025},{\"tx_hash\":\"88e14e4fad731fce4cc555049785751afc2536df4d9a43057fe21b0a93c75315\",\"height\":339029},{\"tx_hash\":\"25789e0140240239ec5fc22d5ffef092e71fd9274252afcf9f1ca4fdbd84353c\",\"height\":341569},{\"tx_hash\":\"f0ec5f80930fbf3e3a0002464e7a67c340545129f48809f4bc555b630aec88d2\",\"height\":341632},{\"tx_hash\":\"a0d87f754fd83528a945c7f9642554e782b17d13842bc18dde0aa0d0a62559b8\",\"height\":342699},{\"tx_hash\":\"14d7d5dabbc1f8c727530cf3b0e54a8b4ea614ff06884bbeeb8df6e186d4ed96\",\"height\":344939},{\"tx_hash\":\"8f0ef8b4aefa8380fb7cea94f409d07ee006e22db132b71624e4b8eb4bbee2ec\",\"height\":358109},{\"tx_hash\":\"68eda916d93c63f30ef973780ce102ed432a4edb63421226cc53e814d7793a8e\",\"height\":358916},{\"tx_hash\":\"377f7e127670fa431382a67fde7f3382809ae052842f544dec963204f1292cbe\",\"height\":364441},{\"tx_hash\":\"be547387b59aace46900ba340cfcab6be6dd2c3bba78199eed12dba3fdcdb851\",\"height\":364441},{\"tx_hash\":\"7e80957db4514d150899b308b0472b51ce7b3dbd979f2b3e80681cb9067dac13\",\"height\":374785},{\"tx_hash\":\"4c02ef2a16f6d817b46074672532f5ea109fb0bfb78964a74f3e16503023022a\",\"height\":382086},{\"tx_hash\":\"d333460a18628ba0731062d67fc6608c2ee746a095fd43bce3e3fb0aad372cc8\",\"height\":422358},{\"tx_hash\":\"952c71b6ebe945a817125f27d1e6cdf08a6a0205628a8ad6c478e6cca8d1d061\",\"height\":426531},{\"tx_hash\":\"b96be39ce1238953d56da917ddc4ebcfdbe9da6c4d0b14a142cc3f5e5db5a5f6\",\"height\":427339},{\"tx_hash\":\"98902999abaa082a014ba49771c5fd940c5a4fa48fe9c7c4e8bf4cb880768a0c\",\"height\":449734},{\"tx_hash\":\"c0516410ee90fae59218e9d360a9c51a676278abfc081a5df2044ef96a45214a\",\"height\":451957},{\"tx_hash\":\"870b76dec1f99fdb37bb7057f90a9b8d914a33c825f2c909d660eb6c046f1058\",\"height\":451959},{\"tx_hash\":\"050e222545e75c06a73b9789739fb33a143c45c8d21e6308c12bb7908c2257f1\",\"height\":454227},{\"tx_hash\":\"df66cb1e3b9328a7eb84af893ec77fcbd0ccb9b00ca908692e9033476543f3af\",\"height\":454229},{\"tx_hash\":\"9140e563512ec9a681df9794c7108be96e805a8ce56eb48979012e38dd2f70ec\",\"height\":456080},{\"tx_hash\":\"3466c84ce020a49368e6cd71221f383ad6d9c1521372a9e8cf3adff332f21718\",\"height\":466370}]\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'{\"page\":1,\"totalPages\":1,\"itemsOnPage\":1000,\"address\":\"1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf\",\"balance\":\"676442973\",\"totalReceived\":\"1994995961476\",\"totalSent\":\"1994319518503\",\"unconfirmedBalance\":\"0\",\"unconfirmedTxs\":0,\"txs\":225,\"txids\":[\"3466c84ce020a49368e6cd71221f383ad6d9c1521372a9e8cf3adff332f21718\",\"9140e563512ec9a681df9794c7108be96e805a8ce56eb48979012e38dd2f70ec\",\"df66cb1e3b9328a7eb84af893ec77fcbd0ccb9b00ca908692e9033476543f3af\",\"050e222545e75c06a73b9789739fb33a143c45c8d21e6308c12bb7908c2257f1\",\"870b76dec1f99fdb37bb7057f90a9b8d914a33c825f2c909d660eb6c046f1058\",\"c0516410ee90fae59218e9d360a9c51a676278abfc081a5df2044ef96a45214a\",\"98902999abaa082a014ba49771c5fd940c5a4fa48fe9c7c4e8bf4cb880768a0c\",\"b96be39ce1238953d56da917ddc4ebcfdbe9da6c4d0b14a142cc3f5e5db5a5f6\",\"952c71b6ebe945a817125f27d1e6cdf08a6a0205628a8ad6c478e6cca8d1d061\",\"d333460a18628ba0731062d67fc6608c2ee746a095fd43bce3e3fb0aad372cc8\",\"4c02ef2a16f6d817b46074672532f5ea109fb0bfb78964a74f3e16503023022a\",\"7e80957db4514d150899b308b0472b51ce7b3dbd979f2b3e80681cb9067dac13\",\"be547387b59aace46900ba340cfcab6be6dd2c3bba78199eed12dba3fdcdb851\",\"377f7e127670fa431382a67fde7f3382809ae052842f544dec963204f1292cbe\",\"68eda916d93c63f30ef973780ce102ed432a4edb63421226cc53e814d7793a8e\",\"8f0ef8b4aefa8380fb7cea94f409d07ee006e22db132b71624e4b8eb4bbee2ec\",\"14d7d5dabbc1f8c727530cf3b0e54a8b4ea614ff06884bbeeb8df6e186d4ed96\",\"a0d87f754fd83528a945c7f9642554e782b17d13842bc18dde0aa0d0a62559b8\",\"f0ec5f80930fbf3e3a0002464e7a67c340545129f48809f4bc555b630aec88d2\",\"25789e0140240239ec5fc22d5ffef092e71fd9274252afcf9f1ca4fdbd84353c\",\"88e14e4fad731fce4cc555049785751afc2536df4d9a43057fe21b0a93c75315\",\"5dc277d9d532448fdedcba071ffa9859de01ee37330fe6f34767a229bfa8ba8b\",\"b9abaa7020c9d349fa36c0836123fb4b7e7a9efa608c09f3156ea460c6e31f62\",\"9a93d927584877fe053cb9d1e12dea4d52bf454b2dae53f031777859ed4ea345\",\"029dc7fafdb936c0e5d1dca09b3236a7780ec0bad7cd9c140bd2c26a3580aeaf\",\"8088797179c260555148ca914a93b2c60a171672c869c7638491977a863ade7b\",\"161751e5e96b21e38fd85c73421ccca163fe78d72e8b92c95310f59d8a805813\",\"32860d4d1e609edf21dee3559f4fed5491ce78897f039098f5717d7379c0ef17\",\"062a8c2851297f4e0db8e08b371362ceb1f0289336062359f0a99bb78ddc1b5a\",\"9bdbc9fb4c399c2aeddc040ad4a0f1b417a32f37741fe83acd2989abe309c3aa\",\"3e4d3b025b8f7a7800fac7bd1b53f9555ceae45aeeac9a86583073c7f08a4aa9\",\"7366a9e548b4bc1b2eeaf0075977fc860af3f64a3dea5f72039067e96b81b175\",\"1195ea5c3f07d46fe2e53c405c52cb99dd3c378e5d48b3a584aaeaf72cf1b4a8\",\"25c6507d04793c98a23c42693a3572a00ed88fac9b9d717d0c9f0b24daba8cb2\",\"8c18ad12dbb37698ec42af316227451d569ca862c9da0c8ea1aaf653d8649d9a\",\"760e4aca8846c84c9c5c632579e2fdee0933615de62aeede2d18486af9338a34\",\"22de9082557ece679b4db48b8d1d777308ee60e0aa51ba9c8c45ce2015a19e19\",\"fe98361e260a0c4625e98db2bbcd09bfc5eb3508fa1be24b4f6e3328fe8d1e8a\",\"06de423df78f7fd8c4059c0d8ee0a4281d6db2fc889178e73c26966c92581f94\",\"42f0ae23141911b60b3ca60b007e17c50f1a8684256d33f757c8bf3efa488006\",\"3e5cd4d1683e0f1398f1f528da4a4b41a0577f2551d17ced405d2a35fc4d7f5d\",\"563ee90b94c0e391047d2460dd8674b3b361043ec217026c49f9079932d4f372\",\"1668e574e0f100f47df1c2ab07404b2a14c40c369495e17a484cc0dd166d7721\",\"984c2c45ce56f89736e2c63317eb35249ebbc039c426246012c1f7f9442cc581\",\"8c0e65a1ea3d4e8749de30eb6373f7ea056c7dfc3e4b1d77232333f1d50d91c4\",\"c65ec44bb248c4c84e97c699cbb09f4c29713970dd7d8d616c9e191a812ded70\",\"0abc096d1aa5258ea8e61e727ce3d33007337134cbbfc48468fd72a446640a86\",\"07482d2ac1fce6b85dfa8553337b6ae78225d3cb068385a9e31d6a2dededffe5\",\"bd88e02b68aaf02027ff440759de0c0dbff5be27b5ad8f4fff6243512fcdab87\",\"069e7049490eb4221c90aebbfdfe578b1b9d27cbc67ac9c078a95effb18330fb\",\"5c30249487ab8a0645ae35a8b6eaa387a15769f5727892bb16928a38735f6058\",\"693e8530869a97e184d59c6ee21c0ac3b5d0a08c82bfb02e36d72a0f1c54ad44\",\"a46682ce58c64147b1d8148e8c97648e443820e17ed181e8d512713208bb1d17\",\"184140ff8aa07a2ac5ef6343ec5644b5f2b0c57dc1125cafa4a53bf4b5de72bb\",\"2a175dc3217754ddf810114be144d488ce5a67fe21e93d1ff5f715b89414dd95\",\"722984a2a72ebeb58f28ba6eb879c72ce29508c32647209328a7ee7c0adacdb2\",\"44d776a55ff2c1992f954190e93c7f377a4b4db0f9ccc51ef1d09a88571554fb\",\"a415a2f139d5836a8be9d04a4a1badd0241bb0571c29b8d9f8d0561c0f1f7898\",\"88c5d62fffdbc599378fb8519b7aca46774776f6bf5768b1014b7a4d7715e1ed\",\"c6c43f7a2bca90f3e94ef4625bd48477a924624c8f17a4878060f6d912d84dd1\",\"b1b3505f36c9562ac30d29cd101e6d4f94b810abbbf471c1309519a4eb9fd9b0\",\"2957eed3e704c3a9cf65c1b4fedc0beb1626b5c9efa719f81f39675d5fae6c80\",\"b264d7b5e947d6dd9a48ad349e3d5dd7f354441e9ac046330cb309fb94eb62c8\",\"3b6efc9b3642b3a68dbf9a5857cd342f281d4600192803eef028a86f3badbca5\",\"c9a3fe5063936cc685fb3a53d3237a200debcf4d92ae25d46ebc5c6ada837d6a\",\"4c26341c2878e201cad31bad6d3b380a11fc9c1e20d2b6f60655d34892c9d57e\",\"186eddf72ed79b9081c5b8b4dbe64f08027dba19223c264295e27e804a9a2679\",\"6cce50fbdcc1299f80074f3a9a0f92079205026aab5213d811bcbff4928eea37\",\"c30b9855eb5d926c1a5b5febcc9eb34f87568f3f791b8529c49fcc178a98ae84\",\"711184255c2ceb868fa8f3cc86dc56b4e790c997ccda51de096ae77f100ecdcf\",\"1762080dda92f7dc58bdae0345ca9e940b1296b4e35fb8899cd591c12336a845\",\"50348d8426021c0d8b8f3b6640b089e488229714e11a4f428f70d7579ea614d3\",\"b27033fb1e73268612fcb81f0befa18c3fec496719cbe8dcac5c6139ba5f0d39\",\"af67af3c647a78311f2f6fc0509b77012aee27f03859e205a9ec409172268519\",\"fbaabb5c9f4f4ff706f075c60ecb64c5cd38d6d726abae3228ca76242b3efe54\",\"10c7807ffc77707bd16415a03ae2896eb09510178824abaa9a053faa531c7af9\",\"aab2c4f7b5b8491da177b8cd50fee763ca093c7f8f4d0bef3cbf4a3b85d8d8af\",\"2f183e723d46c40822fbbe4cfb6a86812d37beb085d9e0b051bedb8d24f5abec\",\"7270d303e58506d7199f9ebf1895fc46d0d0f1111caccb3bda8452974950817a\",\"e48a2be73401a9daf8e560e2d38702fbefe647dbf08d96c0b532f0d6cb92d7fc\",\"3b3f41f7ded78c4f2e18f5decc80f311e23dc9456b9cb387f618925c94c910fd\",\"d41cfbc62295217d85a75c17b8860a6ad2e9b8871a6502b5980932a855792191\",\"8328a2ab8d4d22f8a098c8fa5a113a4a77c708c7d2c8fd358dd0cf0633b1edad\",\"79781dd4afa7f34bc5d44341e47867c297e1b70614377a3e080f2a038a835691\",\"406aa2cce2cab9a606a1eb0675c7b6987c45e748b9f08d6627855cce91987c1e\",\"d07571f366db3c7769e74b2c52a11446f6e52107327beccf367d7b00a243df07\",\"23bff6715c450f2af6f56a42862ac5006eb6037fbee549c5820ddaf2afca7e5d\",\"fb74c39476d08a0aa60a9721d7a6e40bf5b1ba99470249a65bf2ba07e82fe809\",\"f4901d0a7a50086aa09b11854a2b29402f04a317b4f14a39c2de0a8462e3b3df\",\"9a12b54576598e4e4d95c8ea6613089e572230642cf8e58c8cb018114ef9c78c\",\"228538dfb91f2e44d9251fb35e6e27943aca9ea712c423f9da7d0676b652a5c5\",\"11adb79f9ce23a0eb315e802d1b84565074fc4baa345e7fdcc2c6091b0f24782\",\"7e41da5dca99a5746add768e347589b535cd3f381088253f6254e6e84b7b34cd\",\"f91ad18de278c2dcdde608474b127cc3ced0dd97a4feea3b8cc6ddb3520c9da2\",\"07e6062efafcc626a1b00e40cdf631eb4e1a18ae8494db53f41eb19a9ac663b0\",\"e889d04a1de5f9edb637bc37a7c6b8366cb6b921c858fd006c15f686a8c82bb1\",\"5b0298526c97f6412d1c093051b04405ed5c95455ca7f05889492df6aa48741f\",\"43074412a082ed8cbc621a407e891701a69aa39d00c4c9ec2c46cfaff01f4cf4\",\"27602fc32e9a804bb75be9dc67d3e052f11c63118fbb2fe836eeeea7864cd036\",\"7f8a842de1116cfde8fa14f3fc9a1318a674f114b386b3bbe7c31cf538fce99f\",\"a0c57d52f0c53487342cb7f99e8a5249741ec952cffa93204629063921bb25f5\",\"04ef35699d713641228c839f4763ededcd6f368ee90cc427c97e091751bd80e6\",\"c5eb47ec5ab9248903a905f9524dd2fe72a0a320c5f04a9f76d9a1b02c021a78\",\"0ceef066efa3664fef7d98420daf339967cd37b5aadb72d7bb701bc92a6c5de7\",\"4a70cc290607cf1b3d358f96c1ed1f83ae1b097070f89c914e001cf732b1c3fa\",\"8a0d0c124c6b77e937b959350ba3008534677762397baf8d68ab1dacdf79be67\",\"ee99ffd05dbd5eca72251546c0bb2f887eff6c7f32ea79d28901d830d437cb6d\",\"c0a95d7c4f4c226e84799ded59e93d48063c799367d7154a0538e80aff69691f\",\"196bfdf96535bbbadea6130366852ff825461f954272eb5313afbdd604201d10\",\"ec444b55c26445082a439676608cf269a2d9babfbabc7e4166d2ee89bdefe061\",\"4960a19eed992dfb402d0d3efa899fc66515c54a20bf08bec7fbf5bba299eb95\",\"45252e4d10a0371ccccb48dcdd7c42c697fe7bf232ebb2d462af8a4f85474420\",\"b4d90ddcc8d2fb30ea4889e5319cd9026c7cefc0a4338e63c117dcb16ae59603\",\"c6a87c513eebc4a47a9e529a9564fd7d263de44cc7fe2e6a061aafb09a6906a5\",\"686bb67995439a03476936970fef95089c565bdb6741664588fd58478b7860f3\",\"4e2310ee5f5d95ea17878f558406e24d10e6234a614fd960bbcddcb2ccd25dd4\",\"bd1182f6b676c13dfc0ab28097dc43eac43554006854ab785b20b4a6bb307b73\",\"bf47c654ee6329bdb1e07dbc783e959d10e431775861c9a5ebed0e3e51f05906\",\"adec36c9c7f979aa638bb6c4f43a7b3f7641c14dc67e72508abac0a6a4dfe00f\",\"269f4eec875a22bcb89e45e232004ce518b074b18ab8f76e27deff263411cbad\",\"a50fb39d7c2ad9fe0ba2f9b9ab0e3593d49d1ff00120bc30cf8c568d5bf56378\",\"10363caaf2906b084a1a9e84a520f32b6b213e59d9378e26a800fad37cff1158\",\"7cb7c0eb5d8d44ed0aa7aea5220477df3b55dd1b00031d1eac7a29125d28f02b\",\"336e8a364b6097e00bc83c383cfd63f1b71035df9412d4172597cdea7cedddb4\",\"001d936bd9b95b06b24b30a392cf2fb5e81a3a3a0fe1076fb745048d5f1ba058\",\"269d8eb9e601f8066ce1e5b2a9311d8a8feec2a9cd6710438d2b8f8a4765b1f0\",\"57a6db882f35aa0e820794629b3fd74c0978cb5100e2788dfe3b13714162614b\",\"b46555fdfc9b6c9d0c54b9cb6f607568777deafa3a02249a5f0c0dd48530e719\",\"febfd1f5863f355dd076044821423449e8e0be933b66f0dafb8b67338b5c40fb\",\"1f5edb6695d9b1feba673eab5696c2a21bd2de986578581a1f343ef2ca49f1de\",\"11e43c69873fea132eca999547b27aae50b47d324239f1c849b696d614f63e02\",\"0a5549f4be30076cdb18bf613f0f24d0ec8af2a738d6cddf93e4b57082d6f6cd\",\"ed5b829a927f8f325f0af6ad504f4b442805513de50e1980608ab7f35e494d23\",\"84810d3a0bf0eafd7f91bb7455e18ccea60b40211eb8701ff4fcf20dd1541942\",\"fe878d70a60de31be9d3004beaa33a6700af147c52c27620988181d6bee9dc8b\",\"1f73b5815f98d4c13d1b35e8a1e5b7a6d318cf2e6d09985908e8601fabdf44da\",\"4817098d73b29c2462880be2d4611613fde9bf3fac2921511adcf48a323d6269\",\"251c7f15793d64a94df08be7a849a55f0fa907cca54f3dc5a94f20bf5aaf298d\",\"4d747c67f86a6fcc9fc88fcf16e2115e9994f994eef6cd7dc351062a6a3d5b68\",\"23acf21a53a2b6f6cf379645085cff65bfe3e37df96fa86d351f73138efae6fa\",\"7de76c8281dbdc5a64464ea94dc109e7672625e92d1b9a149b5cfdb729997a79\",\"4d4368cdf18b874b85ea218d9dcaf5762d38f2e9e0ebaec6c852ac2500deca2b\",\"77ddce777cbceaa4cfdf82a198c56c13fd4760481400091e776e8a7fe3d6d24b\",\"884ed1480e1b80bd16d3bfb06419fcee47f762ae4c0a387217ebafd740186ef0\",\"9d756fb491a10fc6ffde2f63ff5055d489eb318873d5cd0dcb6ae5ae5674b3b4\",\"8dc7fc3250622998ae247b3805eb84179feb77dc050584da27a742c708bf759f\",\"b3c1d8411855fff7ebdf1ee297d39556550870e38886208539b240c19846019b\",\"f782b9ecaf6115a77bcd54b73b8cf249e0cdc1d5de9f542f2a6e30543e54696c\",\"f68f44fbb2f6a71df93133cf632681b9247f2cafa44a9ebd931c61de11c15079\",\"d3c555f6b9959ec1bc638f318846621ba64cd84557694f6740435d99f90811a8\",\"b687382ed1311baaad82caa80a5223fad1675ebc61e3d6b672cfab4f0a6e46c7\",\"892d66da6fcbed2a08c02017efeb0ae59f7622542d74357f43d461d34f666b51\",\"2e78aa91ed5db8e3b470335a7972fcbf018492bcd09364e37e0521be02413f1f\",\"a8c19996a0c2c16e2c212325e4869760d682cde5d43c4eda8beb666e85fb5454\",\"49f98a9ce9d5e4c3931361bec7005aaa705a1eb59d453b866f4a7d1a3be26df5\",\"2612553a2c4db66817390763a581ff6d814479a9825faca926c491212a79e20a\",\"08029f1e995889c9c7c76752432789f4f5bad7b73032a41e9edf2a2c0b8b9807\",\"2a9d75fd7f48a96be8fd30e5c5191198d2723ffaf95664ed6ead2387bbbcd21a\",\"66909a69b80221c8cdd6439121e7381dbf1b3bdf423329ec8ef3f8ace70229f8\",\"3b4c9225947027411dcd75f222dc23898748db8673627dab8266890dbfd0cbd3\",\"0c444c3e6f5fcf3bb765726d9684f395429318ace42bfe7f22f49cde96e9d920\",\"b2226ff35d689ff1280f117bd550de3b182ed01c6c81af12856234514991af13\",\"0008e0182ac8f8f389215489ef27d09ed9878fafc1c196efd9690cb95432f364\",\"a8bc33ede8b14f32d18deb9e3a826d92dff5a40672afa4d4df064a4a8230abb5\",\"54df89570ccb5cc40ca66cb8a4fcb7877916f99928bf8f04a05e74410c5e98cc\",\"5d6647b525d6316f0ccf2bda446966770447eea394c05ff77330b253c9a0473e\",\"dea13d5e74f3b5dace5896504dd9d3ba4cd3de9ffef7d8744503a81df1390be6\",\"c925672834f5e19bb6390ef861c62aca2ee578bf801ea441efe13a6a5823c54a\",\"7a3857e2a3e64c6c0b13ad280110d4ebc45a7019ce7a43ba9909b35bb64eb37f\",\"eba3ddb88961fb9526770b59f0be39cd9b20cf5fda506117f43c5688b1a9bac9\",\"a154244e35c1dd220e324def70c3bc3585fd789da9420ae7b20f805057c584e6\",\"b354f5bc9d7c194f4dc8ea09920c3cb79f396d1e4675e0a259afbf3e456b39fe\",\"a2eea338a1207b1f4b45b558e349a664556f60b5602d8ad084b3e36cd9968411\",\"cdfeab0046c816c0baf240c9990be89a83a29e68962f369a75504480fe1fb0ae\",\"84770518e8406740c5774517dce7044a207597025f337560d2505686b16ee2b9\",\"c40a83ed8912e40448790c9061472646de54e375d8f3532769bea20be117591f\",\"f8f80c17beec8bd6ec4060db485cbaa47857f2aed699a9c24a63fc5b1c9a5d69\",\"ec1402ce882c029880cbe9326b28e9025d3003eac345f97adc7b154de41c9c11\",\"a6066e18e3a0da1e4b3980ec5dc3205af144d9117dfa59f7b236dcb37e7ba116\",\"d1bdeefd9c24e8798744017a47f3f6894fe6734dd286e395df67577213d3093c\",\"704e370d450c00c6e575d3575a035afb06946ce6bc79dd0b59360b5dfb517ed7\",\"6c17e1baa7e5e6dd9a285fb17f969a4f231262830ebd5a6c75faabf8e557d0ed\",\"ea6252165fdf4741db7bdb52c280144320cb5e0260376ee8f34714c5158887b9\",\"5c5ecbb47a99cc649f5ea9f28a3c06a04e2755e44211781007ee41360e31a0a4\",\"6448828ebed74e4cafb5a94866cbe43310621f397be97c4315ca6725d8ace1ae\",\"2e594b1dd4eabc8bbf5cf5fe7b94c987b36ee76805508e5a1d2c316ddd1614f1\",\"4f3775fa3eed99e0588e13c4826dfa0ae8fcd90a804c01af8037c5671191900e\",\"8b7d36365a85bd6a57c4d7f0f2fc39c9c83732373afabcf736ac0037eaa63160\",\"c0c6e997f9a5361c94d45d04fdacc2e24ea9ddb6035633132bc949242236cef5\",\"93b82671d84cb9599f8501581860929a8f53952733505c2d91022b923f19df1b\",\"63b2112232f2672e4366779f213ad939b16483dee14c3b785900967dfb79cdaf\",\"526aeaaa36a2ad9e10f6b593713a0e1fd2204970ec7f3987639ff025e095827c\",\"829a2107acdd3b5bd48bac79def9305ffb96bfe9293939488a2c4e11e2a0553d\",\"6cfb179d72b9e849ab996ca815de69e8c87198192373b6eb21ba878a23245005\",\"1ffce7ab2ab6d65f5f085800a46ba8ef7e4baf29ef0a63d699de99965dcbc8b7\",\"eadc6f937ab3a7a496e46ec7c07efbbbdc0daff0fc085ebda37f6db169590783\",\"c4d9d954d80b86641a8b23a081f94a4937b32de38c4f66b74eaef8e02283f3fd\",\"bfaa6a1d42796b92e1f4231cd77dc1ff9423f0b8e802f7279382558be5d427e6\",\"7b63ccd41ab4b2dfac21572d03325ccfd5e8dac4c9e87d41d7b63d1fda8081a2\",\"991d9cff432a3edacd4b5b3062d8b4a6866d4cc09f9eed2f1d7dedea53d9e049\",\"8ad6b0bce92798998f2bde8518c6fe71493146969fcde379dcae4454ac3ec5f9\",\"21abf8343f5f94184ff01cf9580b20aa8c211e45a40474d087720bcc9192ad23\",\"13d109532af5241f9f343fa77a46e04bc15528e54d4559c2975f227c2d223686\",\"e4b6c68f54e621e46fbd15ae7c2d5f83007972234d9bb3f55fd8554732c5b829\",\"0f29740915e8c301f9dc5ace8bb02a69157a8dce891fa43446f5cdae17af168a\",\"478728b706381fb19ef91fa90842c8c53ae657aa91fae3b795e157bb49838040\",\"64d69a29e214056cba90f09467058fc1f8e8a2b858b24c907ef38f97f6d4a30f\",\"56b427e7f06f8ed8ea01b384c0e1d1c53ab3630f3905396db51d6208da1edc9e\",\"e0348c828a4181d9610ecea00f003c462e5b7000b90dba1d7bc59e487135f476\",\"ad9aba2c84406fe2b2b082c0f3e1e191d1de41bf261a3707081b2017b3e1b587\",\"1a2640f142fa756a05b7b3ee4ea54cc85031bf7d3441b86d4e41413cb0936634\",\"27c5c18b9ea8793b4d2a5dc911cb731d929c74366bdf5977bd5548f41a19fbae\",\"87c4acc7c46e0cfdd2442c211660e2817a06648d1d4211f5aa82d94b328e0cb4\",\"91bbf3dbe790ac234763ce1d28c3c269f7b34d4e6f0ced765aa0450ce742797a\",\"00499461136da89b69bb8f252ef3e13ed57fa99a009e68553d534dc6a0cff322\",\"88851bdcc1bb3e9728a3d9addf4509429bf0f2e279194871ab322598c1eef331\",\"80ce03bd6fd99402b5b5982b7fec23dc22fb48e78b4c07547e5ea4c9e28ee695\",\"7eb8c857dc111decf4fd0ae6276846c771401be9384808d80133827155811abf\",\"ba13a6770ee2cb88c8050f97469c022fe9d502fd91703667972ae2e168e8e373\",\"0570b083fdb91b62029f18b94b438a2c55d18a849f53aa332083296824ae0a86\",\"82fd6fdcc09627414faad2b9c24500ed8ddeb284b6727e4faa5a666d06282369\",\"18f5cab07cb6ce1e0e84fadf1d8a529a66eaa7dda6061a75e51881b6121b3051\",\"9fdbf640c879c57bf9cfd389b3a0649762c4cb4093b9cccd6ffc5fa06f8a28de\",\"07a78d55fc17a2809e031116e71ac63faa6c2ea9e29480b4fa59031683b506b8\",\"a32697f1796b7b87d953637ac827e11b84c6b0f9237cff793f329f877af50aea\"]}\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'{\"chain\":\"main\",\"blocks\":722995,\"headers\":661647,\"bestblockhash\":\"00000000000000000a7d1f0b96df231a9b79c7536f6bd0658ed834db598353be\",\"difficulty\":82596369441.63945,\"mediantime\":1642613455,\"verificationprogress\":0.9999990293700609,\"pruned\":false,\"chainwork\":\"000000000000000000000000000000000000000001343a280db888b98011f77e\"}\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'[{\"height\":352701,\"tx_pos\":0,\"tx_hash\":\"2c63ac6d71e696dea43ef1ef7fba8c376a6a220383e73a17ba6c3795996db112\",\"value\":10000},{\"height\":474237,\"tx_pos\":0,\"tx_hash\":\"62104aa084f4a158cb9aa545ee30d68db88bb22d4a66904b78d41e4512c1969a\",\"value\":100000}]\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'[{\"txid\":\"62104aa084f4a158cb9aa545ee30d68db88bb22d4a66904b78d41e4512c1969a\",\"vout\":0,\"value\":\"100000\",\"height\":474237,\"confirmations\":248759,\"scriptPubKey\":\"76a91446af3fb481837fadbb421727f9959c2d32a3682988ac\"},{\"txid\":\"2c63ac6d71e696dea43ef1ef7fba8c376a6a220383e73a17ba6c3795996db112\",\"vout\":0,\"value\":\"10000\",\"height\":352701,\"confirmations\":370295,\"scriptPubKey\":\"76a91446af3fb481837fadbb421727f9959c2d32a3682988ac\"}]\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'{\"confirmed\":552461906422,\"unconfirmed\":0}\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'[{\"tx_hash\":\"2816834ee88fc1c5d2f36f27d8cc4f53b2fb0cc9d72dd5562c8f1dee8aa902ce\",\"height\":81012},{\"tx_hash\":\"609732aada2b42ca6c706db2973f42efb5241c587ab8158a9c4d8822e2386c97\",\"height\":81013},{\"tx_hash\":\"847b3b3c29e3b59cb2b798acbcc091c222ad17c3e984bfab89785039f5d5f088\",\"height\":81015},{\"tx_hash\":\"2d8fda602a4fc611fe63fe1a4a1ebbae4b36b4ce6167bbbe43365f208e5a9199\",\"height\":81017},{\"tx_hash\":\"61211d10c17fd44d40262f33a741c1e53d7c504f569fb4323909c57b7c9d6d84\",\"height\":81018},{\"tx_hash\":\"bd474f24754c25a388972fa51a5bf6f65131413bbcee5e9a3fa61827b9d27191\",\"height\":81021},{\"tx_hash\":\"6c4faf799121ab49837f82797e4a31b515e469416cb1725abfa098c9a470e2a9\",\"height\":81022},{\"tx_hash\":\"793b96262b397fadb4b391e57fca295ad5f14961cfa466965b32a58342792e33\",\"height\":81023},{\"tx_hash\":\"5286e339f1db9706c074fa9562c2d9e77e61e872b4f70d132b2a7a3d742e3583\",\"height\":81025},{\"tx_hash\":\"ef4daf92f7aa39500755abc41b6c904af891e77b038e852af6d69087880eb31e\",\"height\":81026},{\"tx_hash\":\"84792f135b293cf4056ec8fbc2ff9e10aaed8468fe0c8fd5ec8861d886011501\",\"height\":81027},{\"tx_hash\":\"73a6d2b56bba58dabb86fb6be5358c52be178028b7dc592110a44f2a20b3eaea\",\"height\":81028},{\"tx_hash\":\"b5e6cb0cd17526a394343b1a2007e199d6d9ed0e3b37612abd8ed52b36a6fb23\",\"height\":81029},{\"tx_hash\":\"66945be17108a0b7d55cc6e8f2423a26bac927e683e524a3144dcab419290f79\",\"height\":81032},{\"tx_hash\":\"a5ad19606ef9e538cc172aeb27219d1e492c84edf8426ef0469ac4a5961a34cb\",\"height\":81033},{\"tx_hash\":\"cb271059b186c7e21e721af4edf9668378d46ce45ff75e663409ce781826ff98\",\"height\":81034},{\"tx_hash\":\"91fe844b16647904bb079c11016c225bfb53d19d3dd23d6d89ba16c3935aecdf\",\"height\":81038},{\"tx_hash\":\"d593fd84799eb024eb57d51eaf9a72a75e95cdd1084ea452946c78ca39acb875\",\"height\":81039},{\"tx_hash\":\"b12f039096a1db0456a8908e313c7fe0102f5232811624f06786fc4bc304bebf\",\"height\":81041},{\"tx_hash\":\"5257a2ac4a332586c836dd40fc97a4cc3376b18409935cf9640a981fd35e8b90\",\"height\":81047},{\"tx_hash\":\"c318ebdbbd6c4cb2e859fe5acda0f829d977f87306dafdd4f1b89b2de1f1a278\",\"height\":81050},{\"tx_hash\":\"e321f4fddb107a3f853294e0ca14888c150e42470f069c8fb450d6d5ccf07bf8\",\"height\":81052},{\"tx_hash\":\"86834ebd73e7a79cc9549e775cf3691660d0578cfc498e8f901eb75bddf92c11\",\"height\":81053},{\"tx_hash\":\"297ca4943d35c9a82c0cf236993bd1f91e4edd6164e008373d80112c62ce325b\",\"height\":81056},{\"tx_hash\":\"d7165979b231fb146a7d4f71f02cc528ef8e2dbc1936c50758e28d2988b711f9\",\"height\":81057},{\"tx_hash\":\"6bdc9e53acf4a5d689074bbbe2b72708ed18161ce5b55c99db96edcbc0a27fa8\",\"height\":81059},{\"tx_hash\":\"3368a69ebbecd9647a51ac753a18db8119da8320343d4acf06b357c9838c6e13\",\"height\":81060},{\"tx_hash\":\"0eda34fae6c9ac181f06ae2e0567728e0e680387f79e2cbaf3016e6f5cced091\",\"height\":81064},{\"tx_hash\":\"b78cdad220d7b76c36e08a036ea5014859e4d35f5a136604f6e34b5a8a902945\",\"height\":81065},{\"tx_hash\":\"3e11645b71f527c5c95abbc7590c8d71f5f85f3e7d2af0afb4ce2c1ffce8751a\",\"height\":81066},{\"tx_hash\":\"62ac4d55f4ea4555eefe97cedd1496876a77e985f5356e42bcf475fb99a5b880\",\"height\":81067},{\"tx_hash\":\"36f37668b5ce0c89ac18dcca96dbb291ca60e200b992d3cd3744dfb6c948d6f7\",\"height\":81068},{\"tx_hash\":\"3d2b2fdd972b36a590e0dff3a8a3cc14d1f5227fd385a311d6477449cfd8593b\",\"height\":81069},{\"tx_hash\":\"4cd9b6a5ec78a0b7c856a040c973cd89c7576b82c523db2497445fef448232f3\",\"height\":81070},{\"tx_hash\":\"b6a4e32b3a9663b1095409037ec1c0fffa4bcafec1053444ae63663d3741b3f3\",\"height\":81071},{\"tx_hash\":\"37a1058daac4a91136f670882cf1646bfed1c28d5b955ef0bb28008f0e2e9d12\",\"height\":81072},{\"tx_hash\":\"2669d2a9078781811260df12ac8c69f8f10940d1b4e7b43016141ebaa5fcd3b4\",\"height\":81073},{\"tx_hash\":\"1411f62d1f0a6b0682e12a4fe71c22c0b817f350ce8d62f3a82b3dccdfb28578\",\"height\":81074},{\"tx_hash\":\"56c33ee4e6d346f08a5dc15d24e20f18a5c9afe1274be6ac68dad87de589ad09\",\"height\":81076},{\"tx_hash\":\"4836ea18a4453916cd020f3bd6e4fccfe149fe5bfe667b7ff606dfcdeef780b4\",\"height\":81077},{\"tx_hash\":\"096540da2eebd75e2366953afa9b28a8e152c55e5a998489f638d8db897be7f0\",\"height\":81078},{\"tx_hash\":\"8e4e6c6c2002b971168ed02513f4e8cde18862cfbc2b2671914be9b9a57f5394\",\"height\":81079},{\"tx_hash\":\"b37654ec77b8d07fb36267da7d00ea803e69d4ae9ef7542ad370f5077132b240\",\"height\":81080},{\"tx_hash\":\"a269248e9414ab1919956137807b12540967444cbace0c984a5db05180e3b280\",\"height\":81081},{\"tx_hash\":\"440e2112cceda1e7905d414fd43771f0df84aa13790c1d72107133a944f36fb7\",\"height\":81082},{\"tx_hash\":\"af4c10e0c95790744b8acc4cd3b44028236768f7d2fba97c7e59c139b62f56d2\",\"height\":81085},{\"tx_hash\":\"8171af99e86f3ec5ea7443bccefbd73d2e382f46896893d8041a391b48a5dc9c\",\"height\":81086},{\"tx_hash\":\"30e9baea243c0a50c3d8319590613b206d0b5b57da40a8ce7a86bf8539b1a77d\",\"height\":81087},{\"tx_hash\":\"670bfc59e56a6245754e472b4bbdecd726bb590e760f164a904650dd13515db6\",\"height\":81088},{\"tx_hash\":\"c11877520e0da3607fce62dd6c8f7801e0d367589d74e69f55c6c49cdf3e1f10\",\"height\":81089},{\"tx_hash\":\"db5cdd1442b5dba68056c1310323f48ecf9b5870d63671ac2583c3bc46b8ff06\",\"height\":81090},{\"tx_hash\":\"22482c5aa44d0c535d2a259123568cd865ee31158b83c3a4eac1dbc737edb13e\",\"height\":81091},{\"tx_hash\":\"7a8124547d1f981c724800841245c3be6c7fb70ee00649c4827c2171209d8a37\",\"height\":81092},{\"tx_hash\":\"6950ade214487c96350b5ebece962d1f838e4382790e8ad5c0ab1a7cc601ba41\",\"height\":81093},{\"tx_hash\":\"29d7f7b9b05b13af08323a1e4bdcdb2b22717c73bc3423545c9d68e763594b7e\",\"height\":81094},{\"tx_hash\":\"0c48b81bc1389f6d546a7d6162f935fbb21f353148f5a9c0fb0cd1f3f505b6f9\",\"height\":81095},{\"tx_hash\":\"6bd49ee46dd82c244d61f82729dd92a70dcd8894f7b42982f6f2c8ec108c4cfe\",\"height\":81096},{\"tx_hash\":\"5907abdb3b6c1e108403575ba71d0957c365994280ea7937c75027fd647e9572\",\"height\":81097},{\"tx_hash\":\"675a88d8f68d28ea0047eda8dd967bde1a16685520ee38f762c5c2c9e96a8f13\",\"height\":81098},{\"tx_hash\":\"16f2eddfca314c74a0243e643c0ffb9fb53fed185f82400f704d55ba3a484cfe\",\"height\":81099},{\"tx_hash\":\"1ba9269ba1885f5b77cada8d40790c94c4264dea2a03618db4c1a58e6bb38798\",\"height\":81100},{\"tx_hash\":\"2955a4b042cb2c96423b5d6603a268b87ba27485d36fe36bcdbd3729a49d4b71\",\"height\":81104},{\"tx_hash\":\"b489bc0e51ba3a7e82753996608a02ffc78fba692e4e903d73b7aa36665d04a2\",\"height\":81105},{\"tx_hash\":\"19a9f90d8ec564318828e16c92e9038b71e181fa2f975ef31fd4281f865769b4\",\"height\":81106},{\"tx_hash\":\"a8cdec1de97884de92d8451bb07223d34007221081584a46e68700465d4cb375\",\"height\":81107},{\"tx_hash\":\"a8d7d4242d5a6e3fdcc74651d17e6ca3dd6134393b40bef8e5fcad78d15e5132\",\"height\":81109},{\"tx_hash\":\"60aca792c9f2feb8398ce907b8d798ab05b0b7c2fdf372cec18c5e0a85acb731\",\"height\":81110},{\"tx_hash\":\"36a711ab10d25f262b7e946aeed6e14142e1b999d42efa910311952067ef0518\",\"height\":81112},{\"tx_hash\":\"86df7641385c2986d93a4476ad0b5ed19e8af79c096c866f45089f19843061fe\",\"height\":81114},{\"tx_hash\":\"b59dc130ab8178e6aed911a91333ac0abd3574e7d54abd36f4dfa30349cb05af\",\"height\":81115},{\"tx_hash\":\"17ce3bc58234d43711d80ad2df0c57091fc3a2e124dea9b9e0a797ed3a9393ac\",\"height\":81117},{\"tx_hash\":\"8b1f1baa93d29fb46f0c9ba0690d39b7c2d480679a8635d6d7cef12a87cbee02\",\"height\":81118},{\"tx_hash\":\"58f5505cbfa7c6e7d2d15fe65d558c890574c0d4fa567191d4357ad60f6dbfec\",\"height\":81121},{\"tx_hash\":\"0aa75ef831ce668e9c26467e761f2bca010dbab0f35f0bd2bab7039557c93a6a\",\"height\":81124},{\"tx_hash\":\"c38385613855414eefefd0384e1141ef9084fa24d630b57f3939f89e02a06698\",\"height\":81125},{\"tx_hash\":\"e735e601b425fe122a45bf3cc3d9762be083275555ed665f51ab7f7096889eb8\",\"height\":81128},{\"tx_hash\":\"c39c3bcf275150ff3f60ab29f7ec6d0167a21695d722ef161c65a53a5336669b\",\"height\":81129},{\"tx_hash\":\"f738cd8928f8e838ff34f62d76609c79e8785d55a9d3a0e905615df18872c112\",\"height\":81131},{\"tx_hash\":\"39886afec55cd4193e6c6752ed93c2769e2497b44c01f0a40370fa6dbb400b48\",\"height\":81132},{\"tx_hash\":\"75cad0ea2b5ffe7b0ce0d6ef0d4a38ca20df66a95ac8d85deadecb4a0d761ba8\",\"height\":81134},{\"tx_hash\":\"cc27076c9ba8d6104e2846e6b35121f0640d9ec337083aeb9b0e4b27bb306dd6\",\"height\":81135},{\"tx_hash\":\"88c7b4c940bf45e24ffd3cf99a40594ca0278294f1c518f49f1422c63f41977b\",\"height\":81136},{\"tx_hash\":\"fbd13d8a090ed9040eccdd2384813d43937b6e4aeaf14cb11720f4f396992400\",\"height\":81137},{\"tx_hash\":\"7a69318e53cccff133cd10f3165ae01fbf72a705e2e0998e96b653170a07c44a\",\"height\":81138},{\"tx_hash\":\"4821fab81643f924041bb7fb9615a872bb71ba983bb98c41674de5699eac0761\",\"height\":81139},{\"tx_hash\":\"f71e1ffa179ae5be523934473c2bfb89e8844db47f33f89d05d2ff62ad8be8ee\",\"height\":81140},{\"tx_hash\":\"bbff530de9b4265f17ad47c48e0998fcb2bcf6e603b4f5f2ad8185ad98123a40\",\"height\":81141},{\"tx_hash\":\"10d52cb88430a370935a94f5a0a31cbc69007d0f94d61082b83703206e390457\",\"height\":81142},{\"tx_hash\":\"79677763b5cc8880ad04203c48661e889d02d2fc842c912a131b835e1a54f53a\",\"height\":81143},{\"tx_hash\":\"ed9731b4946bed9dd17704a1864de065ff6751a1ab8074059338df833f330518\",\"height\":81144},{\"tx_hash\":\"c4d87d63534197129cea41f1c4cb3eac0921ef2798dfaa1690e0469399694f40\",\"height\":81145},{\"tx_hash\":\"13680234ccdb0579362cd6a1727b7f72d9304014a69a6b64646b6cacf7d8fe71\",\"height\":81146},{\"tx_hash\":\"9630a1ebffe1d8d4f6c8c30e937bca3b94c32c5cd699712b39ff2731e31474e6\",\"height\":81147},{\"tx_hash\":\"425022ba0507ec0abc60298830e753605e7b6da7931cc3d34ed9174eeb5bbbbc\",\"height\":81148},{\"tx_hash\":\"2b8f2905dd667a82eb1cad1237d4b3bad17ee4e206bf9ad7be2cd13b6a7bd051\",\"height\":81149},{\"tx_hash\":\"f3d7695df020aff0421e6d790f160e24526b7fe05b99f51aaf23e3b876e0811c\",\"height\":81150},{\"tx_hash\":\"0bfa8bc0692c8a512d43afe7de02e25e092ec3a092b42aa7278677b4c68ffc31\",\"height\":81151},{\"tx_hash\":\"8540283bde661e496c751fee620a081b3f0206647293b50d8d4322b068174acc\",\"height\":81152},{\"tx_hash\":\"7a7590fbb320f1bd6837d0fe1f07e242194358794382ba0f543483558d580c6b\",\"height\":81153},{\"tx_hash\":\"576f62da6cd87b79880b02da082119c2e84c40a97da928deae513f050707e1ec\",\"height\":81154},{\"tx_hash\":\"2bd782e8adf784a3fbdc160d2ae054b34730784b37dcd86b11776422d6d6d152\",\"height\":81155},{\"tx_hash\":\"0834cdb1127b0f4fef46367ecdf926455c2492bfa19b39dc22f3c5a7627a1932\",\"height\":81156},{\"tx_hash\":\"e12f226065adc2265fcd94ccb2f1d55073329f48b4d05ade176411d3f8401221\",\"height\":81157},{\"tx_hash\":\"98e33762674981a02499d9c8869b13e19d3600da016e51b4d09dd11099a89273\",\"height\":81158},{\"tx_hash\":\"c14e5c25858d47f4187cdcf60ba57a525d7de5bd35deeac930d5ea10ad8369a8\",\"height\":81159},{\"tx_hash\":\"88d85e4a2192c118a8e66ade1a13366a82043d46b986c556a627d932a6137fdb\",\"height\":81160},{\"tx_hash\":\"379b5abe4aa7ab727ccb370c1fad21f5340564a5fbaf7f97802e493779c52eb8\",\"height\":81161},{\"tx_hash\":\"4f403376c1452dbf36a1978f5fd1d52b686db7e0d2f666d3b2b05a15bd1ba432\",\"height\":81162},{\"tx_hash\":\"98a25f662753685e7ae32f496bf9d1f4acc1666b5dd4e9906c8c0f685da0807b\",\"height\":81163},{\"tx_hash\":\"8bb0e9b4f54acdf4b595c3bfcb503d3399502658f3963e4e6185a9573f02ad3d\",\"height\":81164},{\"tx_hash\":\"09a41471ac6ed6afc7695676e4854c4e09c3f0a0e0a0d156a6639966432c5e5c\",\"height\":81165},{\"tx_hash\":\"7ae62fea963b74f07fca986c966fee71a55176f78129f0edc236f4c612b18203\",\"height\":81166},{\"tx_hash\":\"2a14cf150cbca7cdf407b720a922942938ecf920bae54cd89b42ddfda809e65f\",\"height\":81168},{\"tx_hash\":\"9069287ccb9cbd33633acbc4eea195357d8427f258b0bebc11a253918ac3ce88\",\"height\":81169},{\"tx_hash\":\"5fb75bc529706832eb861b20f6f91217ded7c910fb5937d88a87efe535a6b978\",\"height\":81170},{\"tx_hash\":\"77b4dc1cf7bd9e0e0fe23848dd69b49b19fc12cd0f6bf5b263b0d8e2abae7efa\",\"height\":81171},{\"tx_hash\":\"c4a9a9b16d919c5fed092bf92b2e7e2fdf7f17ac40874bb5bfd627d924881038\",\"height\":81172},{\"tx_hash\":\"b52d76976fee481b33098e3375eb35f6b6852175d3dd2fa6ef94c101c8dbd820\",\"height\":81173},{\"tx_hash\":\"f0c788025b04600d723b69d0c10129c49d64b75941850e646a6520d13311cf43\",\"height\":81174},{\"tx_hash\":\"4ba0c18f6ca3f574dca69a0f83b5b60c8bbbbc0d8a4b955cff6c09f7d8cc7f7d\",\"height\":81175},{\"tx_hash\":\"3f1c0817e70035dc4f90feee99df200643294e2ec0f22bb6f68f6e85886cdca9\",\"height\":81176},{\"tx_hash\":\"85e0533e2abcd4ac57add3eac5e2fef0bb4431cb3699fccc5f696715d2c95d0e\",\"height\":81177},{\"tx_hash\":\"6d687da47e86129a3badb5fb805a488172e25d6efffa5a0ea677c67acd07bef3\",\"height\":81178},{\"tx_hash\":\"fc670ec5ffd16164b32543e37d985289ef558de6cda29aae46ce9c64b3eaf251\",\"height\":81179},{\"tx_hash\":\"f4bdfacfca13412fc8353bfbe509abdfa65726cc0e5ae5371e059a004e828870\",\"height\":81180},{\"tx_hash\":\"6f9b79eddcdd70a3e6e8fa9adc9f6584a45da91a4de000ad99aac5f104f2d314\",\"height\":81181},{\"tx_hash\":\"7d130d65247b2aabaef2c23365355cd7766f3d69490e085e835c12b7917a2ef1\",\"height\":81182},{\"tx_hash\":\"85948746e916f55cabe5425e3520bc6f8e2ed1d671fdeff207cc6f67ee50a9e2\",\"height\":81183},{\"tx_hash\":\"713c121440b9602168108f593841bb2ba31aa2bf453f28d77bdaef5b3274f0d0\",\"height\":81184},{\"tx_hash\":\"8b13a84501cb67bfc8c0815b7e1ad32677d53aaa51d48723632cc8a9e1c63637\",\"height\":81185},{\"tx_hash\":\"db89d7c831589c67ddda87ff5f5ffaf017f42e0fd4e4ef25766b4a372e99b963\",\"height\":81186},{\"tx_hash\":\"4eaea6e6af5548066a782fa35ef12a47cbe6c280542bdc75efa732e3bec3435c\",\"height\":81187},{\"tx_hash\":\"7dde5b9f6cc8525c66cb884b82b2ac3935acf4bd04348d11cac796276b305bf5\",\"height\":81188},{\"tx_hash\":\"4234f86886f50cc18b776ea46ff8f0117079ece90e8d52db75a942cb4ec93bd2\",\"height\":81189},{\"tx_hash\":\"4a78406bedc346257226364602c2603667518bd567b6546adaa05684333f795a\",\"height\":81190},{\"tx_hash\":\"521d04e36df20cc790e7db086e84f263bc02eec5f400d913abadd27bf263a8d5\",\"height\":81192},{\"tx_hash\":\"42526ebe256cce06d0b902babecf6809a2d7c1cfcf457db1803ea231fb583b8e\",'"}, {"func_args": {}, "return_value": "b'\"height\":81193},{\"tx_hash\":\"57d65ce5320dc617e65df7a18007ebe4e89fb7658ad6ff7f93e554480563eaf2\",\"height\":81194},{\"tx_hash\":\"290e8fa5e3178f266abb1044325a93dede7e26ec99779cf340770cc715c34892\",\"height\":81195},{\"tx_hash\":\"12eaf069901abc39cfcafd6283ab1f27834915162a8ea9531346e4df17befbfa\",\"height\":81196},{\"tx_hash\":\"d4f577e5dd6fe60d112efef08cbc1b64d9d12b9b792de7060e9d965af7ddcd67\",\"height\":81197},{\"tx_hash\":\"5bb30deae28dc12b91e1bc1cdf2fced33d9782461b2471a024c453f9f6dfb193\",\"height\":81198},{\"tx_hash\":\"4c5f138958ceee581a019536f6ba36920bb084ec2bb33de846bcc99064147caa\",\"height\":81199},{\"tx_hash\":\"6cf25b22a72cd8ede91458a576eab2b6d6195701dd6762f3ccb9c0eb24b88d46\",\"height\":81200},{\"tx_hash\":\"e4656a67cacd7a594feaba72e6bcb5fcd145d1ce4dced46848f6615668d1db2f\",\"height\":81201},{\"tx_hash\":\"7db7f549ba9db050fce83088cb0b76fa11696af663f4e44e63e33401852bad28\",\"height\":81202},{\"tx_hash\":\"bff6130ea0aa6fe0f7c5067651e629fa2405c6d5adb44454d4f45c0162697811\",\"height\":81204},{\"tx_hash\":\"9f0f716b3cf8efdc3a8bec7329482d92204fff90f965b6b96362be1c00bfa8e9\",\"height\":81206},{\"tx_hash\":\"e83d16b29a3946af54ea005e29cf47e0205da222a680d64433de00ffbd795e0d\",\"height\":81207},{\"tx_hash\":\"0cde19c63934870456f4795307e5e329dd3ae0bab0a5610cc8694c99d5a12a9d\",\"height\":81209},{\"tx_hash\":\"01fb058e181928e72ab307c151eaf1c086cef03623c0a1986c6765463646118e\",\"height\":81210},{\"tx_hash\":\"08a2c14d10057a84de3a0ec29f6e33f5d6f14c0578fa3e56948803d3b44b880b\",\"height\":81211},{\"tx_hash\":\"3d9edf909b25b15a03fe09b9295caa505216e9adf15149ad41baacb1e1d67b1b\",\"height\":81212},{\"tx_hash\":\"16a1ba6e75f649953fa505261497de889758ae172bbc877f7a4ced70a3e34b56\",\"height\":81214},{\"tx_hash\":\"70b578bb3a7460cf3a639bb763dab0d39ff57c5fc8a395f32b5eda7b7b98f41a\",\"height\":81215},{\"tx_hash\":\"25682e17b29ac85d2a58b7d9284fc7729df5f31f4174de05f6264e632cef6602\",\"height\":81216},{\"tx_hash\":\"2833b6639ef0a533111ec0db1e768d335343bcad7b0cff10a28bcfeffd96cc1e\",\"height\":81218},{\"tx_hash\":\"4ef0605e64cc0c0c05d75c1348f5be923da6637fa3bea1cc0cd88baa024374a9\",\"height\":81220},{\"tx_hash\":\"dd714c5ffe0a9e631c0f5ed0e5fdc4eab0c856372d81d45e7b195cf8bff4c834\",\"height\":81222},{\"tx_hash\":\"86b094ed480bb7a2084c3b95710207ad2d0ad5143a9714ecdfefee8953a00a40\",\"height\":81224},{\"tx_hash\":\"ed8523083d02b8c9ef67fff281053139201a4515942e7ed5feabb4455802e5fd\",\"height\":81225},{\"tx_hash\":\"badbb25dcbcb7291e70e31cafeec58ab98271db4a0fba765f2770de1eb0a3c8b\",\"height\":81226},{\"tx_hash\":\"c7b3639032b5e4a998f2df1da82f87e9f659ca455efa421d245f4a60f6669e53\",\"height\":81229},{\"tx_hash\":\"94af4d6dc25a309b84e9ddced689e0fd489e377173a31f33052925597bbbabd4\",\"height\":81230},{\"tx_hash\":\"05396f690bc768cc83bcacb494f14b10314c916b7731fb2b5c8da78409b27d74\",\"height\":81232},{\"tx_hash\":\"8ed4f781303123da6a8e2692f43ea35bb19c0939fd364a38500abbd1d4910db9\",\"height\":81233},{\"tx_hash\":\"92b38548090292cd423690544077192e77910ef0b64cb5cd03101cfbf6ecbc2a\",\"height\":81236},{\"tx_hash\":\"dd4041c7a6152cfea984474398d52df59f53a4adcf286a027d875aba412ef570\",\"height\":81237},{\"tx_hash\":\"c5011dde3168de0b40dbe448e898f80124a8118847a5a71bee9cf6400c5775b6\",\"height\":81238},{\"tx_hash\":\"4317408436f801c7cbb848796e40923adb3cccacd48383ab9efb51e55f2a317d\",\"height\":81242},{\"tx_hash\":\"538eb0045873382b2e5c0cbe8c201a93951e5d6c17e7e0bdd55a3aa63b87f9a7\",\"height\":81245},{\"tx_hash\":\"663861a81fac8b5866764e3c4da3d9c447329f72e0d7d15ee00c4e0a1a665e61\",\"height\":81247},{\"tx_hash\":\"fc77a75a5ad3ec1022c7184fc1549304aa266af08a1c7e6d8d4e7140f0e67579\",\"height\":81249},{\"tx_hash\":\"124b068027300d0bf353fe48b49d7cd9722df9919d3cd1b26d1bea7d3fce82d8\",\"height\":81252},{\"tx_hash\":\"a4bde17c8df7095230896d98d44f1e1659166d40b5daacbda5aa44f1ac5d2b27\",\"height\":81254},{\"tx_hash\":\"30665faac3fbbe611c0ac72b10d5212760fb9f3be582c322e9c8d380a2c1aa6a\",\"height\":81255},{\"tx_hash\":\"6a93136ef13666f5627630ae9122bf67cca41e6576cf6a5c99bec7b44dfb2a49\",\"height\":81257},{\"tx_hash\":\"843f69324f458d586480c46b70ff2f38c3758b68910c582c484823ed021114b3\",\"height\":81259},{\"tx_hash\":\"a6766fc5dca8b6e0a7201f3a4c3c155fce71923c00b0bd868a6501e604f09e48\",\"height\":81262},{\"tx_hash\":\"a168ed7764ce58d7bf65fa74ae97b34f4914556cd9002e1a098822825b518bd7\",\"height\":81267},{\"tx_hash\":\"ca6fedfe822cefc13f142fbbb450130552f78ae04a7eb41cddc4b54e9c3b1574\",\"height\":81297},{\"tx_hash\":\"ffeb9526fd4771e737e4c3412b14516b18f6a453d5ecbdc66d9de2d912de7e46\",\"height\":81299},{\"tx_hash\":\"818230d2e0f209b4f218811334eebe595073cf751f2a396decdf5149b47cb3b8\",\"height\":81301},{\"tx_hash\":\"c319612c0e2b08f653fc51f4348e4faba2080ceff6b3df123b0a554c78f49bf3\",\"height\":81303},{\"tx_hash\":\"0f0f71b10b5b6717d87c8fd9685f7460fecadaedce00d7180e2130e1aab456db\",\"height\":81305},{\"tx_hash\":\"0427623c15809c2359d4c355cd7484a74800f0fb30ed6b5fb9e929bd7565c0f8\",\"height\":81308},{\"tx_hash\":\"e4b33819950c52305e55684701b93219b1ea5e87e2111c7c32cb6e116e685d12\",\"height\":81309},{\"tx_hash\":\"61b4c6ad64b354fa0594cabd61718e0d1f00678c135a179fb35dfa6759fec958\",\"height\":81313},{\"tx_hash\":\"1832f582eab4e0c39481e47ade55d6744ce87cbbed27cc8f72c0e9923c46781f\",\"height\":81315},{\"tx_hash\":\"05c1aa784ddac307467dc67b53c078a2e5d5d2de791e73bb44bd041de50aa924\",\"height\":81324},{\"tx_hash\":\"66dd87f91e6d44303a929f5e62d4068f30b520b891c07079f05cb01ce3c97589\",\"height\":81325},{\"tx_hash\":\"3093e89aaf15192923af7dbe407ff8010649434e7ce57ec16ffed79211c889db\",\"height\":81332},{\"tx_hash\":\"37cf54c3ee477491f696a80184ee5133a0502446ccfeb03f8a5a02d1a723b7d1\",\"height\":81334},{\"tx_hash\":\"0d5707aaa5b4f38973ee9f098be37eca84ea97cc361bf1245b7ce0126cc0cdc4\",\"height\":81340},{\"tx_hash\":\"e724bc5c0785c70efd901e78336a9936cc07b734c68a4538d3dc8324e661ce4c\",\"height\":81341},{\"tx_hash\":\"cd65807d991b3e4392676cbf645077a6d5915ea4934c0acdf8d8502074839245\",\"height\":81342},{\"tx_hash\":\"1eb7ee069069634023c1580d86db87c6a36511a4599ac1894a2c8446d2a22038\",\"height\":81346},{\"tx_hash\":\"6db8b0e0129182a96020f569e6b7a707fb5874d6e01a9c0696d52e44144b81ed\",\"height\":81348},{\"tx_hash\":\"c85948a8255d5b6f93209ec9b6601b62850494928b60bd38c257aa1114b7f45e\",\"hei'"}, {"func_args": {}, "return_value": "b'ght\":81351},{\"tx_hash\":\"ad78b1f427776358394cec415b4a8b862da051c4bc191d96843b4b3c4dc5f17d\",\"height\":81357},{\"tx_hash\":\"7fb6d6da7f10d94dda97d712871ee5e23738b3aedcc695651a1e86b0cd605af2\",\"height\":81358},{\"tx_hash\":\"6930d3a40fc029a80a184cbadb2077618357089c9ad393e7c8476d10eaedaddd\",\"height\":81360},{\"tx_hash\":\"b028458b22ac975e62e47754fd6845d479d427cd7aff916ba258bf35fcd7552c\",\"height\":81366},{\"tx_hash\":\"6e6faeff78f6629b18c4bc3e26eb1a32439e8e78013afe0c27f34c9db4d5937c\",\"height\":81367},{\"tx_hash\":\"e3d84021904bfb67981da6d4cc79b58ba34cd46da2953ecb242a6d4559b0aef7\",\"height\":81370},{\"tx_hash\":\"b9cd8e96d61ff9575a022525ae205decd6558cb25ca3e738ccaa4d8fea7fd495\",\"height\":81383},{\"tx_hash\":\"29b9b39ad99def73d6cdb3cd542e68c0e811149e0d771a85e45e2df953fcf049\",\"height\":81384},{\"tx_hash\":\"622903b4a5234cf65cc6a648685160efbc3d9e2a9534d86a9f3a2c7270a548fb\",\"height\":81387},{\"tx_hash\":\"45e86c61ec33aab1a4ac59e5de2a81995dcf412bd9342192c14e5cc6e9caf636\",\"height\":81401},{\"tx_hash\":\"594ffd03673adc4442881797eeb2ca25a699bf4994bd061e18b61622b0b7e708\",\"height\":81404},{\"tx_hash\":\"38ac349b443e4d3df8edb6378b0137743648d7c6f8f4c8a525989e31f1d29e7a\",\"height\":81412},{\"tx_hash\":\"28d411de336e49c355e6d112ca118bede298e04092389bfcafe71d68b31c1d5f\",\"height\":81413},{\"tx_hash\":\"ccf41ce1c24d08f3a4dcbd58cda12fadeb81b1b512a7be666f2d996228964edb\",\"height\":81418},{\"tx_hash\":\"206c6565310a5275a3e173cdff1679b051d84e8bbf5236c16526113a93378c02\",\"height\":81420},{\"tx_hash\":\"b9b17aa05934aa7c5123d92285edd189d5192c6a643a59d959447431e8db6eaf\",\"height\":81421},{\"tx_hash\":\"ba78226e1c5a3616a125911a055cc9105b048f306afaed7e444a22ab18ff4ac9\",\"height\":81422},{\"tx_hash\":\"757aa100cab6ba8732a2571c4c4ae9c7b2b8140cd2132f733f1578558a7fe9e2\",\"height\":81424},{\"tx_hash\":\"4a045d398d13b54def3ac2ad120ebbcc89f79a9f513eca026380b4787c792eec\",\"height\":81426},{\"tx_hash\":\"5543a13fcc09b7111e5e76250434a50181f58a1ef71013b6cafa0ff3aff1e33b\",\"height\":81427},{\"tx_hash\":\"888d61ba48d86e20f9804cc169f8061299d28fddae1e7be45fb2dcb347fb96fe\",\"height\":81429},{\"tx_hash\":\"1e8a3cd1371ae9908236e9ad527054cfa7d9942162d94d451aead27c9cbea0db\",\"height\":81433},{\"tx_hash\":\"9dc9f3596477bfe6aab853b478c2b9897a1a6d3c7c276ef7a3c6606e5179e355\",\"height\":81437},{\"tx_hash\":\"e45ecc95854bbe74816eb8e1fa876d0b351086ec2d184f93371f5212bf846d7a\",\"height\":81438},{\"tx_hash\":\"3a4fed5de8de8c31c0d7a4cf053ace752e1ee3b5dd350fffee98426712b51351\",\"height\":81439},{\"tx_hash\":\"618464d905687e06d7c02c2a45f81c2114bd8670cb4fbc365a98834637a62d8f\",\"height\":81447},{\"tx_hash\":\"b4e0f56c70b16a127b7c1c37180b269cd8ccf58fa48f23bbd18cf151fa4374f5\",\"height\":81449},{\"tx_hash\":\"50c725d734ab1407fc8fb8f4c7d74bfef4375aaa6835b6b32fe5c808e5b06143\",\"height\":81451},{\"tx_hash\":\"650f8e44b8b32204a59ab835bec1589f56249e675bf7f1158b92aeefa63b73e4\",\"height\":81458},{\"tx_hash\":\"05e8ddf8df855e605d5f795b5b26274ad1c11f8eb2ef9072d4e9bebd7afcc108\",\"height\":81471},{\"tx_hash\":\"340bc6830e30e23e42acf7f5e9758f9f0756200f7e36b0cfe8970c9c94c7689f\",\"height\":81475},{\"tx_hash\":\"5c79f2e6761f06f7d30f2e6a5d4309eea994a123045426561a25fc89096b5ac1\",\"height\":81476},{\"tx_hash\":\"1574a24920c6a59e0a187bfd9b4c2b628225a89972a201168ba86191a74eb33c\",\"height\":81477},{\"tx_hash\":\"7dfcfa51839b2816982682ffe0b99d541de78275dbd84c2f88684d863d9649a4\",\"height\":81486},{\"tx_hash\":\"3f6e175bd976d538bfb159349d51af462c44191ea15b06a6001f1ff3c48976c9\",\"height\":81493},{\"tx_hash\":\"4c0f8137881d49aa24104c5ac03fea0578dfdec610bee91ec0d50653adfb8aa6\",\"height\":81496},{\"tx_hash\":\"6edd0240a0cdeced5285ec3eb220da2d3d90090ca1e48ad535cf89bf8ab70be5\",\"height\":81499},{\"tx_hash\":\"f2c293980ae5b2b8f0252dcb73754bc954db5acd34ac647d58d8b50f98244da7\",\"height\":81501},{\"tx_hash\":\"dbd4265eec3ac8b1bc945854daafe0bbcfbe16ce00d1ef637c9391a280a8d917\",\"height\":81503},{\"tx_hash\":\"3e5514320aa8131d34d4d141919ce519af7d6563b587c89e9b7dba4241546a8f\",\"height\":81504},{\"tx_hash\":\"8821b504fef5fab3f6ab32cafbb4c13fa76675ed99bb05e95f3521b4667b69de\",\"height\":81506},{\"tx_hash\":\"aab89c9074cab80908f6ad693db65db7727b7939723a0c0d2d18019d9ebd9452\",\"height\":81509},{\"tx_hash\":\"fd3ef3465b20bad29bac5f065534b562587a837182341ce60167533a1aa2774b\",\"height\":81510},{\"tx_hash\":\"f8c9207f952045d7377d844bf738563543a2cc2c4b2b7c9d6d605ef4825d90a3\",\"height\":81521},{\"tx_hash\":\"c0014eee416352a99d7ee6fe0c3832b10a1089a69c51c103d6fb0a16eb4e2754\",\"height\":81523},{\"tx_hash\":\"79fc5fab06471384776847afd1dadaadbe74275c9344361a0f8728965ecc6ce0\",\"height\":81535},{\"tx_hash\":\"503444162c119d646fb1eb24fca3f533'"}, {"func_args": {}, "return_value": "b'0bb1ab00dda6147b1c0c7a0155b3a0e6\",\"height\":81538},{\"tx_hash\":\"732cb12893240f7f71b8bb8f4171540e53eff9c9c35271d00032dd037051673c\",\"height\":81540},{\"tx_hash\":\"e935918033ef8972fc6f109cd8c84ef3b6dcd4b1d2aea04b70e4d8dbdd99ea46\",\"height\":81541},{\"tx_hash\":\"310288116eb5255f892d027b5b28d3fe5b25ca6bc7311e94605f6a56463edb08\",\"height\":81544},{\"tx_hash\":\"c67e260ac445b34092aeddbe5d87d0d6304765d1083a4d927bb80115954c267a\",\"height\":81547},{\"tx_hash\":\"b1588b9b429df44a0e36b72948213c16c229e40e7f6dede6a68646be7b528791\",\"height\":81548},{\"tx_hash\":\"18319610b4843b59f121d9b307b31d37ad817922ca1cf66ceb63cbb198a2731e\",\"height\":81550},{\"tx_hash\":\"673c71f9568769f4e62badf7e5a5a963133185442ca20bb799c5c990dbc272dc\",\"height\":81552},{\"tx_hash\":\"cdc5db0505cd9f51a4a36cf8c93445d80ef5ea2cfc9d8bca103881721427ec79\",\"height\":81562},{\"tx_hash\":\"b2674e52cbaddfd2a400d444f99a3f82f0976f22ae2069a363076c81f9ceb1ae\",\"height\":81563},{\"tx_hash\":\"4308929605272056beac03f9ad2d3c7b2f8d34fc17c6fca440e57db011b1a357\",\"height\":81568},{\"tx_hash\":\"12bde9db97154ae08eb8282c8a4359c45665877af292d98a2f4270272479f95e\",\"height\":81574},{\"tx_hash\":\"0a2b70eae5365c1cf4d53da64d2097b8dc0d5b9a2f4a02fdcde2c55fa416a5c5\",\"height\":81575},{\"tx_hash\":\"29c22a3169502e76b6e02ca3260e3e2f33820ee750e6fd37203769beb96feded\",\"height\":81578},{\"tx_hash\":\"20092ea970797f057794c961c95326087dfd6762ebffd4f326f513c46c9e697c\",\"height\":81579},{\"tx_hash\":\"fdcfc714e48594cc901bf0586ff4546ba976c1bd3c183b97d0be05c95e477dcf\",\"height\":81584},{\"tx_hash\":\"22d19b585943a1450ee11b85c838638ba29807012096d5e6a6573370fd514c95\",\"height\":81587},{\"tx_hash\":\"151c88abe7820ce85a1bbe4a519ad575cdea6e82243397e2059556d2912838d1\",\"height\":81588},{\"tx_hash\":\"d31e6af79198439caaffecb4b84e00d9db35848e76551b63efbdac1a59785361\",\"height\":81593},{\"tx_hash\":\"0f150febc1c6b89514be20c3ecd84226f0e380510d12dcec6702cc5c1a700da2\",\"height\":81601},{\"tx_hash\":\"c970c66502d45d8121b8b522b9f750fcb99ca1d912df835b01e44c92b0eaabab\",\"height\":81606},{\"tx_hash\":\"ea4481e236b0bd6d207330a3efbbc69f9ea17e2601cf1efcad768e58c65653e5\",\"height\":81612},{\"tx_hash\":\"7f5f2033f87821f7b4aa00b69559533ec95bb3c4d74761d7495b3658d3e3899f\",\"height\":81618},{\"tx_hash\":\"08f9290c7737851c5ad113def89d1469b627b5a9c1ab7f85451e139bfdebf412\",\"height\":81619},{\"tx_hash\":\"51b07c87b5fe1fd8185cf30eb04a48338cc0a4698a3b2b3ce6be8a0f6eb6ecc3\",\"height\":81622},{\"tx_hash\":\"f1fdeb7ced28f697c97b6a3ed7cc1946e1fc5e062ad8c17d05c88b1767b91b2a\",\"height\":81626},{\"tx_hash\":\"871eb3b20a55ad43b85ba06777fa0181b02f036f78dd2b5a02e9aa0ed55aa821\",\"height\":81628},{\"tx_hash\":\"f5a1dec0a2687efd54ee1e79bfd5d053f5b5d5de8a220a038e381b3251469cec\",\"height\":81631},{\"tx_hash\":\"dbfecb57f1effc5e29198e2c3bdba8552f7b9486867961f9c9b0167b0b3ae1d1\",\"height\":81633},{\"tx_hash\":\"f030cd713355c36b3c646175feb789531f051972c437d8c0e567f02440aa92c3\",\"height\":81637},{\"tx_hash\":\"a41dade9c045cdc9ce8b3a4feb16f5831cad0a8dec5c737b862f8cdfe319ce29\",\"height\":81643},{\"tx_hash\":\"c2a1a48653108b32bfb46d7c750840e88ac6465bc33b7500bdbc284988e66c1a\",\"height\":81650},{\"tx_hash\":\"7302b83b0413f2c7082dd2d450c8aa366fd0be35a00aa77ab0168281999ae049\",\"height\":81657},{\"tx_hash\":\"fd057d32da78086b1d355996d4c8bc4aa94cda91521fbebfab5e639ba6d1c509\",\"height\":81661},{\"tx_hash\":\"39df68a9afcaf1a190d77130fb5d7bb71fb1c72de3ba6f72ef0268e3b49ceee5\",\"height\":81666},{\"tx_hash\":\"1c840de063b0f290931e3545cf3501da2ee951d142cf59344d67d57f34c345e4\",\"height\":81679},{\"tx_hash\":\"1e8ffd8463872586d2035846d51947f71ebed45c6d2733bcb9a1b58c685b9b5c\",\"height\":81681},{\"tx_hash\":\"23c40a3744ebb4f4fb96ee20bae680af3816fceeb13816a0cc9bb812e801ee02\",\"height\":81686},{\"tx_hash\":\"a2a2ffa7e89197ecdff0c4dbe7bfe92884d136549f0312e36122fdf19c22aece\",\"height\":81689},{\"tx_hash\":\"c684bd97844a44b382bcc655e8c2459fc97de4bf34645bd6dcf6764478338805\",\"height\":81690},{\"tx_hash\":\"f6d6932689abd29fd13f35544c45d738e1b94b71e09de250c35ea16296fc42ca\",\"height\":81691},{\"tx_hash\":\"0070fced3b9089a1a22d966083e205287e782341c78a30d97408549efd383274\",\"height\":81694},{\"tx_hash\":\"d9e0fca6ca6e8bc1fd4a8021075314cf61919d4faf0f9723a1f17f8eac20c6a1\",\"height\":81700},{\"tx_hash\":\"5ee18638245ee139f1f471ec2007f987c08273d0dde2e3f0f4c82fdc4c8d732d\",\"height\":81707},{\"tx_hash\":\"ac2dfc259902fe430a79b84b51d32aa0bc7933e10695963fafde8d2da2711302\",\"height\":81708},{\"tx_hash\":\"4efe00ba9919f42f16dc11cd2729161eaa064d96f42f143faabbf14e62554d89\",\"height\":81709},{\"tx_hash\":\"bdfa4e234acf755ee90ff20b4d918cd361b8867e7310107baf740c6c744c82ff\",\"height\":81711},{\"tx_h'"}, {"func_args": {}, "return_value": "b'ash\":\"a1481de9aba6f61a91da0504ecc3a1f3c18c8ba3f8e98bef034679f741a4aeeb\",\"height\":81717},{\"tx_hash\":\"a04bf5ba5e42d537354fa8d059acdabf16372fb36ec8aeae7d1252a8214db4c7\",\"height\":81718},{\"tx_hash\":\"e9f4ff5e9b993632422129a72af51ec4698508639830af96fbeea0aec2482aaf\",\"height\":81725},{\"tx_hash\":\"9dc8fa80834ba2de353509ee3770757b43c199b5ccba8eee6a7041e51b1bb0c7\",\"height\":81726},{\"tx_hash\":\"9363bca9b0283dd70a95977fff1aeca6bb9f1ccbccf3aa1d6240fbba1faaac01\",\"height\":81728},{\"tx_hash\":\"fa696de1582b28db9cd536d66aa722ec5173ce7dd7993479479ff66fdea4e90c\",\"height\":81731},{\"tx_hash\":\"a84b4cfa9705f72d0cb7e88381b2002a7026fd43d70decbf190bf9690317c2fa\",\"height\":81734},{\"tx_hash\":\"d108b7a37a1924121923179995f8f5d636b8656ad417d956f467008da8d41c86\",\"height\":81735},{\"tx_hash\":\"68436a1394645f79d95f1355a7d6cb532f844a32875b6d89a20d4d6c12f20f67\",\"height\":81736},{\"tx_hash\":\"bfa7993a7c225b9d067cad7270060c9380d52a9a1995630bdcbf196407cc4f95\",\"height\":81738},{\"tx_hash\":\"be52ff5a745c7b407f937bce8fc68beda307317f59f4c1d188ec523b8ddfad37\",\"height\":81739},{\"tx_hash\":\"0ba78ada77352628708f25898f5151a31ad53927f5552e71acc301a53079ec67\",\"height\":81743},{\"tx_hash\":\"3fe86abce7a9fb7139e9509d88a4bb02775ae25e0c96ed3c846bce0e5e107f30\",\"height\":81745},{\"tx_hash\":\"ddb2297f7da0e7cccee5b0d47c10727cfe0ec8a1dd36d7136e85b135d30c4215\",\"height\":81748},{\"tx_hash\":\"78900260fd01c5d1518886ba0d2c1cc0c265b00f8c6a92801ae15893e764ed6f\",\"height\":81756},{\"tx_hash\":\"0964bedc33c3ccfc3dee84688097c3e6b16acc0610d2'"}, {"func_args": {}, "return_value": "b'059a35c85b8e453e2ab9\",\"height\":81757},{\"tx_hash\":\"23b8d0580ddce122d29699402aabe9783e3ff8ec024d3eed7041273e87dc7a03\",\"height\":81758},{\"tx_hash\":\"0426eed2e46251ff060e1935340e99ef62fbd1063b4f79593a9cdbd5ce209757\",\"height\":81759},{\"tx_hash\":\"d9ca9710fcc3fe057c30e01fff4e6513839b471104ace6ed4c2f552747ff58c9\",\"height\":81760},{\"tx_hash\":\"2b6a70d33b7098107ed7bf524c38e76cc7011f32b55e0cb7b4ba8114cc67bd68\",\"height\":81766},{\"tx_hash\":\"d5176771a7394ad59c815aee606125a14110aab0c2b0582b13abc04e82748248\",\"height\":81767},{\"tx_hash\":\"4e54343c5f4a8515ff97ea072d331cd89dedc9c3a2c1be647e59cd7bb12823a3\",\"height\":81769},{\"tx_hash\":\"86d40716fc3ba3dce3d67cdbf8fc771963aae9b395ec7c7b5d6c9ec72a398cbb\",\"height\":81775},{\"tx_hash\":\"d5604b3547582e2f912ef00b40267ed7e018de2b2a7f343d63d7188206910e87\",\"height\":81777},{\"tx_hash\":\"7829d1fd94cb1916e59cf53ead6075a3daf7a6589565b4cbaf41a426622a20ae\",\"height\":81778},{\"tx_hash\":\"d61c1ef4bc15f2e9c5f8d931c0c07b5e2a90d2f78957e1f6e75e4d15308e7c1f\",\"height\":81779},{\"tx_hash\":\"b48a2d7f8c9172170afec67688458d1c497c236199c4671083db6e3939f0198a\",\"height\":81786},{\"tx_hash\":\"27fed98ada935be24a9f37dcc86cba677b50091aebf33a00fc3cebef44b5acbc\",\"height\":81788},{\"tx_hash\":\"5e4569458b11b0df6468306333b824e8fb339c4559e42f0125a9b38762494293\",\"height\":81794},{\"tx_hash\":\"18769e9064c78f6c28d1e3e540971b59f667470185f8d9904425e4a3da2f57f4\",\"height\":81796},{\"tx_hash\":\"560ff7a7aa98f0d046abf44a1474d04dd293eec5a9b3f0c12a586c6e0f29a36e\",\"height\":81797},{\"tx_hash\":\"5bc4d7dc7e9f25ee97bb029733829c69fa8f9c7310c443c7e9c1922ceb037eea\",\"height\":81799},{\"tx_hash\":\"77cc88b79f2772db652cc311b9558c1ef03a10dd9168081d9a31f1d18f9a26a9\",\"height\":81802},{\"tx_hash\":\"daf3aa58119a6f3eaa9a16e0b9bf45dcad10dc8ff05d22aeeeecc38ee3d77748\",\"height\":81803},{\"tx_hash\":\"bb91b988f36c0ca29406d65c4833d42b7a12d0e383ad0f3915a95727e5ace4db\",\"height\":81805},{\"tx_hash\":\"8044b88c8e80ac9bbf5c8363364ad570949a816598374676e9fbdcc02827bfe2\",\"height\":81808},{\"tx_hash\":\"19b8383f48e2a4e0f33a704468b4ab2d8d1dde8966f9d2f6a73777a175cc6b01\",\"height\":81812},{\"tx_hash\":\"d6e077324201a5616781c02359fdc3fc95f6badfddaec3ec5b457d5a31d660ae\",\"height\":81813},{\"tx_hash\":\"186c598548232f5ff57b41fd178288935b08ccbcb8f2720e809791415123d4ba\",\"height\":81815},{\"tx_hash\":\"6d48324fba090bcdd757b323f0c35ae40870568e02e57d968d06d6421717cab7\",\"height\":81819},{\"tx_hash\":\"5f4dfbe7e62b885e18c1fb17e924d10d8aa5ac64fe485d0d900ff751e6f67993\",\"height\":81822},{\"tx_hash\":\"5ded326ec03b29b538d1cf35093189011430cd1be5ae85c3a0242e4dc7ee0d37\",\"height\":81825},{\"tx_hash\":\"e9f06ac3ee860ac3e62c477eba59c87bf2ed4ffc996d78936d18b60091b63d75\",\"height\":81826},{\"tx_hash\":\"7bda07c1052684d9d63c85c890a8e68cf957c707e1769c30974a3b910d5cb753\",\"height\":81830},{\"tx_hash\":\"6905eaf50cf3f2bed6e31bb4e7b4f3bfa594a541b45aa333f540d78b2461c1f2\",\"height\":81835},{\"tx_hash\":\"f24fd3f18b3576d5240a171b61c09a5682eda1ab1a678501e0f1654725634cb6\",\"height\":81836},{\"tx_hash\":\"9ce8c197ebee2913959a77d8dea48ed2f4bdf2bac00b348648a806ebe2e2fb90\",\"height\":81843},{\"tx_hash\":\"b9b682cce12b8e019eea68238bd150e93012c2472c1596322f821a0952c9fa2f\",\"height\":81850},{\"tx_hash\":\"2d102da423cc60326082d0baff82fbead76ddea4b282109bdee0ad698b1a99d5\",\"height\":81863},{\"tx_hash\":\"4760900171bcc47e836e2bac3a756ac207c04591c806d3b2c451edfc62881eb0\",\"height\":81864},{\"tx_hash\":\"3aa9be20e8349ef78eb028c42580f3cfdf2cd5ef79b2ed93dd6e3394e0c2ff3d\",\"height\":81866},{\"tx_hash\":\"050cc567019e4f1dea1d2acfacec8a821bdaaf4944e34310634bc5d40513be12\",\"height\":81869},{\"tx_hash\":\"61d4467664a7c949fa3cc6c4c253c4c2ba7b1d0cea2fdb26915090ac437d13b7\",\"height\":81875},{\"tx_hash\":\"e2344a35c7cacec06a90d803b97b4f7c180b99a0e77cdb310971b2e5f054a30f\",\"height\":81888},{\"tx_hash\":\"6d71295f60ad13203e49d2b1caa4af840e2b0a03f3b7355981ae6dd2a6f29b46\",\"height\":81892},{\"tx_hash\":\"3b3d833439a60ac64df917d2072480195cf21606b5cd9890c150327feb0c3c82\",\"height\":81893},{\"tx_hash\":\"c18b8739e9469cbade06872e8c186468a843e89d28ff9134073c0af50dfcc948\",\"height\":81894},{\"tx_hash\":\"3a40bc19c5057030ca577bf6f46c98f10e3b18c6cf23493d811095f5c6105a5e\",\"height\":81895},{\"tx_hash\":\"1e3320baffca554af79b6441bd1cd48b1d4c8fc9eab62e32cb453c85dd09f3f3\",\"height\":81896},{\"tx_hash\":\"bdcc17ea62e3136283fb6f94f78b7389b19a497ed04252ec5d161f7a0ffe50e8\",\"height\":81901},{\"tx_hash\":\"da2d54ce5fdfa9cd5c7fd9f712fd774655088e244e4f0ffa2f80207eacc089b0\",\"height\":81902},{\"tx_hash\":\"b11b5333a20c99e7a2b660338c54d6a994b6bdcea3396336df77e036846e281c\",\"height\":81907},{\"tx_hash\"'"}, {"func_args": {}, "return_value": "b':\"d7b9d4bf9722913ccde3966a9fdc56fffb7a501744ab861ddd4ca1e063f21970\",\"height\":81908},{\"tx_hash\":\"4264872d8e71b4f46c9edb38a1188731c26dc3deb7e9fc4e95811e09d9fbac58\",\"height\":81910},{\"tx_hash\":\"d3eae477f6f21eb968ec254ed8d6b85060c1ae3dd07a7e75f00a603217d65a0d\",\"height\":81913},{\"tx_hash\":\"0329b651c7ba07ac5ef99f7ff310695fe601519a49f18aec2a099b0d627e5a36\",\"height\":81914},{\"tx_hash\":\"768e16d90f493e9fcab8894694b41f6b552d951fdbdaa27c37ea6c2a9d8e1a75\",\"height\":81915},{\"tx_hash\":\"2feac84f773a0814f396d8f4bb7643bb32cc051c659aca9b09c34f5729aeda67\",\"height\":81916},{\"tx_hash\":\"67e7d45111e285555b4b1be78d89b81f407b38099bfb7dfdc0797eeb2a57463f\",\"height\":81918},{\"tx_hash\":\"21b4b18968d890bd74ea37fc94c3e4ed74a84992b2bcc3199b201caa827fc2da\",\"height\":81919},{\"tx_hash\":\"a3e94f98c08ed5599d263d64ce5b8a30b1fc65250699f0dc06720812ec9e6b0a\",\"height\":81921},{\"tx_hash\":\"030d6461bcc321e20e478fa9ef3517fb5cccf2072b9e694e8c8bf53c559c9fc7\",\"height\":81922},{\"tx_hash\":\"bcc05b694e52466f6baf171cdf4a106be2a175c33fe969d816386d59eb5623be\",\"height\":81924},{\"tx_hash\":\"97ceb1ed50a4bf7281cd2b9c5dbfc8a9267ba709a30f52061b8fd6e8fe573e99\",\"height\":81925},{\"tx_hash\":\"5ba00244310bd137ab2bd2184a4baf74daf436383d4e67523bea0cabaf94bed2\",\"height\":81930},{\"tx_hash\":\"a4112d6a583d61420662baca858478b3d51fcfe15fac557ac06f7baabb83d26b\",\"height\":81935},{\"tx_hash\":\"08ab81e1ed4c0e3aeb6cc86a67852f99ca11963dcdffb301a98c526a8a25f99f\",\"height\":81936},{\"tx_hash\":\"39593b054bbf94bd39638c72a80b75a11425ea3c40cf687940553b1f35b340ac\",\"height\":81938},{\"tx_hash\":\"bf40b31784a51fa618b55eedbfa6f02bf79240eb49604fb3982c0d53e8db0695\",\"height\":81939},{\"tx_hash\":\"8efe0ab4111a199955daa36508bbe73b4867458c4f091951e5d52eba26d9a755\",\"height\":81942},{\"tx_hash\":\"fa2ec6a72ffb8afe3188245b8eedd3a44c5bbe78153226c263bcfde4a71e0904\",\"height\":81943},{\"tx_hash\":\"4fdd75f81adde3d522fcbb977fc6bb9dedd9665afc77df2b4b1d98aeabf7bfa0\",\"height\":81946},{\"tx_hash\":\"655a015ff507298d7045e857cdfc82c5b0ed28bd2ea732c76f76dc0886c940d2\",\"height\":81947},{\"tx_hash\":\"09027a1690fc703d76d1ce828e35ba0da0a6cc09dd9fb284f43ecd2af2c5fb59\",\"height\":81948},{\"tx_hash\":\"099a829a856562bf7c0ce40503c8173b9c1488dd48f91a8835fbe9f66ee661a2\",\"height\":81948},{\"tx_hash\":\"838a5469b432b795522c35d5d85c0cb8e393bc5c8c91d3487186f1651d175394\",\"height\":81949},{\"tx_hash\":\"1b430f3b78ee3b08c0d39301e7d66c66b503fabdaae852d599707e156da44d41\",\"height\":81950},{\"tx_hash\":\"454b459520922620b3a8efc3838666e15816127f46a9f67c23569a58a12ab783\",\"height\":81951},{\"tx_hash\":\"6848a322c576a0241549429e08c85206c13be6ecc676f7b1b19fb104061482e6\",\"height\":81952},{\"tx_hash\":\"e514c933528529c655223c807c56a2b95e6654b4743289ee786ee8f52f740279\",\"height\":81955},{\"tx_hash\":\"52656148090873f8d60e2c32926439f732fe853d8a6fdf00f4b51802c9eea738\",\"height\":81991},{\"tx_hash\":\"6ec9045265beb87f39aad9f6ad59f61e33e1a338bf5dad5b88326f86849ee332\",\"height\":82012},{\"tx_hash\":\"9986c0599bb904dcaaffa20b66021de71948d876b90abe07635974acb802d329\",\"height\":82014},{\"tx_hash\":\"4bccb4f2c004c18ff43a52a0b5b6603fe798d07cb64327586ab64400c3809fe7\",\"height\":82017},{\"tx_hash\":\"b19425ff60106c9a3a52ed12f993d78bcc5d8bb173c23129e1209aac18a50934\",\"height\":82018},{\"tx_hash\":\"c17555c5354418f38db2fabcf5c9da91e0ac47e8a489ed8b37e0bb58d8546ad7\",\"height\":82019},{\"tx_hash\":\"58f65e176b9ae982aa3700fcfd775cdefa40f64c7eb29f17251c9bc1a0a109a1\",\"height\":82021},{\"tx_hash\":\"84dcb4e893c738b174c80a7723a2f49da8985031a17c613915d4425ad015e470\",\"height\":82023},{\"tx_hash\":\"712e095b880341ea734528671483f9b533d49f15e66d79245b47389c1ab2fc2e\",\"height\":82025},{\"tx_hash\":\"74a4646c0156b23c9da9e1a3f4f48c51b1ba1d8d033d1ef9f56fdb4634ea89dd\",\"height\":82026},{\"tx_hash\":\"1ef1d895fb1f9258cc854559a8690ee4bcd04038bc68cb8b4cd1e6e4bd7cd586\",\"height\":82027},{\"tx_hash\":\"3b32a082f0690ebfcae31628987559456bd316da5b62510992c0eadc1c4a7a80\",\"height\":82029},{\"tx_hash\":\"c1301463cc1f07ed6289ae3b569fe0a7911167a5b914beddf829a9485a949d4a\",\"height\":82030},{\"tx_hash\":\"fea3e182aa9aaf5b4222f2f046ed6066f07a6eed81a297f047aab13a62dc6110\",\"height\":82032},{\"tx_hash\":\"887a9a8b5e67f8a2e1ec5e5f481d9222e7b203bdef45298c55c8ec26b3e373c2\",\"height\":82034},{\"tx_hash\":\"156c417794257f19b2e4e1edd71633fe8251fd6e60ec71f13af1900153a45728\",\"height\":82036},{\"tx_hash\":\"7d821653895b8832722351e688a63b23513002dbaa34ae341571a2991fb18841\",\"height\":82037},{\"tx_hash\":\"781a62a311587441fb41a975a711d40bd9187f0f89d183b50551e8b55cc51c22\",\"height\":82038},{\"tx_hash\":\"16e5d7c5edcc56d0c4fde9795c2476c691c631a8f2828426c23c87'"}, {"func_args": {}, "return_value": "b'96de9a5982\",\"height\":82042},{\"tx_hash\":\"80b460922faf0ad1e8b8a55533654c9a9f3039bfff0fff2bcf8536b8adf95939\",\"height\":82043},{\"tx_hash\":\"a3789e113041db907a1217ddb5c3aaf0eff905cc3d913e68d977e1ab4d19acea\",\"height\":82044},{\"tx_hash\":\"0e15f2498362050e5ceb6157d0fbf820fdcaf936e447207d433ee7701d7b99c2\",\"height\":82046},{\"tx_hash\":\"6e69ec4a97515a8fd424f123a5fc1fdfd3c3adcd741292cbc09c09a2cc433bea\",\"height\":82047},{\"tx_hash\":\"c58bce14de1e3016504babd8bbe8175207d75074134a2548a71743fa3e56c58d\",\"height\":82048},{\"tx_hash\":\"4518868741817ae6757fd98de27693b51fad100e89e5206b9bbf798aeebb804c\",\"height\":82049},{\"tx_hash\":\"393d51119cdfbf0a308c0bbde2d4c63546c0961022bad1503c4bbaed0638c837\",\"height\":82052},{\"tx_hash\":\"7da38b66fb5e8582c8be85abecfd744a6de89e738dd5f3aaa0270b218ec424eb\",\"height\":82053},{\"tx_hash\":\"59bc81733ff0eaf2b106a70a655e22d2cdeff80ada27b937693993bf0c22e9ea\",\"height\":82054},{\"tx_hash\":\"2c2e20f976b98a0ca76c57eca3653699b60c1bd9503cc9cc2fb755164a679a26\",\"height\":82056},{\"tx_hash\":\"7f6191c0f4e3040901ef0d5d6e76af4f16423061ca1347524c86205e35d904d9\",\"height\":82059},{\"tx_hash\":\"158e1f9c3f8ec44e88052cadef74e8eb99fbad5697d0b005ba48c933f7d96816\",\"height\":82060},{\"tx_hash\":\"c6b5368c5a256141894972fbd02377b3894aa0df7c35fab5e0eca90de064fdc1\",\"height\":82061},{\"tx_hash\":\"d56c22950ad2924f404b5b0baa6e49b0df1aaf09d1947842aed9d0178958eb9d\",\"height\":82130},{\"tx_hash\":\"0a61590c7548bd4f6a0df1575b268057e5e3e295a44eaeeb1dfbd01332c585ed\",\"height\":84392},{\"tx_hash\":\"ee899a182b'"}, {"func_args": {}, "return_value": "b'bb75e98ef14d83489e631dd66a8c5059dc8255692dd8ca9efba01f\",\"height\":84393},{\"tx_hash\":\"91224a219196a3f6e6f40ad2137b13fe54109e57aaed7527ea34aa903e6b8313\",\"height\":84405},{\"tx_hash\":\"ded4cbc9c52fd5599b6a93f89a79cde9aeb5a7f8f56732bb67ae9554325b3666\",\"height\":128604},{\"tx_hash\":\"7bc26c1f3b4ab5ca57677593d28d13bff468a658f4d5efc379c1612554cf668e\",\"height\":129015},{\"tx_hash\":\"3df1a50e2e5d8525f04bd21a66bad824364a975449fa24fd5c2537d0f713919b\",\"height\":129016},{\"tx_hash\":\"a0dc03a870e589ea51e3d3a8aed0d34f4f1ae6844acad26dae48fe523b26e764\",\"height\":129016},{\"tx_hash\":\"daf03d666047ca0b5340b4a0027f8562b7c5bac87dca3727093b5393176a541a\",\"height\":129016},{\"tx_hash\":\"0d2c778ed9976b52792c941cac126bda37d3b1453082022d5e36ac401be3b249\",\"height\":129017},{\"tx_hash\":\"d85f5265618fb694c3ea3ca6f73eba93df8a644bc1c7286cec2fbc2fbf7d895e\",\"height\":129019},{\"tx_hash\":\"4a4b5c8d464a77814ed35a37e2a28e821d467a803761427c057f67823309b725\",\"height\":129021},{\"tx_hash\":\"3a4af7755d3061ecced2f3707c2623534104f08aa73a52ca243d7ddecf5fe86d\",\"height\":129021},{\"tx_hash\":\"209f97873265652b83922921148cad92d7e048c6822e4864e984753e04181470\",\"height\":129023},{\"tx_hash\":\"d0b7e087040f67ef9bd9f21ccf53d1b5410400351d949cabf127caf28a6e7add\",\"height\":129023},{\"tx_hash\":\"7a748364255c5b64979d9d3da35ea0fbef0114e0d7f96fccd5bea76f6d19f06b\",\"height\":129023},{\"tx_hash\":\"e8d00d8cc744381233dbc95e2d657345084dfb6df785b81285183f4c89b678d4\",\"height\":129023},{\"tx_hash\":\"cb3760529c2684c32047a2fddf0e2534c9241e5d72011aac4a8982e0c7b46df3\",\"height\":129023},{\"tx_hash\":\"4123255b7678e37c168b9e929927760bc5d9363b0c78ec61a7b4a78b2a07adab\",\"height\":129025},{\"tx_hash\":\"a9f40fbaecd2b28a05405e28b95566d7b3bd8ac38a2853debd72517f2994c6fc\",\"height\":129025},{\"tx_hash\":\"7b007aeace2299d27b6bb6c24d0a8040d6a87e4c2601216c34d226462b75f915\",\"height\":129025},{\"tx_hash\":\"cb0d55c37acc57f759255193673e13858b5ab3d8fdfa7ee8b25f9964bdaa11e3\",\"height\":129549},{\"tx_hash\":\"8bea41f573bccb7b648bc0b1bbfeba8a96da05b1d819ff4a33d39fbcd334ecfd\",\"height\":129554},{\"tx_hash\":\"2cd6a1cb26880276fbc9851396f1bd8081cb2b9107ff6921e8fd65ed2df3df79\",\"height\":129554},{\"tx_hash\":\"bc27f31caae86750b126d9b09e969362b85b7c15f41421387d682064544bf7e7\",\"height\":129867},{\"tx_hash\":\"f6e80d4fd1a2377406856c67d0cee5ac7e5120993ff97e617ca9aac33b4c6b1e\",\"height\":129867},{\"tx_hash\":\"91800d80bb4c69b238c9bfd94eb5155ab821e6b25cae5c79903d12853bbb4ed5\",\"height\":133767},{\"tx_hash\":\"c589be71a5da50783968b7c41cd1f12fcc92785654efb67a0c51285caad069da\",\"height\":225855},{\"tx_hash\":\"d064dffa8157ed363afdb389fdf9cab200bd51936e68bae30fe6399b1eb7d6d7\",\"height\":225855},{\"tx_hash\":\"511db530da494a1b7f39955d4a486416e746b643977e0bc17738de9c50b63996\",\"height\":322759}]\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'{\"chain\":\"test\",\"blocks\":1471213,\"headers\":1471213,\"bestblockhash\":\"00000000000433743907a918cc0e6c810711b6711ebcb889895469627bafd0a0\",\"difficulty\":8786.893542150434,\"mediantime\":1642610545,\"verificationprogress\":0.9999971776084243,\"pruned\":false,\"chainwork\":\"0000000000000000000000000000000000000000000000f628a2d6fe3915d3e9\"}\\n'"}, {"func_args": {}, "return_value": "None"}, {"func_args": {}, "return_value": "b'[{\"height\":1095683,\"tx_pos\":0,\"tx_hash\":\"fb868e1a9646d4b136c06ed474cd544d0ed2a6d20613c8a15b267c74bc38e41b\",\"value\":1}]\\n'"}, {"func_args": {}, "return_value": "None"}], "text": "def generate():\n            # Special case for urllib3.\n            if hasattr(self.raw, 'stream'):\n                try:\n                    for chunk in self.raw.stream(chunk_size, decode_content=True):\n                        yield chunk\n                except ProtocolError as e:\n                    raise ChunkedEncodingError(e)\n                except DecodeError as e:\n                    raise ContentDecodingError(e)\n                except ReadTimeoutError as e:\n                    raise ConnectionError(e)\n            else:\n                # Standard file-like object.\n                while True:\n                    chunk = self.raw.read(chunk_size)\n                    if not chunk:\n                        break\n                    yield chunk\n\n            self._content_consumed = True"}, "to_native_string": {"line": 13, "args": [{"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'Content-Type'", "encoding": "'ascii'"}, "return_value": "'Content-Type'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'Content-Type'", "encoding": "'ascii'"}, "return_value": "'Content-Type'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'Content-Type'", "encoding": "'ascii'"}, "return_value": "'Content-Type'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'Content-Type'", "encoding": "'ascii'"}, "return_value": "'Content-Type'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'Content-Type'", "encoding": "'ascii'"}, "return_value": "'Content-Type'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'Content-Type'", "encoding": "'ascii'"}, "return_value": "'Content-Type'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'Content-Type'", "encoding": "'ascii'"}, "return_value": "'Content-Type'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'Content-Type'", "encoding": "'ascii'"}, "return_value": "'Content-Type'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'Content-Type'", "encoding": "'ascii'"}, "return_value": "'Content-Type'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'Content-Type'", "encoding": "'ascii'"}, "return_value": "'Content-Type'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'Content-Type'", "encoding": "'ascii'"}, "return_value": "'Content-Type'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'Content-Type'", "encoding": "'ascii'"}, "return_value": "'Content-Type'"}, {"func_args": {"string": "'GET'", "encoding": "'ascii'"}, "return_value": "'GET'"}, {"func_args": {"string": "'User-Agent'", "encoding": "'ascii'"}, "return_value": "'User-Agent'"}, {"func_args": {"string": "'Accept-Encoding'", "encoding": "'ascii'"}, "return_value": "'Accept-Encoding'"}, {"func_args": {"string": "'Accept'", "encoding": "'ascii'"}, "return_value": "'Accept'"}, {"func_args": {"string": "'Connection'", "encoding": "'ascii'"}, "return_value": "'Connection'"}, {"func_args": {"string": "'Content-Type'", "encoding": "'ascii'"}, "return_value": "'Content-Type'"}], "text": "def to_native_string(string, encoding='ascii'):\n    \"\"\"Given a string object, regardless of type, returns a representation of\n    that string in the native string type, encoding and decoding where\n    necessary. This assumes ASCII unless told otherwise.\n    \"\"\"\n    if isinstance(string, builtin_str):\n        out = string\n    else:\n        if is_py2:\n            out = string.encode(encoding)\n        else:\n            out = string.decode(encoding)\n\n    return out"}, "unicode_is_ascii": {"line": 29, "args": [{"func_args": {"u_string": "'api.whatsonchain.com'"}, "return_value": "True"}, {"func_args": {"u_string": "'api.whatsonchain.com'"}, "return_value": "True"}, {"func_args": {"u_string": "'api.whatsonchain.com'"}, "return_value": "True"}, {"func_args": {"u_string": "'api.whatsonchain.com'"}, "return_value": "True"}, {"func_args": {"u_string": "'api.whatsonchain.com'"}, "return_value": "True"}, {"func_args": {"u_string": "'api.whatsonchain.com'"}, "return_value": "True"}, {"func_args": {"u_string": "'bsvbook.guarda.co'"}, "return_value": "True"}, {"func_args": {"u_string": "'api.whatsonchain.com'"}, "return_value": "True"}, {"func_args": {"u_string": "'bsvbook.guarda.co'"}, "return_value": "True"}, {"func_args": {"u_string": "'api.whatsonchain.com'"}, "return_value": "True"}, {"func_args": {"u_string": "'api.whatsonchain.com'"}, "return_value": "True"}, {"func_args": {"u_string": "'bsvbook.guarda.co'"}, "return_value": "True"}, {"func_args": {"u_string": "'api.whatsonchain.com'"}, "return_value": "True"}, {"func_args": {"u_string": "'api.whatsonchain.com'"}, "return_value": "True"}, {"func_args": {"u_string": "'api.whatsonchain.com'"}, "return_value": "True"}, {"func_args": {"u_string": "'api.whatsonchain.com'"}, "return_value": "True"}], "text": "def unicode_is_ascii(u_string):\n    \"\"\"Determine if unicode string only contains ASCII characters.\n\n    :param str u_string: unicode string to check. Must be unicode\n        and not Python 2 `str`.\n    :rtype: bool\n    \"\"\"\n    assert isinstance(u_string, str)\n    try:\n        u_string.encode('ascii')\n        return True\n    except UnicodeEncodeError:\n        return False"}, "_idna_encode": {"line": 301, "args": [{"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'bsvbook'"}, "return_value": "b'bsvbook'"}, {"func_args": {"name": "'guarda'"}, "return_value": "b'guarda'"}, {"func_args": {"name": "'co'"}, "return_value": "b'co'"}, {"func_args": {"name": "'bsvbook'"}, "return_value": "b'bsvbook'"}, {"func_args": {"name": "'guarda'"}, "return_value": "b'guarda'"}, {"func_args": {"name": "'co'"}, "return_value": "b'co'"}, {"func_args": {"name": "'bsvbook'"}, "return_value": "b'bsvbook'"}, {"func_args": {"name": "'guarda'"}, "return_value": "b'guarda'"}, {"func_args": {"name": "'co'"}, "return_value": "b'co'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'bsvbook'"}, "return_value": "b'bsvbook'"}, {"func_args": {"name": "'guarda'"}, "return_value": "b'guarda'"}, {"func_args": {"name": "'co'"}, "return_value": "b'co'"}, {"func_args": {"name": "'bsvbook'"}, "return_value": "b'bsvbook'"}, {"func_args": {"name": "'guarda'"}, "return_value": "b'guarda'"}, {"func_args": {"name": "'co'"}, "return_value": "b'co'"}, {"func_args": {"name": "'bsvbook'"}, "return_value": "b'bsvbook'"}, {"func_args": {"name": "'guarda'"}, "return_value": "b'guarda'"}, {"func_args": {"name": "'co'"}, "return_value": "b'co'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'bsvbook'"}, "return_value": "b'bsvbook'"}, {"func_args": {"name": "'guarda'"}, "return_value": "b'guarda'"}, {"func_args": {"name": "'co'"}, "return_value": "b'co'"}, {"func_args": {"name": "'bsvbook'"}, "return_value": "b'bsvbook'"}, {"func_args": {"name": "'guarda'"}, "return_value": "b'guarda'"}, {"func_args": {"name": "'co'"}, "return_value": "b'co'"}, {"func_args": {"name": "'bsvbook'"}, "return_value": "b'bsvbook'"}, {"func_args": {"name": "'guarda'"}, "return_value": "b'guarda'"}, {"func_args": {"name": "'co'"}, "return_value": "b'co'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}, {"func_args": {"name": "'api'"}, "return_value": "b'api'"}, {"func_args": {"name": "'whatsonchain'"}, "return_value": "b'whatsonchain'"}, {"func_args": {"name": "'com'"}, "return_value": "b'com'"}], "text": "def _idna_encode(name):\n    if name and any([ord(x) > 128 for x in name]):\n        try:\n            import idna\n        except ImportError:\n            six.raise_from(\n                LocationParseError(\"Unable to parse URL without the 'idna' module\"),\n                None,\n            )\n        try:\n            return idna.encode(name.lower(), strict=True, std3_rules=True)\n        except idna.IDNAError:\n            six.raise_from(\n                LocationParseError(u\"Name '%s' is not a valid IDNA label\" % name), None\n            )\n    return name.lower().encode(\"ascii\")"}, "_normalize_host": {"line": 1092, "args": [{"func_args": {"host": "'api.whatsonchain.com'", "scheme": "'https'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"host": "'api.whatsonchain.com'", "scheme": "'https'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"host": "'api.whatsonchain.com'", "scheme": "'https'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"host": "'api.whatsonchain.com'", "scheme": "'https'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"host": "'api.whatsonchain.com'", "scheme": "'https'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"host": "'api.whatsonchain.com'", "scheme": "'https'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"host": "'bsvbook.guarda.co'", "scheme": "'https'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"host": "'api.whatsonchain.com'", "scheme": "'https'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"host": "'bsvbook.guarda.co'", "scheme": "'https'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"host": "'api.whatsonchain.com'", "scheme": "'https'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"host": "'api.whatsonchain.com'", "scheme": "'https'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"host": "'bsvbook.guarda.co'", "scheme": "'https'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"host": "'api.whatsonchain.com'", "scheme": "'https'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"host": "'api.whatsonchain.com'", "scheme": "'https'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"host": "'api.whatsonchain.com'", "scheme": "'https'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"host": "'api.whatsonchain.com'", "scheme": "'https'"}, "return_value": "'api.whatsonchain.com'"}], "text": "def _normalize_host(host, scheme):\n    \"\"\"\n    Normalize hosts for comparisons and use with sockets.\n    \"\"\"\n\n    host = normalize_host(host, scheme)\n\n    # httplib doesn't like it when we include brackets in IPv6 addresses\n    # Specifically, if we include brackets but also pass the port then\n    # httplib crazily doubles up the square brackets on the Host header.\n    # Instead, we need to make sure we never pass ``None`` as the port.\n    # However, for backward compatibility reasons we can't actually\n    # *assert* that.  See http://bugs.python.org/issue28539\n    if host.startswith(\"[\") and host.endswith(\"]\"):\n        host = host[1:-1]\n    return host"}, "_remove_path_dot_segments": {"line": 243, "args": [{"func_args": {"path": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"path": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"path": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"path": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"path": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"path": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"path": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"path": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"path": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"path": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"path": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"path": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"path": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"path": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"path": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"path": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"path": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"path": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"path": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"path": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"path": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"path": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"path": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"path": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"path": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"path": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"path": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"path": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"path": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"path": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"path": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"path": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"path": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"path": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"path": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"path": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"path": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"path": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"path": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"path": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"path": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"path": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"path": "'/v1/bsv/test/chain/info'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"path": "'/v1/bsv/test/chain/info'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"path": "'/v1/bsv/test/chain/info'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"path": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"path": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"path": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}], "text": "def _remove_path_dot_segments(path):\n    # See http://tools.ietf.org/html/rfc3986#section-5.2.4 for pseudo-code\n    segments = path.split(\"/\")  # Turn the path into a list of segments\n    output = []  # Initialize the variable to use to store output\n\n    for segment in segments:\n        # '.' is the current directory, so ignore it, it is superfluous\n        if segment == \".\":\n            continue\n        # Anything other than '..', should be appended to the output\n        elif segment != \"..\":\n            output.append(segment)\n        # In this case segment == '..', if we can, we should pop the last\n        # element\n        elif output:\n            output.pop()\n\n    # If the path starts with '/' and the output is empty or the first string\n    # is non-empty\n    if path.startswith(\"/\") and (not output or output[0]):\n        output.insert(0, \"\")\n\n    # If the path starts with '/.' or '/..' ensure we add one more empty\n    # string to add a trailing '/'\n    if path.endswith((\"/.\", \"/..\")):\n        output.append(\"\")\n\n    return \"/\".join(output)"}, "_encode_invalid_chars": {"line": 209, "args": [{"func_args": {"component": "'/v1/bsv/main/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"component": "'/v1/bsv/main/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"component": "'/v1/bsv/main/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"component": "'/v1/bsv/main/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"component": "None", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "None"}, {"func_args": {"component": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"component": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"component": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"component": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"component": "None", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "None"}, {"func_args": {"component": "'/v1/bsv/main/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"component": "'/v1/bsv/main/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"component": "'/v1/bsv/main/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"component": "'/v1/bsv/main/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"component": "None", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "None"}, {"func_args": {"component": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"component": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"component": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"component": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"component": "None", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "None"}, {"func_args": {"component": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"component": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"component": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"component": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"component": "None", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "None"}, {"func_args": {"component": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"component": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"component": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"component": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"component": "None", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "None"}, {"func_args": {"component": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"component": "'details=basic'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'details=basic'"}, {"func_args": {"component": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"component": "'details=basic'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'details=basic'"}, {"func_args": {"component": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"component": "'details=basic'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'details=basic'"}, {"func_args": {"component": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"component": "'details=basic'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'details=basic'"}, {"func_args": {"component": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"component": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"component": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"component": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"component": "None", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "None"}, {"func_args": {"component": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"component": "'details=txids?page=1'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'details=txids?page=1'"}, {"func_args": {"component": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"component": "'details=txids?page=1'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'details=txids?page=1'"}, {"func_args": {"component": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"component": "'details=txids?page=1'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'details=txids?page=1'"}, {"func_args": {"component": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"component": "'details=txids?page=1'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'details=txids?page=1'"}, {"func_args": {"component": "'/v1/bsv/main/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"component": "'/v1/bsv/main/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"component": "'/v1/bsv/main/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"component": "'/v1/bsv/main/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"component": "None", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "None"}, {"func_args": {"component": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"component": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"component": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"component": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"component": "None", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "None"}, {"func_args": {"component": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"component": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"component": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"component": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"component": "None", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "None"}, {"func_args": {"component": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"component": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"component": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"component": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"component": "None", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "None"}, {"func_args": {"component": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"component": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"component": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"component": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"component": "None", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "None"}, {"func_args": {"component": "'/v1/bsv/test/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"component": "'/v1/bsv/test/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"component": "'/v1/bsv/test/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"component": "'/v1/bsv/test/chain/info'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"component": "None", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "None"}, {"func_args": {"component": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"component": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"component": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"component": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"component": "None", "allowed_chars": "{'u', 'Q', '/', 't', 'O', '=', '!', '2', 'm', 'n', 'Y', 'd', 'b', '@', 'P', 'M', '?', ',', '+', 'N', 'Z', '-', '&', 'f', 'K', '*', 'r', ';', '6', 'T', 'R', 'i', 'G', '0', '3', 'J', 'z', 'a', '$', '1', 'X', 'H', 'V', '~', 'o', 'k', 'C', '4', 'U', 'I', 'E', 'W', 'S', 'v', 'B', 'D', 'y', 's', 'p', 'x', 'A', '7', 'q', 'j', '_', 'w', \"'\", '8', 'F', 'c', 'l', 'g', '(', ')', 'e', 'L', '9', 'h', ':', '5', '.'}", "encoding": "'utf-8'"}, "return_value": "None"}], "text": "def _encode_invalid_chars(component, allowed_chars, encoding=\"utf-8\"):\n    \"\"\"Percent-encodes a URI component without reapplying\n    onto an already percent-encoded component.\n    \"\"\"\n    if component is None:\n        return component\n\n    component = six.ensure_text(component)\n\n    # Normalize existing percent-encoded bytes.\n    # Try to see if the component we're encoding is already percent-encoded\n    # so we can skip all '%' characters but still encode all others.\n    component, percent_encodings = PERCENT_RE.subn(\n        lambda match: match.group(0).upper(), component\n    )\n\n    uri_bytes = component.encode(\"utf-8\", \"surrogatepass\")\n    is_percent_encoded = percent_encodings == uri_bytes.count(b\"%\")\n    encoded_component = bytearray()\n\n    for i in range(0, len(uri_bytes)):\n        # Will return a single character bytestring on both Python 2 & 3\n        byte = uri_bytes[i : i + 1]\n        byte_ord = ord(byte)\n        if (is_percent_encoded and byte == b\"%\") or (\n            byte_ord < 128 and byte.decode() in allowed_chars\n        ):\n            encoded_component += byte\n            continue\n        encoded_component.extend(b\"%\" + (hex(byte_ord)[2:].encode().zfill(2).upper()))\n\n    return encoded_component.decode(encoding)"}, "ensure_type": {"line": 412, "args": [{"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'bsvbook.guarda.co'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"x": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"x": "'details=basic'"}, "return_value": "'details=basic'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'bsvbook.guarda.co'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"x": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"x": "'details=basic'"}, "return_value": "'details=basic'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"x": "'details=basic'"}, "return_value": "'details=basic'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'bsvbook.guarda.co'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"x": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"x": "'details=txids?page=1'"}, "return_value": "'details=txids?page=1'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'bsvbook.guarda.co'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"x": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"x": "'details=txids?page=1'"}, "return_value": "'details=txids?page=1'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"x": "'details=txids?page=1'"}, "return_value": "'details=txids?page=1'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'bsvbook.guarda.co'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"x": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'bsvbook.guarda.co'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"x": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/test/chain/info'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/test/chain/info'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/v1/bsv/test/chain/info'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'https'"}, "return_value": "'https'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"x": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"x": "None"}, "return_value": "None"}, {"func_args": {"x": "None"}, "return_value": "None"}], "text": "def ensure_type(x):\n        return x if x is None else ensure_func(x)"}, "_encode_target": {"line": 319, "args": [{"func_args": {"target": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"target": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"target": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"target": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"target": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"target": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"target": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ?details=basic'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ?details=basic'"}, {"func_args": {"target": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"target": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf?details=txids?page=1'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf?details=txids?page=1'"}, {"func_args": {"target": "'/v1/bsv/main/chain/info'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"target": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"target": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"target": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"target": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"target": "'/v1/bsv/test/chain/info'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"target": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}], "text": "def _encode_target(target):\n    \"\"\"Percent-encodes a request target so that there are no invalid characters\"\"\"\n    path, query = TARGET_RE.match(target).groups()\n    target = _encode_invalid_chars(path, PATH_CHARS)\n    query = _encode_invalid_chars(query, QUERY_CHARS)\n    if query is not None:\n        target += \"?\" + query\n    return target"}, "ensure_str": {"line": 991, "args": [{"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "b'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "b'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ?details=basic'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ?details=basic'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "b'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "b'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf?details=txids?page=1'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf?details=txids?page=1'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "b'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "b'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/test/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "b'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"s": "'user-agent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'user-agent'"}], "text": "def ensure_str(s, encoding=\"utf-8\", errors=\"strict\"):\n    \"\"\"Coerce *s* to `str`.\n\n    For Python 2:\n      - `unicode` -> encoded to `str`\n      - `str` -> `str`\n\n    For Python 3:\n      - `str` -> `str`\n      - `bytes` -> decoded to `str`\n    \"\"\"\n    # Optimization: Fast return for the common case.\n    if type(s) is str:\n        return s\n    if PY2 and isinstance(s, text_type):\n        return s.encode(encoding, errors)\n    elif PY3 and isinstance(s, binary_type):\n        return s.decode(encoding, errors)\n    elif not isinstance(s, (text_type, binary_type)):\n        raise TypeError(\"not expecting type '%s'\" % type(s))\n    return s"}, "ensure_text": {"line": 1014, "args": [{"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/unspent'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"s": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1ELReFsTCUY2mfaDTy32qxYiT49z786eFg/history'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/balance'"}, {"func_args": {"s": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'details=basic'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'details=basic'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'details=basic'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'details=basic'"}, {"func_args": {"s": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'details=basic'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'details=basic'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'details=basic'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'details=basic'"}, {"func_args": {"s": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'details=basic'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'details=basic'"}, {"func_args": {"s": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'details=basic'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'details=basic'"}, {"func_args": {"s": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'details=basic'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'details=basic'"}, {"func_args": {"s": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"s": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"s": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"s": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"s": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf/history'"}, {"func_args": {"s": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"s": "'details=txids?page=1'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'details=txids?page=1'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"s": "'details=txids?page=1'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'details=txids?page=1'"}, {"func_args": {"s": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"s": "'details=txids?page=1'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'details=txids?page=1'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"s": "'details=txids?page=1'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'details=txids?page=1'"}, {"func_args": {"s": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"s": "'details=txids?page=1'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'details=txids?page=1'"}, {"func_args": {"s": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"s": "'details=txids?page=1'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'details=txids?page=1'"}, {"func_args": {"s": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/address/1L2JsXHPMYuAa9ugvHGLwkdstCPUDemNCf'"}, {"func_args": {"s": "'details=txids?page=1'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'details=txids?page=1'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/chain/info'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"s": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/main/address/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ/unspent'"}, {"func_args": {"s": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'bsvbook.guarda.co'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"s": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/api/v2/utxo/17SkEw2md5avVNyYgj6RiXuQKNwkXaxFyQ'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/balance'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"s": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mmvP3mTe53qxHdPqXEvdu8WdC7GfQ2vmx5/history'"}, {"func_args": {"s": "'/v1/bsv/test/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/test/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"s": "'/v1/bsv/test/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/test/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"s": "'/v1/bsv/test/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"s": "'/v1/bsv/test/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"s": "'/v1/bsv/test/chain/info'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/chain/info'"}, {"func_args": {"s": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"s": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"s": "'https'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'https'"}, {"func_args": {"s": "'api.whatsonchain.com'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"s": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"s": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"s": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}, {"func_args": {"s": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'", "encoding": "'utf-8'", "errors": "'strict'"}, "return_value": "'/v1/bsv/test/address/mpnrLMH4m4e6dS8Go84P1r2hWwTiFTXmtW/unspent'"}], "text": "def ensure_text(s, encoding=\"utf-8\", errors=\"strict\"):\n    \"\"\"Coerce *s* to six.text_type.\n\n    For Python 2:\n      - `unicode` -> `unicode`\n      - `str` -> `unicode`\n\n    For Python 3:\n      - `str` -> `str`\n      - `bytes` -> decoded to `str`\n    \"\"\"\n    if isinstance(s, binary_type):\n        return s.decode(encoding, errors)\n    elif isinstance(s, text_type):\n        return s\n    else:\n        raise TypeError(\"not expecting type '%s'\" % type(s))"}, "connection_requires_http_tunnel": {"line": 3, "args": [{"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}, {"func_args": {"proxy_url": "None", "proxy_config": "None", "destination_scheme": "None"}, "return_value": "False"}], "text": "def connection_requires_http_tunnel(\n    proxy_url=None, proxy_config=None, destination_scheme=None\n):\n    \"\"\"\n    Returns True if the connection requires an HTTP CONNECT through the proxy.\n\n    :param URL proxy_url:\n        URL of the proxy.\n    :param ProxyConfig proxy_config:\n        Proxy configuration from poolmanager.py\n    :param str destination_scheme:\n        The scheme of the destination. (i.e https, http, etc)\n    \"\"\"\n    # If we're not using a proxy, no way to use a tunnel.\n    if proxy_url is None:\n        return False\n\n    # HTTP destinations never require tunneling, we always forward.\n    if destination_scheme == \"http\":\n        return False\n\n    # Support for forwarding with HTTPS proxies and HTTPS destinations.\n    if (\n        proxy_url.scheme == \"https\"\n        and proxy_config\n        and proxy_config.use_forwarding_for_https\n    ):\n        return False\n\n    # Otherwise always use a tunnel.\n    return True"}, "is_ipaddress": {"line": 456, "args": [{"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'bsvbook.guarda.co'"}, "return_value": "False"}, {"func_args": {"hostname": "'bsvbook.guarda.co'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'bsvbook.guarda.co'"}, "return_value": "False"}, {"func_args": {"hostname": "'bsvbook.guarda.co'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'bsvbook.guarda.co'"}, "return_value": "False"}, {"func_args": {"hostname": "'bsvbook.guarda.co'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}, {"func_args": {"hostname": "'api.whatsonchain.com'"}, "return_value": "False"}], "text": "def is_ipaddress(hostname):\n    \"\"\"Detects whether the hostname given is an IPv4 or IPv6 address.\n    Also detects IPv6 addresses with Zone IDs.\n\n    :param str hostname: Hostname to examine.\n    :return: True if the hostname is an IP address, False otherwise.\n    \"\"\"\n    if not six.PY2 and isinstance(hostname, bytes):\n        # IDN A-label bytes are ASCII compatible.\n        hostname = hostname.decode(\"ascii\")\n    return bool(IPV4_RE.match(hostname) or BRACELESS_IPV6_ADDRZ_RE.match(hostname))"}, "_to_unicode": {"line": 78, "args": [{"func_args": {"obj": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"obj": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"obj": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"obj": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"obj": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"obj": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"obj": "'bsvbook.guarda.co'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"obj": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"obj": "'bsvbook.guarda.co'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"obj": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"obj": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"obj": "'bsvbook.guarda.co'"}, "return_value": "'bsvbook.guarda.co'"}, {"func_args": {"obj": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"obj": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"obj": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}, {"func_args": {"obj": "'api.whatsonchain.com'"}, "return_value": "'api.whatsonchain.com'"}], "text": "def _to_unicode(obj):\n    if isinstance(obj, str) and sys.version_info < (3,):\n        # ignored flake8 # F821 to support python 2.7 function\n        obj = unicode(obj, encoding=\"ascii\", errors=\"strict\")  # noqa: F821\n    return obj"}, "unwrap": {"line": 23, "args": [{"func_args": {"string": "'\\n                    %s was explicitly tagged, but the value provided does not\\n                    match the class and tag\\n                    '", "params": "('asn1crypto.keys.ECDomainParameters',)"}, "return_value": "'asn1crypto.keys.ECDomainParameters was explicitly tagged, but the value provided does not match the class and tag'"}, {"func_args": {"string": "'\\n                    %s was explicitly tagged, but the value provided does not\\n                    match the class and tag\\n                    '", "params": "('asn1crypto.keys.ECDomainParameters',)"}, "return_value": "'asn1crypto.keys.ECDomainParameters was explicitly tagged, but the value provided does not match the class and tag'"}, {"func_args": {"string": "'\\n                    %s was explicitly tagged, but the value provided does not\\n                    match the class and tag\\n                    '", "params": "('asn1crypto.keys.ECDomainParameters',)"}, "return_value": "'asn1crypto.keys.ECDomainParameters was explicitly tagged, but the value provided does not match the class and tag'"}, {"func_args": {"string": "'\\n                    %s was explicitly tagged, but the value provided does not\\n                    match the class and tag\\n                    '", "params": "('asn1crypto.keys.ECDomainParameters',)"}, "return_value": "'asn1crypto.keys.ECDomainParameters was explicitly tagged, but the value provided does not match the class and tag'"}], "text": "def unwrap(string, *params):\n    \"\"\"\n    Takes a multi-line string and does the following:\n\n     - dedents\n     - converts newlines with text before and after into a single line\n     - strips leading and trailing whitespace\n\n    :param string:\n        The string to format\n\n    :param *params:\n        Params to interpolate into the string\n\n    :return:\n        The formatted string\n    \"\"\"\n\n    output = textwrap.dedent(string)\n\n    # Unwrap lines, taking into account bulleted lists, ordered lists and\n    # underlines consisting of = signs\n    if output.find('\\n') != -1:\n        output = re.sub('(?<=\\\\S)\\n(?=[^ \\n\\t\\\\d\\\\*\\\\-=])', ' ', output)\n\n    if params:\n        output = output % params\n\n    output = output.strip()\n\n    return output"}, "all_items_common": {"line": 20, "args": [{"func_args": {"seq": "[['a32697f1796b7b87d953637ac827e11b84c6b0f9237cff793f329f877af50aea', '07a78d55fc17a2809e031116e71ac63faa6c2ea9e29480b4fa59031683b506b8', '9fdbf640c879c57bf9cfd389b3a0649762c4cb4093b9cccd6ffc5fa06f8a28de', '18f5cab07cb6ce1e0e84fadf1d8a529a66eaa7dda6061a75e51881b6121b3051', '82fd6fdcc09627414faad2b9c24500ed8ddeb284b6727e4faa5a666d06282369', '0570b083fdb91b62029f18b94b438a2c55d18a849f53aa332083296824ae0a86', 'ba13a6770ee2cb88c8050f97469c022fe9d502fd91703667972ae2e168e8e373', '7eb8c857dc111decf4fd0ae6276846c771401be9384808d80133827155811abf', '80ce03bd6fd99402b5b5982b7fec23dc22fb48e78b4c07547e5ea4c9e28ee695', '88851bdcc1bb3e9728a3d9addf4509429bf0f2e279194871ab322598c1eef331', '00499461136da89b69bb8f252ef3e13ed57fa99a009e68553d534dc6a0cff322', '91bbf3dbe790ac234763ce1d28c3c269f7b34d4e6f0ced765aa0450ce742797a', '87c4acc7c46e0cfdd2442c211660e2817a06648d1d4211f5aa82d94b328e0cb4', '27c5c18b9ea8793b4d2a5dc911cb731d929c74366bdf5977bd5548f41a19fbae', '1a2640f142fa756a05b7b3ee4ea54cc85031bf7d3441b86d4e41413cb0936634', 'ad9aba2c84406fe2b2b082c0f3e1e191d1de41bf261a3707081b2017b3e1b587', 'e0348c828a4181d9610ecea00f003c462e5b7000b90dba1d7bc59e487135f476', '56b427e7f06f8ed8ea01b384c0e1d1c53ab3630f3905396db51d6208da1edc9e', '64d69a29e214056cba90f09467058fc1f8e8a2b858b24c907ef38f97f6d4a30f', '478728b706381fb19ef91fa90842c8c53ae657aa91fae3b795e157bb49838040', '0f29740915e8c301f9dc5ace8bb02a69157a8dce891fa43446f5cdae17af168a', 'e4b6c68f54e621e46fbd15ae7c2d5f83007972234d9bb3f55fd8554732c5b829', '13d109532af5241f9f343fa77a46e04bc15528e54d4559c2975f227c2d223686', '21abf8343f5f94184ff01cf9580b20aa8c211e45a40474d087720bcc9192ad23', '8ad6b0bce92798998f2bde8518c6fe71493146969fcde379dcae4454ac3ec5f9', '991d9cff432a3edacd4b5b3062d8b4a6866d4cc09f9eed2f1d7dedea53d9e049', '7b63ccd41ab4b2dfac21572d03325ccfd5e8dac4c9e87d41d7b63d1fda8081a2', 'bfaa6a1d42796b92e1f4231cd77dc1ff9423f0b8e802f7279382558be5d427e6', 'c4d9d954d80b86641a8b23a081f94a4937b32de38c4f66b74eaef8e02283f3fd', 'eadc6f937ab3a7a496e46ec7c07efbbbdc0daff0fc085ebda37f6db169590783', '1ffce7ab2ab6d65f5f085800a46ba8ef7e4baf29ef0a63d699de99965dcbc8b7', '6cfb179d72b9e849ab996ca815de69e8c87198192373b6eb21ba878a23245005', '829a2107acdd3b5bd48bac79def9305ffb96bfe9293939488a2c4e11e2a0553d', '526aeaaa36a2ad9e10f6b593713a0e1fd2204970ec7f3987639ff025e095827c', '63b2112232f2672e4366779f213ad939b16483dee14c3b785900967dfb79cdaf', '93b82671d84cb9599f8501581860929a8f53952733505c2d91022b923f19df1b', 'c0c6e997f9a5361c94d45d04fdacc2e24ea9ddb6035633132bc949242236cef5', '8b7d36365a85bd6a57c4d7f0f2fc39c9c83732373afabcf736ac0037eaa63160', '4f3775fa3eed99e0588e13c4826dfa0ae8fcd90a804c01af8037c5671191900e', '2e594b1dd4eabc8bbf5cf5fe7b94c987b36ee76805508e5a1d2c316ddd1614f1', '6448828ebed74e4cafb5a94866cbe43310621f397be97c4315ca6725d8ace1ae', '5c5ecbb47a99cc649f5ea9f28a3c06a04e2755e44211781007ee41360e31a0a4', 'ea6252165fdf4741db7bdb52c280144320cb5e0260376ee8f34714c5158887b9', '6c17e1baa7e5e6dd9a285fb17f969a4f231262830ebd5a6c75faabf8e557d0ed', '704e370d450c00c6e575d3575a035afb06946ce6bc79dd0b59360b5dfb517ed7', 'd1bdeefd9c24e8798744017a47f3f6894fe6734dd286e395df67577213d3093c', 'a6066e18e3a0da1e4b3980ec5dc3205af144d9117dfa59f7b236dcb37e7ba116', 'ec1402ce882c029880cbe9326b28e9025d3003eac345f97adc7b154de41c9c11', 'f8f80c17beec8bd6ec4060db485cbaa47857f2aed699a9c24a63fc5b1c9a5d69', 'c40a83ed8912e40448790c9061472646de54e375d8f3532769bea20be117591f', '84770518e8406740c5774517dce7044a207597025f337560d2505686b16ee2b9', 'cdfeab0046c816c0baf240c9990be89a83a29e68962f369a75504480fe1fb0ae', 'a2eea338a1207b1f4b45b558e349a664556f60b5602d8ad084b3e36cd9968411', 'b354f5bc9d7c194f4dc8ea09920c3cb79f396d1e4675e0a259afbf3e456b39fe', 'a154244e35c1dd220e324def70c3bc3585fd789da9420ae7b20f805057c584e6', 'eba3ddb88961fb9526770b59f0be39cd9b20cf5fda506117f43c5688b1a9bac9', '7a3857e2a3e64c6c0b13ad280110d4ebc45a7019ce7a43ba9909b35bb64eb37f', 'c925672834f5e19bb6390ef861c62aca2ee578bf801ea441efe13a6a5823c54a', 'dea13d5e74f3b5dace5896504dd9d3ba4cd3de9ffef7d8744503a81df1390be6', '5d6647b525d6316f0ccf2bda446966770447eea394c05ff77330b253c9a0473e', '54df89570ccb5cc40ca66cb8a4fcb7877916f99928bf8f04a05e74410c5e98cc', 'a8bc33ede8b14f32d18deb9e3a826d92dff5a40672afa4d4df064a4a8230abb5', '0008e0182ac8f8f389215489ef27d09ed9878fafc1c196efd9690cb95432f364', 'b2226ff35d689ff1280f117bd550de3b182ed01c6c81af12856234514991af13', '0c444c3e6f5fcf3bb765726d9684f395429318ace42bfe7f22f49cde96e9d920', '3b4c9225947027411dcd75f222dc23898748db8673627dab8266890dbfd0cbd3', '66909a69b80221c8cdd6439121e7381dbf1b3bdf423329ec8ef3f8ace70229f8', '2a9d75fd7f48a96be8fd30e5c5191198d2723ffaf95664ed6ead2387bbbcd21a', '08029f1e995889c9c7c76752432789f4f5bad7b73032a41e9edf2a2c0b8b9807', '2612553a2c4db66817390763a581ff6d814479a9825faca926c491212a79e20a', '49f98a9ce9d5e4c3931361bec7005aaa705a1eb59d453b866f4a7d1a3be26df5', 'a8c19996a0c2c16e2c212325e4869760d682cde5d43c4eda8beb666e85fb5454', '2e78aa91ed5db8e3b470335a7972fcbf018492bcd09364e37e0521be02413f1f', '892d66da6fcbed2a08c02017efeb0ae59f7622542d74357f43d461d34f666b51', 'b687382ed1311baaad82caa80a5223fad1675ebc61e3d6b672cfab4f0a6e46c7', 'd3c555f6b9959ec1bc638f318846621ba64cd84557694f6740435d99f90811a8', 'f68f44fbb2f6a71df93133cf632681b9247f2cafa44a9ebd931c61de11c15079', 'f782b9ecaf6115a77bcd54b73b8cf249e0cdc1d5de9f542f2a6e30543e54696c', 'b3c1d8411855fff7ebdf1ee297d39556550870e38886208539b240c19846019b', '8dc7fc3250622998ae247b3805eb84179feb77dc050584da27a742c708bf759f', '9d756fb491a10fc6ffde2f63ff5055d489eb318873d5cd0dcb6ae5ae5674b3b4', '884ed1480e1b80bd16d3bfb06419fcee47f762ae4c0a387217ebafd740186ef0', '77ddce777cbceaa4cfdf82a198c56c13fd4760481400091e776e8a7fe3d6d24b', '4d4368cdf18b874b85ea218d9dcaf5762d38f2e9e0ebaec6c852ac2500deca2b', '7de76c8281dbdc5a64464ea94dc109e7672625e92d1b9a149b5cfdb729997a79', '23acf21a53a2b6f6cf379645085cff65bfe3e37df96fa86d351f73138efae6fa', '4d747c67f86a6fcc9fc88fcf16e2115e9994f994eef6cd7dc351062a6a3d5b68', '251c7f15793d64a94df08be7a849a55f0fa907cca54f3dc5a94f20bf5aaf298d', '4817098d73b29c2462880be2d4611613fde9bf3fac2921511adcf48a323d6269', '1f73b5815f98d4c13d1b35e8a1e5b7a6d318cf2e6d09985908e8601fabdf44da', 'fe878d70a60de31be9d3004beaa33a6700af147c52c27620988181d6bee9dc8b', '84810d3a0bf0eafd7f91bb7455e18ccea60b40211eb8701ff4fcf20dd1541942', 'ed5b829a927f8f325f0af6ad504f4b442805513de50e1980608ab7f35e494d23', '0a5549f4be30076cdb18bf613f0f24d0ec8af2a738d6cddf93e4b57082d6f6cd', '11e43c69873fea132eca999547b27aae50b47d324239f1c849b696d614f63e02', '1f5edb6695d9b1feba673eab5696c2a21bd2de986578581a1f343ef2ca49f1de', 'febfd1f5863f355dd076044821423449e8e0be933b66f0dafb8b67338b5c40fb', 'b46555fdfc9b6c9d0c54b9cb6f607568777deafa3a02249a5f0c0dd48530e719', '57a6db882f35aa0e820794629b3fd74c0978cb5100e2788dfe3b13714162614b', '269d8eb9e601f8066ce1e5b2a9311d8a8feec2a9cd6710438d2b8f8a4765b1f0', '001d936bd9b95b06b24b30a392cf2fb5e81a3a3a0fe1076fb745048d5f1ba058', '336e8a364b6097e00bc83c383cfd63f1b71035df9412d4172597cdea7cedddb4', '7cb7c0eb5d8d44ed0aa7aea5220477df3b55dd1b00031d1eac7a29125d28f02b', '10363caaf2906b084a1a9e84a520f32b6b213e59d9378e26a800fad37cff1158', 'a50fb39d7c2ad9fe0ba2f9b9ab0e3593d49d1ff00120bc30cf8c568d5bf56378', '269f4eec875a22bcb89e45e232004ce518b074b18ab8f76e27deff263411cbad', 'adec36c9c7f979aa638bb6c4f43a7b3f7641c14dc67e72508abac0a6a4dfe00f', 'bf47c654ee6329bdb1e07dbc783e959d10e431775861c9a5ebed0e3e51f05906', 'bd1182f6b676c13dfc0ab28097dc43eac43554006854ab785b20b4a6bb307b73', '4e2310ee5f5d95ea17878f558406e24d10e6234a614fd960bbcddcb2ccd25dd4', '686bb67995439a03476936970fef95089c565bdb6741664588fd58478b7860f3', 'c6a87c513eebc4a47a9e529a9564fd7d263de44cc7fe2e6a061aafb09a6906a5', 'b4d90ddcc8d2fb30ea4889e5319cd9026c7cefc0a4338e63c117dcb16ae59603', '45252e4d10a0371ccccb48dcdd7c42c697fe7bf232ebb2d462af8a4f85474420', '4960a19eed992dfb402d0d3efa899fc66515c54a20bf08bec7fbf5bba299eb95', 'ec444b55c26445082a439676608cf269a2d9babfbabc7e4166d2ee89bdefe061', '196bfdf96535bbbadea6130366852ff825461f954272eb5313afbdd604201d10', 'c0a95d7c4f4c226e84799ded59e93d48063c799367d7154a0538e80aff69691f', 'ee99ffd05dbd5eca72251546c0bb2f887eff6c7f32ea79d28901d830d437cb6d', '8a0d0c124c6b77e937b959350ba3008534677762397baf8d68ab1dacdf79be67', '4a70cc290607cf1b3d358f96c1ed1f83ae1b097070f89c914e001cf732b1c3fa', '0ceef066efa3664fef7d98420daf339967cd37b5aadb72d7bb701bc92a6c5de7', 'c5eb47ec5ab9248903a905f9524dd2fe72a0a320c5f04a9f76d9a1b02c021a78', '04ef35699d713641228c839f4763ededcd6f368ee90cc427c97e091751bd80e6', 'a0c57d52f0c53487342cb7f99e8a5249741ec952cffa93204629063921bb25f5', '7f8a842de1116cfde8fa14f3fc9a1318a674f114b386b3bbe7c31cf538fce99f', '27602fc32e9a804bb75be9dc67d3e052f11c63118fbb2fe836eeeea7864cd036', '43074412a082ed8cbc621a407e891701a69aa39d00c4c9ec2c46cfaff01f4cf4', '5b0298526c97f6412d1c093051b04405ed5c95455ca7f05889492df6aa48741f', 'e889d04a1de5f9edb637bc37a7c6b8366cb6b921c858fd006c15f686a8c82bb1', '07e6062efafcc626a1b00e40cdf631eb4e1a18ae8494db53f41eb19a9ac663b0', 'f91ad18de278c2dcdde608474b127cc3ced0dd97a4feea3b8cc6ddb3520c9da2', '7e41da5dca99a5746add768e347589b535cd3f381088253f6254e6e84b7b34cd', '11adb79f9ce23a0eb315e802d1b84565074fc4baa345e7fdcc2c6091b0f24782', '228538dfb91f2e44d9251fb35e6e27943aca9ea712c423f9da7d0676b652a5c5', '9a12b54576598e4e4d95c8ea6613089e572230642cf8e58c8cb018114ef9c78c', 'f4901d0a7a50086aa09b11854a2b29402f04a317b4f14a39c2de0a8462e3b3df', 'fb74c39476d08a0aa60a9721d7a6e40bf5b1ba99470249a65bf2ba07e82fe809', '23bff6715c450f2af6f56a42862ac5006eb6037fbee549c5820ddaf2afca7e5d', 'd07571f366db3c7769e74b2c52a11446f6e52107327beccf367d7b00a243df07', '406aa2cce2cab9a606a1eb0675c7b6987c45e748b9f08d6627855cce91987c1e', '8328a2ab8d4d22f8a098c8fa5a113a4a77c708c7d2c8fd358dd0cf0633b1edad', 'd41cfbc62295217d85a75c17b8860a6ad2e9b8871a6502b5980932a855792191', '79781dd4afa7f34bc5d44341e47867c297e1b70614377a3e080f2a038a835691', '3b3f41f7ded78c4f2e18f5decc80f311e23dc9456b9cb387f618925c94c910fd', 'e48a2be73401a9daf8e560e2d38702fbefe647dbf08d96c0b532f0d6cb92d7fc', '7270d303e58506d7199f9ebf1895fc46d0d0f1111caccb3bda8452974950817a', '2f183e723d46c40822fbbe4cfb6a86812d37beb085d9e0b051bedb8d24f5abec', 'aab2c4f7b5b8491da177b8cd50fee763ca093c7f8f4d0bef3cbf4a3b85d8d8af', '10c7807ffc77707bd16415a03ae2896eb09510178824abaa9a053faa531c7af9', 'fbaabb5c9f4f4ff706f075c60ecb64c5cd38d6d726abae3228ca76242b3efe54', 'af67af3c647a78311f2f6fc0509b77012aee27f03859e205a9ec409172268519', 'b27033fb1e73268612fcb81f0befa18c3fec496719cbe8dcac5c6139ba5f0d39', '50348d8426021c0d8b8f3b6640b089e488229714e11a4f428f70d7579ea614d3', 'c30b9855eb5d926c1a5b5febcc9eb34f87568f3f791b8529c49fcc178a98ae84', '1762080dda92f7dc58bdae0345ca9e940b1296b4e35fb8899cd591c12336a845', '711184255c2ceb868fa8f3cc86dc56b4e790c997ccda51de096ae77f100ecdcf', '6cce50fbdcc1299f80074f3a9a0f92079205026aab5213d811bcbff4928eea37', '4c26341c2878e201cad31bad6d3b380a11fc9c1e20d2b6f60655d34892c9d57e', '186eddf72ed79b9081c5b8b4dbe64f08027dba19223c264295e27e804a9a2679', 'c9a3fe5063936cc685fb3a53d3237a200debcf4d92ae25d46ebc5c6ada837d6a', '3b6efc9b3642b3a68dbf9a5857cd342f281d4600192803eef028a86f3badbca5', 'b264d7b5e947d6dd9a48ad349e3d5dd7f354441e9ac046330cb309fb94eb62c8', '2957eed3e704c3a9cf65c1b4fedc0beb1626b5c9efa719f81f39675d5fae6c80', 'b1b3505f36c9562ac30d29cd101e6d4f94b810abbbf471c1309519a4eb9fd9b0', 'c6c43f7a2bca90f3e94ef4625bd48477a924624c8f17a4878060f6d912d84dd1', '88c5d62fffdbc599378fb8519b7aca46774776f6bf5768b1014b7a4d7715e1ed', 'a415a2f139d5836a8be9d04a4a1badd0241bb0571c29b8d9f8d0561c0f1f7898', '44d776a55ff2c1992f954190e93c7f377a4b4db0f9ccc51ef1d09a88571554fb', '722984a2a72ebeb58f28ba6eb879c72ce29508c32647209328a7ee7c0adacdb2', '2a175dc3217754ddf810114be144d488ce5a67fe21e93d1ff5f715b89414dd95', '184140ff8aa07a2ac5ef6343ec5644b5f2b0c57dc1125cafa4a53bf4b5de72bb', 'a46682ce58c64147b1d8148e8c97648e443820e17ed181e8d512713208bb1d17', '693e8530869a97e184d59c6ee21c0ac3b5d0a08c82bfb02e36d72a0f1c54ad44', '5c30249487ab8a0645ae35a8b6eaa387a15769f5727892bb16928a38735f6058', '069e7049490eb4221c90aebbfdfe578b1b9d27cbc67ac9c078a95effb18330fb', 'bd88e02b68aaf02027ff440759de0c0dbff5be27b5ad8f4fff6243512fcdab87', '07482d2ac1fce6b85dfa8553337b6ae78225d3cb068385a9e31d6a2dededffe5', '0abc096d1aa5258ea8e61e727ce3d33007337134cbbfc48468fd72a446640a86', 'c65ec44bb248c4c84e97c699cbb09f4c29713970dd7d8d616c9e191a812ded70', '8c0e65a1ea3d4e8749de30eb6373f7ea056c7dfc3e4b1d77232333f1d50d91c4', '984c2c45ce56f89736e2c63317eb35249ebbc039c426246012c1f7f9442cc581', '1668e574e0f100f47df1c2ab07404b2a14c40c369495e17a484cc0dd166d7721', '563ee90b94c0e391047d2460dd8674b3b361043ec217026c49f9079932d4f372', '3e5cd4d1683e0f1398f1f528da4a4b41a0577f2551d17ced405d2a35fc4d7f5d', '42f0ae23141911b60b3ca60b007e17c50f1a8684256d33f757c8bf3efa488006', '06de423df78f7fd8c4059c0d8ee0a4281d6db2fc889178e73c26966c92581f94', 'fe98361e260a0c4625e98db2bbcd09bfc5eb3508fa1be24b4f6e3328fe8d1e8a', '22de9082557ece679b4db48b8d1d777308ee60e0aa51ba9c8c45ce2015a19e19', '760e4aca8846c84c9c5c632579e2fdee0933615de62aeede2d18486af9338a34', '8c18ad12dbb37698ec42af316227451d569ca862c9da0c8ea1aaf653d8649d9a', '25c6507d04793c98a23c42693a3572a00ed88fac9b9d717d0c9f0b24daba8cb2', '1195ea5c3f07d46fe2e53c405c52cb99dd3c378e5d48b3a584aaeaf72cf1b4a8', '7366a9e548b4bc1b2eeaf0075977fc860af3f64a3dea5f72039067e96b81b175', '3e4d3b025b8f7a7800fac7bd1b53f9555ceae45aeeac9a86583073c7f08a4aa9', '9bdbc9fb4c399c2aeddc040ad4a0f1b417a32f37741fe83acd2989abe309c3aa', '062a8c2851297f4e0db8e08b371362ceb1f0289336062359f0a99bb78ddc1b5a', '32860d4d1e609edf21dee3559f4fed5491ce78897f039098f5717d7379c0ef17', '161751e5e96b21e38fd85c73421ccca163fe78d72e8b92c95310f59d8a805813', '8088797179c260555148ca914a93b2c60a171672c869c7638491977a863ade7b', '029dc7fafdb936c0e5d1dca09b3236a7780ec0bad7cd9c140bd2c26a3580aeaf', '9a93d927584877fe053cb9d1e12dea4d52bf454b2dae53f031777859ed4ea345', 'b9abaa7020c9d349fa36c0836123fb4b7e7a9efa608c09f3156ea460c6e31f62', '5dc277d9d532448fdedcba071ffa9859de01ee37330fe6f34767a229bfa8ba8b', '88e14e4fad731fce4cc555049785751afc2536df4d9a43057fe21b0a93c75315', '25789e0140240239ec5fc22d5ffef092e71fd9274252afcf9f1ca4fdbd84353c', 'f0ec5f80930fbf3e3a0002464e7a67c340545129f48809f4bc555b630aec88d2', 'a0d87f754fd83528a945c7f9642554e782b17d13842bc18dde0aa0d0a62559b8', '14d7d5dabbc1f8c727530cf3b0e54a8b4ea614ff06884bbeeb8df6e186d4ed96', '8f0ef8b4aefa8380fb7cea94f409d07ee006e22db132b71624e4b8eb4bbee2ec', '68eda916d93c63f30ef973780ce102ed432a4edb63421226cc53e814d7793a8e', '377f7e127670fa431382a67fde7f3382809ae052842f544dec963204f1292cbe', 'be547387b59aace46900ba340cfcab6be6dd2c3bba78199eed12dba3fdcdb851', '7e80957db4514d150899b308b0472b51ce7b3dbd979f2b3e80681cb9067dac13', '4c02ef2a16f6d817b46074672532f5ea109fb0bfb78964a74f3e16503023022a', 'd333460a18628ba0731062d67fc6608c2ee746a095fd43bce3e3fb0aad372cc8', '952c71b6ebe945a817125f27d1e6cdf08a6a0205628a8ad6c478e6cca8d1d061', 'b96be39ce1238953d56da917ddc4ebcfdbe9da6c4d0b14a142cc3f5e5db5a5f6', '98902999abaa082a014ba49771c5fd940c5a4fa48fe9c7c4e8bf4cb880768a0c', 'c0516410ee90fae59218e9d360a9c51a676278abfc081a5df2044ef96a45214a', '870b76dec1f99fdb37bb7057f90a9b8d914a33c825f2c909d660eb6c046f1058', '050e222545e75c06a73b9789739fb33a143c45c8d21e6308c12bb7908c2257f1', 'df66cb1e3b9328a7eb84af893ec77fcbd0ccb9b00ca908692e9033476543f3af', '9140e563512ec9a681df9794c7108be96e805a8ce56eb48979012e38dd2f70ec', '3466c84ce020a49368e6cd71221f383ad6d9c1521372a9e8cf3adff332f21718'], ['3466c84ce020a49368e6cd71221f383ad6d9c1521372a9e8cf3adff332f21718', '9140e563512ec9a681df9794c7108be96e805a8ce56eb48979012e38dd2f70ec', 'df66cb1e3b9328a7eb84af893ec77fcbd0ccb9b00ca908692e9033476543f3af', '050e222545e75c06a73b9789739fb33a143c45c8d21e6308c12bb7908c2257f1', '870b76dec1f99fdb37bb7057f90a9b8d914a33c825f2c909d660eb6c046f1058', 'c0516410ee90fae59218e9d360a9c51a676278abfc081a5df2044ef96a45214a', '98902999abaa082a014ba49771c5fd940c5a4fa48fe9c7c4e8bf4cb880768a0c', 'b96be39ce1238953d56da917ddc4ebcfdbe9da6c4d0b14a142cc3f5e5db5a5f6', '952c71b6ebe945a817125f27d1e6cdf08a6a0205628a8ad6c478e6cca8d1d061', 'd333460a18628ba0731062d67fc6608c2ee746a095fd43bce3e3fb0aad372cc8', '4c02ef2a16f6d817b46074672532f5ea109fb0bfb78964a74f3e16503023022a', '7e80957db4514d150899b308b0472b51ce7b3dbd979f2b3e80681cb9067dac13', 'be547387b59aace46900ba340cfcab6be6dd2c3bba78199eed12dba3fdcdb851', '377f7e127670fa431382a67fde7f3382809ae052842f544dec963204f1292cbe', '68eda916d93c63f30ef973780ce102ed432a4edb63421226cc53e814d7793a8e', '8f0ef8b4aefa8380fb7cea94f409d07ee006e22db132b71624e4b8eb4bbee2ec', '14d7d5dabbc1f8c727530cf3b0e54a8b4ea614ff06884bbeeb8df6e186d4ed96', 'a0d87f754fd83528a945c7f9642554e782b17d13842bc18dde0aa0d0a62559b8', 'f0ec5f80930fbf3e3a0002464e7a67c340545129f48809f4bc555b630aec88d2', '25789e0140240239ec5fc22d5ffef092e71fd9274252afcf9f1ca4fdbd84353c', '88e14e4fad731fce4cc555049785751afc2536df4d9a43057fe21b0a93c75315', '5dc277d9d532448fdedcba071ffa9859de01ee37330fe6f34767a229bfa8ba8b', 'b9abaa7020c9d349fa36c0836123fb4b7e7a9efa608c09f3156ea460c6e31f62', '9a93d927584877fe053cb9d1e12dea4d52bf454b2dae53f031777859ed4ea345', '029dc7fafdb936c0e5d1dca09b3236a7780ec0bad7cd9c140bd2c26a3580aeaf', '8088797179c260555148ca914a93b2c60a171672c869c7638491977a863ade7b', '161751e5e96b21e38fd85c73421ccca163fe78d72e8b92c95310f59d8a805813', '32860d4d1e609edf21dee3559f4fed5491ce78897f039098f5717d7379c0ef17', '062a8c2851297f4e0db8e08b371362ceb1f0289336062359f0a99bb78ddc1b5a', '9bdbc9fb4c399c2aeddc040ad4a0f1b417a32f37741fe83acd2989abe309c3aa', '3e4d3b025b8f7a7800fac7bd1b53f9555ceae45aeeac9a86583073c7f08a4aa9', '7366a9e548b4bc1b2eeaf0075977fc860af3f64a3dea5f72039067e96b81b175', '1195ea5c3f07d46fe2e53c405c52cb99dd3c378e5d48b3a584aaeaf72cf1b4a8', '25c6507d04793c98a23c42693a3572a00ed88fac9b9d717d0c9f0b24daba8cb2', '8c18ad12dbb37698ec42af316227451d569ca862c9da0c8ea1aaf653d8649d9a', '760e4aca8846c84c9c5c632579e2fdee0933615de62aeede2d18486af9338a34', '22de9082557ece679b4db48b8d1d777308ee60e0aa51ba9c8c45ce2015a19e19', 'fe98361e260a0c4625e98db2bbcd09bfc5eb3508fa1be24b4f6e3328fe8d1e8a', '06de423df78f7fd8c4059c0d8ee0a4281d6db2fc889178e73c26966c92581f94', '42f0ae23141911b60b3ca60b007e17c50f1a8684256d33f757c8bf3efa488006', '3e5cd4d1683e0f1398f1f528da4a4b41a0577f2551d17ced405d2a35fc4d7f5d', '563ee90b94c0e391047d2460dd8674b3b361043ec217026c49f9079932d4f372', '1668e574e0f100f47df1c2ab07404b2a14c40c369495e17a484cc0dd166d7721', '984c2c45ce56f89736e2c63317eb35249ebbc039c426246012c1f7f9442cc581', '8c0e65a1ea3d4e8749de30eb6373f7ea056c7dfc3e4b1d77232333f1d50d91c4', 'c65ec44bb248c4c84e97c699cbb09f4c29713970dd7d8d616c9e191a812ded70', '0abc096d1aa5258ea8e61e727ce3d33007337134cbbfc48468fd72a446640a86', '07482d2ac1fce6b85dfa8553337b6ae78225d3cb068385a9e31d6a2dededffe5', 'bd88e02b68aaf02027ff440759de0c0dbff5be27b5ad8f4fff6243512fcdab87', '069e7049490eb4221c90aebbfdfe578b1b9d27cbc67ac9c078a95effb18330fb', '5c30249487ab8a0645ae35a8b6eaa387a15769f5727892bb16928a38735f6058', '693e8530869a97e184d59c6ee21c0ac3b5d0a08c82bfb02e36d72a0f1c54ad44', 'a46682ce58c64147b1d8148e8c97648e443820e17ed181e8d512713208bb1d17', '184140ff8aa07a2ac5ef6343ec5644b5f2b0c57dc1125cafa4a53bf4b5de72bb', '2a175dc3217754ddf810114be144d488ce5a67fe21e93d1ff5f715b89414dd95', '722984a2a72ebeb58f28ba6eb879c72ce29508c32647209328a7ee7c0adacdb2', '44d776a55ff2c1992f954190e93c7f377a4b4db0f9ccc51ef1d09a88571554fb', 'a415a2f139d5836a8be9d04a4a1badd0241bb0571c29b8d9f8d0561c0f1f7898', '88c5d62fffdbc599378fb8519b7aca46774776f6bf5768b1014b7a4d7715e1ed', 'c6c43f7a2bca90f3e94ef4625bd48477a924624c8f17a4878060f6d912d84dd1', 'b1b3505f36c9562ac30d29cd101e6d4f94b810abbbf471c1309519a4eb9fd9b0', '2957eed3e704c3a9cf65c1b4fedc0beb1626b5c9efa719f81f39675d5fae6c80', 'b264d7b5e947d6dd9a48ad349e3d5dd7f354441e9ac046330cb309fb94eb62c8', '3b6efc9b3642b3a68dbf9a5857cd342f281d4600192803eef028a86f3badbca5', 'c9a3fe5063936cc685fb3a53d3237a200debcf4d92ae25d46ebc5c6ada837d6a', '4c26341c2878e201cad31bad6d3b380a11fc9c1e20d2b6f60655d34892c9d57e', '186eddf72ed79b9081c5b8b4dbe64f08027dba19223c264295e27e804a9a2679', '6cce50fbdcc1299f80074f3a9a0f92079205026aab5213d811bcbff4928eea37', 'c30b9855eb5d926c1a5b5febcc9eb34f87568f3f791b8529c49fcc178a98ae84', '711184255c2ceb868fa8f3cc86dc56b4e790c997ccda51de096ae77f100ecdcf', '1762080dda92f7dc58bdae0345ca9e940b1296b4e35fb8899cd591c12336a845', '50348d8426021c0d8b8f3b6640b089e488229714e11a4f428f70d7579ea614d3', 'b27033fb1e73268612fcb81f0befa18c3fec496719cbe8dcac5c6139ba5f0d39', 'af67af3c647a78311f2f6fc0509b77012aee27f03859e205a9ec409172268519', 'fbaabb5c9f4f4ff706f075c60ecb64c5cd38d6d726abae3228ca76242b3efe54', '10c7807ffc77707bd16415a03ae2896eb09510178824abaa9a053faa531c7af9', 'aab2c4f7b5b8491da177b8cd50fee763ca093c7f8f4d0bef3cbf4a3b85d8d8af', '2f183e723d46c40822fbbe4cfb6a86812d37beb085d9e0b051bedb8d24f5abec', '7270d303e58506d7199f9ebf1895fc46d0d0f1111caccb3bda8452974950817a', 'e48a2be73401a9daf8e560e2d38702fbefe647dbf08d96c0b532f0d6cb92d7fc', '3b3f41f7ded78c4f2e18f5decc80f311e23dc9456b9cb387f618925c94c910fd', 'd41cfbc62295217d85a75c17b8860a6ad2e9b8871a6502b5980932a855792191', '8328a2ab8d4d22f8a098c8fa5a113a4a77c708c7d2c8fd358dd0cf0633b1edad', '79781dd4afa7f34bc5d44341e47867c297e1b70614377a3e080f2a038a835691', '406aa2cce2cab9a606a1eb0675c7b6987c45e748b9f08d6627855cce91987c1e', 'd07571f366db3c7769e74b2c52a11446f6e52107327beccf367d7b00a243df07', '23bff6715c450f2af6f56a42862ac5006eb6037fbee549c5820ddaf2afca7e5d', 'fb74c39476d08a0aa60a9721d7a6e40bf5b1ba99470249a65bf2ba07e82fe809', 'f4901d0a7a50086aa09b11854a2b29402f04a317b4f14a39c2de0a8462e3b3df', '9a12b54576598e4e4d95c8ea6613089e572230642cf8e58c8cb018114ef9c78c', '228538dfb91f2e44d9251fb35e6e27943aca9ea712c423f9da7d0676b652a5c5', '11adb79f9ce23a0eb315e802d1b84565074fc4baa345e7fdcc2c6091b0f24782', '7e41da5dca99a5746add768e347589b535cd3f381088253f6254e6e84b7b34cd', 'f91ad18de278c2dcdde608474b127cc3ced0dd97a4feea3b8cc6ddb3520c9da2', '07e6062efafcc626a1b00e40cdf631eb4e1a18ae8494db53f41eb19a9ac663b0', 'e889d04a1de5f9edb637bc37a7c6b8366cb6b921c858fd006c15f686a8c82bb1', '5b0298526c97f6412d1c093051b04405ed5c95455ca7f05889492df6aa48741f', '43074412a082ed8cbc621a407e891701a69aa39d00c4c9ec2c46cfaff01f4cf4', '27602fc32e9a804bb75be9dc67d3e052f11c63118fbb2fe836eeeea7864cd036', '7f8a842de1116cfde8fa14f3fc9a1318a674f114b386b3bbe7c31cf538fce99f', 'a0c57d52f0c53487342cb7f99e8a5249741ec952cffa93204629063921bb25f5', '04ef35699d713641228c839f4763ededcd6f368ee90cc427c97e091751bd80e6', 'c5eb47ec5ab9248903a905f9524dd2fe72a0a320c5f04a9f76d9a1b02c021a78', '0ceef066efa3664fef7d98420daf339967cd37b5aadb72d7bb701bc92a6c5de7', '4a70cc290607cf1b3d358f96c1ed1f83ae1b097070f89c914e001cf732b1c3fa', '8a0d0c124c6b77e937b959350ba3008534677762397baf8d68ab1dacdf79be67', 'ee99ffd05dbd5eca72251546c0bb2f887eff6c7f32ea79d28901d830d437cb6d', 'c0a95d7c4f4c226e84799ded59e93d48063c799367d7154a0538e80aff69691f', '196bfdf96535bbbadea6130366852ff825461f954272eb5313afbdd604201d10', 'ec444b55c26445082a439676608cf269a2d9babfbabc7e4166d2ee89bdefe061', '4960a19eed992dfb402d0d3efa899fc66515c54a20bf08bec7fbf5bba299eb95', '45252e4d10a0371ccccb48dcdd7c42c697fe7bf232ebb2d462af8a4f85474420', 'b4d90ddcc8d2fb30ea4889e5319cd9026c7cefc0a4338e63c117dcb16ae59603', 'c6a87c513eebc4a47a9e529a9564fd7d263de44cc7fe2e6a061aafb09a6906a5', '686bb67995439a03476936970fef95089c565bdb6741664588fd58478b7860f3', '4e2310ee5f5d95ea17878f558406e24d10e6234a614fd960bbcddcb2ccd25dd4', 'bd1182f6b676c13dfc0ab28097dc43eac43554006854ab785b20b4a6bb307b73', 'bf47c654ee6329bdb1e07dbc783e959d10e431775861c9a5ebed0e3e51f05906', 'adec36c9c7f979aa638bb6c4f43a7b3f7641c14dc67e72508abac0a6a4dfe00f', '269f4eec875a22bcb89e45e232004ce518b074b18ab8f76e27deff263411cbad', 'a50fb39d7c2ad9fe0ba2f9b9ab0e3593d49d1ff00120bc30cf8c568d5bf56378', '10363caaf2906b084a1a9e84a520f32b6b213e59d9378e26a800fad37cff1158', '7cb7c0eb5d8d44ed0aa7aea5220477df3b55dd1b00031d1eac7a29125d28f02b', '336e8a364b6097e00bc83c383cfd63f1b71035df9412d4172597cdea7cedddb4', '001d936bd9b95b06b24b30a392cf2fb5e81a3a3a0fe1076fb745048d5f1ba058', '269d8eb9e601f8066ce1e5b2a9311d8a8feec2a9cd6710438d2b8f8a4765b1f0', '57a6db882f35aa0e820794629b3fd74c0978cb5100e2788dfe3b13714162614b', 'b46555fdfc9b6c9d0c54b9cb6f607568777deafa3a02249a5f0c0dd48530e719', 'febfd1f5863f355dd076044821423449e8e0be933b66f0dafb8b67338b5c40fb', '1f5edb6695d9b1feba673eab5696c2a21bd2de986578581a1f343ef2ca49f1de', '11e43c69873fea132eca999547b27aae50b47d324239f1c849b696d614f63e02', '0a5549f4be30076cdb18bf613f0f24d0ec8af2a738d6cddf93e4b57082d6f6cd', 'ed5b829a927f8f325f0af6ad504f4b442805513de50e1980608ab7f35e494d23', '84810d3a0bf0eafd7f91bb7455e18ccea60b40211eb8701ff4fcf20dd1541942', 'fe878d70a60de31be9d3004beaa33a6700af147c52c27620988181d6bee9dc8b', '1f73b5815f98d4c13d1b35e8a1e5b7a6d318cf2e6d09985908e8601fabdf44da', '4817098d73b29c2462880be2d4611613fde9bf3fac2921511adcf48a323d6269', '251c7f15793d64a94df08be7a849a55f0fa907cca54f3dc5a94f20bf5aaf298d', '4d747c67f86a6fcc9fc88fcf16e2115e9994f994eef6cd7dc351062a6a3d5b68', '23acf21a53a2b6f6cf379645085cff65bfe3e37df96fa86d351f73138efae6fa', '7de76c8281dbdc5a64464ea94dc109e7672625e92d1b9a149b5cfdb729997a79', '4d4368cdf18b874b85ea218d9dcaf5762d38f2e9e0ebaec6c852ac2500deca2b', '77ddce777cbceaa4cfdf82a198c56c13fd4760481400091e776e8a7fe3d6d24b', '884ed1480e1b80bd16d3bfb06419fcee47f762ae4c0a387217ebafd740186ef0', '9d756fb491a10fc6ffde2f63ff5055d489eb318873d5cd0dcb6ae5ae5674b3b4', '8dc7fc3250622998ae247b3805eb84179feb77dc050584da27a742c708bf759f', 'b3c1d8411855fff7ebdf1ee297d39556550870e38886208539b240c19846019b', 'f782b9ecaf6115a77bcd54b73b8cf249e0cdc1d5de9f542f2a6e30543e54696c', 'f68f44fbb2f6a71df93133cf632681b9247f2cafa44a9ebd931c61de11c15079', 'd3c555f6b9959ec1bc638f318846621ba64cd84557694f6740435d99f90811a8', 'b687382ed1311baaad82caa80a5223fad1675ebc61e3d6b672cfab4f0a6e46c7', '892d66da6fcbed2a08c02017efeb0ae59f7622542d74357f43d461d34f666b51', '2e78aa91ed5db8e3b470335a7972fcbf018492bcd09364e37e0521be02413f1f', 'a8c19996a0c2c16e2c212325e4869760d682cde5d43c4eda8beb666e85fb5454', '49f98a9ce9d5e4c3931361bec7005aaa705a1eb59d453b866f4a7d1a3be26df5', '2612553a2c4db66817390763a581ff6d814479a9825faca926c491212a79e20a', '08029f1e995889c9c7c76752432789f4f5bad7b73032a41e9edf2a2c0b8b9807', '2a9d75fd7f48a96be8fd30e5c5191198d2723ffaf95664ed6ead2387bbbcd21a', '66909a69b80221c8cdd6439121e7381dbf1b3bdf423329ec8ef3f8ace70229f8', '3b4c9225947027411dcd75f222dc23898748db8673627dab8266890dbfd0cbd3', '0c444c3e6f5fcf3bb765726d9684f395429318ace42bfe7f22f49cde96e9d920', 'b2226ff35d689ff1280f117bd550de3b182ed01c6c81af12856234514991af13', '0008e0182ac8f8f389215489ef27d09ed9878fafc1c196efd9690cb95432f364', 'a8bc33ede8b14f32d18deb9e3a826d92dff5a40672afa4d4df064a4a8230abb5', '54df89570ccb5cc40ca66cb8a4fcb7877916f99928bf8f04a05e74410c5e98cc', '5d6647b525d6316f0ccf2bda446966770447eea394c05ff77330b253c9a0473e', 'dea13d5e74f3b5dace5896504dd9d3ba4cd3de9ffef7d8744503a81df1390be6', 'c925672834f5e19bb6390ef861c62aca2ee578bf801ea441efe13a6a5823c54a', '7a3857e2a3e64c6c0b13ad280110d4ebc45a7019ce7a43ba9909b35bb64eb37f', 'eba3ddb88961fb9526770b59f0be39cd9b20cf5fda506117f43c5688b1a9bac9', 'a154244e35c1dd220e324def70c3bc3585fd789da9420ae7b20f805057c584e6', 'b354f5bc9d7c194f4dc8ea09920c3cb79f396d1e4675e0a259afbf3e456b39fe', 'a2eea338a1207b1f4b45b558e349a664556f60b5602d8ad084b3e36cd9968411', 'cdfeab0046c816c0baf240c9990be89a83a29e68962f369a75504480fe1fb0ae', '84770518e8406740c5774517dce7044a207597025f337560d2505686b16ee2b9', 'c40a83ed8912e40448790c9061472646de54e375d8f3532769bea20be117591f', 'f8f80c17beec8bd6ec4060db485cbaa47857f2aed699a9c24a63fc5b1c9a5d69', 'ec1402ce882c029880cbe9326b28e9025d3003eac345f97adc7b154de41c9c11', 'a6066e18e3a0da1e4b3980ec5dc3205af144d9117dfa59f7b236dcb37e7ba116', 'd1bdeefd9c24e8798744017a47f3f6894fe6734dd286e395df67577213d3093c', '704e370d450c00c6e575d3575a035afb06946ce6bc79dd0b59360b5dfb517ed7', '6c17e1baa7e5e6dd9a285fb17f969a4f231262830ebd5a6c75faabf8e557d0ed', 'ea6252165fdf4741db7bdb52c280144320cb5e0260376ee8f34714c5158887b9', '5c5ecbb47a99cc649f5ea9f28a3c06a04e2755e44211781007ee41360e31a0a4', '6448828ebed74e4cafb5a94866cbe43310621f397be97c4315ca6725d8ace1ae', '2e594b1dd4eabc8bbf5cf5fe7b94c987b36ee76805508e5a1d2c316ddd1614f1', '4f3775fa3eed99e0588e13c4826dfa0ae8fcd90a804c01af8037c5671191900e', '8b7d36365a85bd6a57c4d7f0f2fc39c9c83732373afabcf736ac0037eaa63160', 'c0c6e997f9a5361c94d45d04fdacc2e24ea9ddb6035633132bc949242236cef5', '93b82671d84cb9599f8501581860929a8f53952733505c2d91022b923f19df1b', '63b2112232f2672e4366779f213ad939b16483dee14c3b785900967dfb79cdaf', '526aeaaa36a2ad9e10f6b593713a0e1fd2204970ec7f3987639ff025e095827c', '829a2107acdd3b5bd48bac79def9305ffb96bfe9293939488a2c4e11e2a0553d', '6cfb179d72b9e849ab996ca815de69e8c87198192373b6eb21ba878a23245005', '1ffce7ab2ab6d65f5f085800a46ba8ef7e4baf29ef0a63d699de99965dcbc8b7', 'eadc6f937ab3a7a496e46ec7c07efbbbdc0daff0fc085ebda37f6db169590783', 'c4d9d954d80b86641a8b23a081f94a4937b32de38c4f66b74eaef8e02283f3fd', 'bfaa6a1d42796b92e1f4231cd77dc1ff9423f0b8e802f7279382558be5d427e6', '7b63ccd41ab4b2dfac21572d03325ccfd5e8dac4c9e87d41d7b63d1fda8081a2', '991d9cff432a3edacd4b5b3062d8b4a6866d4cc09f9eed2f1d7dedea53d9e049', '8ad6b0bce92798998f2bde8518c6fe71493146969fcde379dcae4454ac3ec5f9', '21abf8343f5f94184ff01cf9580b20aa8c211e45a40474d087720bcc9192ad23', '13d109532af5241f9f343fa77a46e04bc15528e54d4559c2975f227c2d223686', 'e4b6c68f54e621e46fbd15ae7c2d5f83007972234d9bb3f55fd8554732c5b829', '0f29740915e8c301f9dc5ace8bb02a69157a8dce891fa43446f5cdae17af168a', '478728b706381fb19ef91fa90842c8c53ae657aa91fae3b795e157bb49838040', '64d69a29e214056cba90f09467058fc1f8e8a2b858b24c907ef38f97f6d4a30f', '56b427e7f06f8ed8ea01b384c0e1d1c53ab3630f3905396db51d6208da1edc9e', 'e0348c828a4181d9610ecea00f003c462e5b7000b90dba1d7bc59e487135f476', 'ad9aba2c84406fe2b2b082c0f3e1e191d1de41bf261a3707081b2017b3e1b587', '1a2640f142fa756a05b7b3ee4ea54cc85031bf7d3441b86d4e41413cb0936634', '27c5c18b9ea8793b4d2a5dc911cb731d929c74366bdf5977bd5548f41a19fbae', '87c4acc7c46e0cfdd2442c211660e2817a06648d1d4211f5aa82d94b328e0cb4', '91bbf3dbe790ac234763ce1d28c3c269f7b34d4e6f0ced765aa0450ce742797a', '00499461136da89b69bb8f252ef3e13ed57fa99a009e68553d534dc6a0cff322', '88851bdcc1bb3e9728a3d9addf4509429bf0f2e279194871ab322598c1eef331', '80ce03bd6fd99402b5b5982b7fec23dc22fb48e78b4c07547e5ea4c9e28ee695', '7eb8c857dc111decf4fd0ae6276846c771401be9384808d80133827155811abf', 'ba13a6770ee2cb88c8050f97469c022fe9d502fd91703667972ae2e168e8e373', '0570b083fdb91b62029f18b94b438a2c55d18a849f53aa332083296824ae0a86', '82fd6fdcc09627414faad2b9c24500ed8ddeb284b6727e4faa5a666d06282369', '18f5cab07cb6ce1e0e84fadf1d8a529a66eaa7dda6061a75e51881b6121b3051', '9fdbf640c879c57bf9cfd389b3a0649762c4cb4093b9cccd6ffc5fa06f8a28de', '07a78d55fc17a2809e031116e71ac63faa6c2ea9e29480b4fa59031683b506b8', 'a32697f1796b7b87d953637ac827e11b84c6b0f9237cff793f329f877af50aea']]"}, "return_value": "True"}, {"func_args": {"seq": "[['2816834ee88fc1c5d2f36f27d8cc4f53b2fb0cc9d72dd5562c8f1dee8aa902ce', '609732aada2b42ca6c706db2973f42efb5241c587ab8158a9c4d8822e2386c97', '847b3b3c29e3b59cb2b798acbcc091c222ad17c3e984bfab89785039f5d5f088', '2d8fda602a4fc611fe63fe1a4a1ebbae4b36b4ce6167bbbe43365f208e5a9199', '61211d10c17fd44d40262f33a741c1e53d7c504f569fb4323909c57b7c9d6d84', 'bd474f24754c25a388972fa51a5bf6f65131413bbcee5e9a3fa61827b9d27191', '6c4faf799121ab49837f82797e4a31b515e469416cb1725abfa098c9a470e2a9', '793b96262b397fadb4b391e57fca295ad5f14961cfa466965b32a58342792e33', '5286e339f1db9706c074fa9562c2d9e77e61e872b4f70d132b2a7a3d742e3583', 'ef4daf92f7aa39500755abc41b6c904af891e77b038e852af6d69087880eb31e', '84792f135b293cf4056ec8fbc2ff9e10aaed8468fe0c8fd5ec8861d886011501', '73a6d2b56bba58dabb86fb6be5358c52be178028b7dc592110a44f2a20b3eaea', 'b5e6cb0cd17526a394343b1a2007e199d6d9ed0e3b37612abd8ed52b36a6fb23', '66945be17108a0b7d55cc6e8f2423a26bac927e683e524a3144dcab419290f79', 'a5ad19606ef9e538cc172aeb27219d1e492c84edf8426ef0469ac4a5961a34cb', 'cb271059b186c7e21e721af4edf9668378d46ce45ff75e663409ce781826ff98', '91fe844b16647904bb079c11016c225bfb53d19d3dd23d6d89ba16c3935aecdf', 'd593fd84799eb024eb57d51eaf9a72a75e95cdd1084ea452946c78ca39acb875', 'b12f039096a1db0456a8908e313c7fe0102f5232811624f06786fc4bc304bebf', '5257a2ac4a332586c836dd40fc97a4cc3376b18409935cf9640a981fd35e8b90', 'c318ebdbbd6c4cb2e859fe5acda0f829d977f87306dafdd4f1b89b2de1f1a278', 'e321f4fddb107a3f853294e0ca14888c150e42470f069c8fb450d6d5ccf07bf8', '86834ebd73e7a79cc9549e775cf3691660d0578cfc498e8f901eb75bddf92c11', '297ca4943d35c9a82c0cf236993bd1f91e4edd6164e008373d80112c62ce325b', 'd7165979b231fb146a7d4f71f02cc528ef8e2dbc1936c50758e28d2988b711f9', '6bdc9e53acf4a5d689074bbbe2b72708ed18161ce5b55c99db96edcbc0a27fa8', '3368a69ebbecd9647a51ac753a18db8119da8320343d4acf06b357c9838c6e13', '0eda34fae6c9ac181f06ae2e0567728e0e680387f79e2cbaf3016e6f5cced091', 'b78cdad220d7b76c36e08a036ea5014859e4d35f5a136604f6e34b5a8a902945', '3e11645b71f527c5c95abbc7590c8d71f5f85f3e7d2af0afb4ce2c1ffce8751a', '62ac4d55f4ea4555eefe97cedd1496876a77e985f5356e42bcf475fb99a5b880', '36f37668b5ce0c89ac18dcca96dbb291ca60e200b992d3cd3744dfb6c948d6f7', '3d2b2fdd972b36a590e0dff3a8a3cc14d1f5227fd385a311d6477449cfd8593b', '4cd9b6a5ec78a0b7c856a040c973cd89c7576b82c523db2497445fef448232f3', 'b6a4e32b3a9663b1095409037ec1c0fffa4bcafec1053444ae63663d3741b3f3', '37a1058daac4a91136f670882cf1646bfed1c28d5b955ef0bb28008f0e2e9d12', '2669d2a9078781811260df12ac8c69f8f10940d1b4e7b43016141ebaa5fcd3b4', '1411f62d1f0a6b0682e12a4fe71c22c0b817f350ce8d62f3a82b3dccdfb28578', '56c33ee4e6d346f08a5dc15d24e20f18a5c9afe1274be6ac68dad87de589ad09', '4836ea18a4453916cd020f3bd6e4fccfe149fe5bfe667b7ff606dfcdeef780b4', '096540da2eebd75e2366953afa9b28a8e152c55e5a998489f638d8db897be7f0', '8e4e6c6c2002b971168ed02513f4e8cde18862cfbc2b2671914be9b9a57f5394', 'b37654ec77b8d07fb36267da7d00ea803e69d4ae9ef7542ad370f5077132b240', 'a269248e9414ab1919956137807b12540967444cbace0c984a5db05180e3b280', '440e2112cceda1e7905d414fd43771f0df84aa13790c1d72107133a944f36fb7', 'af4c10e0c95790744b8acc4cd3b44028236768f7d2fba97c7e59c139b62f56d2', '8171af99e86f3ec5ea7443bccefbd73d2e382f46896893d8041a391b48a5dc9c', '30e9baea243c0a50c3d8319590613b206d0b5b57da40a8ce7a86bf8539b1a77d', '670bfc59e56a6245754e472b4bbdecd726bb590e760f164a904650dd13515db6', 'c11877520e0da3607fce62dd6c8f7801e0d367589d74e69f55c6c49cdf3e1f10', 'db5cdd1442b5dba68056c1310323f48ecf9b5870d63671ac2583c3bc46b8ff06', '22482c5aa44d0c535d2a259123568cd865ee31158b83c3a4eac1dbc737edb13e', '7a8124547d1f981c724800841245c3be6c7fb70ee00649c4827c2171209d8a37', '6950ade214487c96350b5ebece962d1f838e4382790e8ad5c0ab1a7cc601ba41', '29d7f7b9b05b13af08323a1e4bdcdb2b22717c73bc3423545c9d68e763594b7e', '0c48b81bc1389f6d546a7d6162f935fbb21f353148f5a9c0fb0cd1f3f505b6f9', '6bd49ee46dd82c244d61f82729dd92a70dcd8894f7b42982f6f2c8ec108c4cfe', '5907abdb3b6c1e108403575ba71d0957c365994280ea7937c75027fd647e9572', '675a88d8f68d28ea0047eda8dd967bde1a16685520ee38f762c5c2c9e96a8f13', '16f2eddfca314c74a0243e643c0ffb9fb53fed185f82400f704d55ba3a484cfe', '1ba9269ba1885f5b77cada8d40790c94c4264dea2a03618db4c1a58e6bb38798', '2955a4b042cb2c96423b5d6603a268b87ba27485d36fe36bcdbd3729a49d4b71', 'b489bc0e51ba3a7e82753996608a02ffc78fba692e4e903d73b7aa36665d04a2', '19a9f90d8ec564318828e16c92e9038b71e181fa2f975ef31fd4281f865769b4', 'a8cdec1de97884de92d8451bb07223d34007221081584a46e68700465d4cb375', 'a8d7d4242d5a6e3fdcc74651d17e6ca3dd6134393b40bef8e5fcad78d15e5132', '60aca792c9f2feb8398ce907b8d798ab05b0b7c2fdf372cec18c5e0a85acb731', '36a711ab10d25f262b7e946aeed6e14142e1b999d42efa910311952067ef0518', '86df7641385c2986d93a4476ad0b5ed19e8af79c096c866f45089f19843061fe', 'b59dc130ab8178e6aed911a91333ac0abd3574e7d54abd36f4dfa30349cb05af', '17ce3bc58234d43711d80ad2df0c57091fc3a2e124dea9b9e0a797ed3a9393ac', '8b1f1baa93d29fb46f0c9ba0690d39b7c2d480679a8635d6d7cef12a87cbee02', '58f5505cbfa7c6e7d2d15fe65d558c890574c0d4fa567191d4357ad60f6dbfec', '0aa75ef831ce668e9c26467e761f2bca010dbab0f35f0bd2bab7039557c93a6a', 'c38385613855414eefefd0384e1141ef9084fa24d630b57f3939f89e02a06698', 'e735e601b425fe122a45bf3cc3d9762be083275555ed665f51ab7f7096889eb8', 'c39c3bcf275150ff3f60ab29f7ec6d0167a21695d722ef161c65a53a5336669b', 'f738cd8928f8e838ff34f62d76609c79e8785d55a9d3a0e905615df18872c112', '39886afec55cd4193e6c6752ed93c2769e2497b44c01f0a40370fa6dbb400b48', '75cad0ea2b5ffe7b0ce0d6ef0d4a38ca20df66a95ac8d85deadecb4a0d761ba8', 'cc27076c9ba8d6104e2846e6b35121f0640d9ec337083aeb9b0e4b27bb306dd6', '88c7b4c940bf45e24ffd3cf99a40594ca0278294f1c518f49f1422c63f41977b', 'fbd13d8a090ed9040eccdd2384813d43937b6e4aeaf14cb11720f4f396992400', '7a69318e53cccff133cd10f3165ae01fbf72a705e2e0998e96b653170a07c44a', '4821fab81643f924041bb7fb9615a872bb71ba983bb98c41674de5699eac0761', 'f71e1ffa179ae5be523934473c2bfb89e8844db47f33f89d05d2ff62ad8be8ee', 'bbff530de9b4265f17ad47c48e0998fcb2bcf6e603b4f5f2ad8185ad98123a40', '10d52cb88430a370935a94f5a0a31cbc69007d0f94d61082b83703206e390457', '79677763b5cc8880ad04203c48661e889d02d2fc842c912a131b835e1a54f53a', 'ed9731b4946bed9dd17704a1864de065ff6751a1ab8074059338df833f330518', 'c4d87d63534197129cea41f1c4cb3eac0921ef2798dfaa1690e0469399694f40', '13680234ccdb0579362cd6a1727b7f72d9304014a69a6b64646b6cacf7d8fe71', '9630a1ebffe1d8d4f6c8c30e937bca3b94c32c5cd699712b39ff2731e31474e6', '425022ba0507ec0abc60298830e753605e7b6da7931cc3d34ed9174eeb5bbbbc', '2b8f2905dd667a82eb1cad1237d4b3bad17ee4e206bf9ad7be2cd13b6a7bd051', 'f3d7695df020aff0421e6d790f160e24526b7fe05b99f51aaf23e3b876e0811c', '0bfa8bc0692c8a512d43afe7de02e25e092ec3a092b42aa7278677b4c68ffc31', '8540283bde661e496c751fee620a081b3f0206647293b50d8d4322b068174acc', '7a7590fbb320f1bd6837d0fe1f07e242194358794382ba0f543483558d580c6b', '576f62da6cd87b79880b02da082119c2e84c40a97da928deae513f050707e1ec']]"}, "return_value": "True"}], "text": "def all_items_common(seq):\n    initial_set = set(seq[0])\n    intersection_lengths = [len(set(s) & initial_set) for s in seq]\n    return all_items_equal(intersection_lengths)"}}